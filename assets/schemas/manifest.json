{
  "$schema": "http://json-schema.org/draft-07/schema",
  "type": "object",
  "title": "Marketplace app schema",
  "required": [
    "name",
    "code"
  ],
  "dependencies": {
    "requestUserAuth": ["user_auth_callback_url"]
  },
  "additionalProperties": false,
  "properties": {
    "code": {
      "type": "string",
      "title": "App Code",
      "default": ""
    },
    "id": {
      "type": "string",
      "title": "App ID",
      "default": ""
    },
    "org": {
      "type": "string",
      "title": "Organization",
      "default": ""
    },
    "name": {
      "type": "string",
      "title": "App name"
    },
    "version": {
      "type": "string",
      "title": "App semantic version",
      "pattern": "^([0-9]{1,6})\\.([0-9]{1,6})\\.([0-9]{1,6})$"
    },
    "autoUpgrade": {
      "type": "boolean",
      "title": "set to true for instances to be automatically upgraded when new versions are published"
    },
    "depends": {
      "type": "string",
      "title": "comma-separated list of dependency requirements, $package ($version)"
    },
    "provides": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "title": "array of SKU's provided by this manifest"
    },
    "type": {
      "type": "string",
      "enum": [
        "system",
        "internal",
        "custom"
      ],
      "default": "custom",
      "title": "type of the package"
    },
    "instances": {
      "type": "string",
      "enum": [
        "multiple",
        "single"
      ],
      "default": "multiple",
      "title": "number of instances allowed"
    },
    "primaryCategory": {
      "type": ["string", "null"],
      "title": "Marketplace App primary category",
      "enum": [
        "privacy",
        "asset"
      ]
    },
    "secondaryCategory": {
      "type": ["string", "null"],
      "title": "Marketplace App secondary category",
      "enum": [
        "privacy",
        "asset"
      ]
    },
    "rules": {
      "type": ["object", "null"],
      "title": "App rules",
      "additionalProperties": false,
      "properties": {
        "view": {
          "type": "string",
          "title": "rule expressing when the app is visible",
          "default": ""
        },
        "install": {
          "type": "string",
          "title": "rule expression when the app can be installed",
          "default": ""
        }
      }
    },
    "capabilities": {
      "type": "array",
      "title": "App capabilities",
      "items": {
        "type": "string",
        "title": "App capability",
        "enum": [
          "permitPropagation",
          "permitIngestion",
          "rightPropagation",
          "rightIngestion",
          "tagOrchestration"
        ]
      }
    },
    "supportedLanguages": {
      "type": ["array", "null"],
      "title": "App supported languages",
      "items": {
        "type": "string",
        "enum": [
          "en"
        ]
      }
    },
    "supportedPurposes": {
      "type": ["array", "null"],
      "title": "App purposes",
      "items": {
        "type": "string",
        "enum": [
          "essential_services",
          "prod_enhancement",
          "analytics",
          "behavioral_advertising",
          "personalization",
          "tele_mktg",
          "sms_mktg",
          "email_mktg",
          "mail_mktg",
          "data_broking"
        ]
      }
    },
    "supportedRights": {
      "type": ["array", "null"],
      "title": "App rights",
      "items": {
        "type": "string",
        "enum": [
          "delete",
          "access",
          "correction",
          "portability"
        ]
      }
    },
    "shortDescription": {
      "type": "string",
      "title": "short description that appears in search results and galleries",
      "default": ""
    },
    "detailedDescription": {
      "type": "string",
      "title": "detailed description that appears on the app details screen",
      "default": ""
    },
    "permissionNote": {
      "type": "string",
      "title": "App permission note shown to the user when asking for authorization",
      "default": ""
    },
    "permissions": {
      "type": ["array", "null"],
      "title": "App permissions",
      "items": {
        "type": "string",
        "title": "Permission"
      }
    },
    "infoURL": {
      "type": "string",
      "title": "App info URL"
    },
    "setupURL": {
      "type": "string",
      "title": "App setup URL"
    },
    "homepageURL": {
      "type": "string",
      "title": "App homepage URL"
    },
    "customerSupportURL": {
      "type": "string",
      "title": "App customer support URL"
    },
    "privacyPolicyURL": {
      "type": "string",
      "title": "App privacy policy URL"
    },
    "statusURL": {
      "type": "string",
      "title": "App status URL"
    },
    "tosURL": {
      "type": "string",
      "title": "App terms of service URL"
    },
    "docURL": {
      "type": "string",
      "title": "App documentation URL"
    },
    "logo": {
      "type": ["object", "null"],
      "title": "Marketplace App logo",
      "required": [
        "link"
      ],
      "additionalProperties": false,
      "dependentRequired": {
        "width": ["height"],
        "height": ["width"]
      },
      "properties": {
        "title": {
          "type": "string",
          "title": "logo title",
          "default": ""
        },
        "link": {
          "type": "string",
          "title": "filename"
        },
        "width": {
          "type": "integer",
          "title": "logo width",
          "default": 0
        },
        "height": {
          "type": "integer",
          "title": "logo height",
          "default": 0
        }
      }
    },
    "previews": {
      "type": ["array", "null"],
      "title": "Marketplace App previews",
      "items": {
        "type": "object",
        "title": "Image",
        "required": [
          "link"
        ],
        "additionalProperties": false,
        "dependentRequired": {
          "width": ["height"],
          "height": ["width"]
        },
        "properties": {
          "title": {
            "type": "string",
            "title": "Image title",
            "default": ""
          },
          "link": {
            "type": "string",
            "title": "Image filename"
          },
          "width": {
            "type": "integer",
            "title": "Image width",
            "default": 0
          },
          "height": {
            "type": "integer",
            "title": "Image height",
            "default": 0
          }
        }
      }
    },
    "contacts": {
      "type": ["array", "null"],
      "title": "App contacts",
      "items": {
        "type": "object",
        "required": [
          "type",
          "email"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "title": "App contact type",
            "enum": [
              "technical",
              "marketing",
              "finance",
              "security"
            ]
          },
          "email": {
            "type": "string",
            "title": "App contact email",
            "format": "email"
          }
        }
      }
    },
    "expireUserTokens": {
      "type": "boolean",
      "title": "Expire user tokens",
      "default": false
    },
    "refreshInterval": {
      "type": "string",
      "title": "App refresh interval",
      "pattern": "([1-9][0-9]*)h",
      "default": ""
    },
    "requestUserAuth": {
      "type": "boolean",
      "title": "Request user auth",
      "default": false
    },
    "userAuthCallbackURL": {
      "type": "string",
      "format": "uri",
      "title": "App OAuth callback URL",
      "default": ""
    },
    "redirectOnUpdate": {
      "type": "boolean",
      "title": "Redirect on update",
      "default": false
    },
    "webhook": {
      "type": ["object", "null"],
      "title": "App webhook",
      "required": [
        "url",
        "events"
      ],
      "additionalProperties": false,
      "properties": {
        "url": {
          "type": "string",
          "format": "uri",
          "title": "Webhook URI"
        },
        "secret": {
          "type": "string",
          "title": "Base64-encoded webhook secret used to sign events",
          "contentEncoding": "base64",
          "default": ""
        },
        "authorization": {
          "type": "string",
          "title": "Webhook authorization header used to authenticate to the webhook",
          "default": ""
        },
        "events": {
          "type": ["array", "null"],
          "title": "Webhook events",
          "items": {
            "type": "string",
            "enum": [
              "ping",
              "rightInvocation.created",
              "rightInvocation.fulfilled",
              "app.installed",
              "app.refresh",
              "app.uninstalled",
              "consent.propagated",
              "tag.activate",
              "tag.deactivate",
              "tag.requestList"
            ]
          }
        },
        "maxQPS": {
          "type": "integer",
          "format": "int32",
          "default": 100
        },
        "tls": {
          "type": ["object", "null"],
          "title": "TLS configuration",
          "properties": {
            "insecure": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "form": {
      "type": ["array", "null"],
      "items": {
        "type": "object",
        "required": [
          "name",
          "type"
        ],
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "The key field is where the data will be saved to. This must be unique per field.\n For example, if key = 'customers' then the value of the field will be saved in data.customers"
          },
          "title": {
            "type": "string",
            "description": "The name or title for this component"
          },
          "type": {
            "type": "string",
            "description": "The type property will be used to select which component to render on the frontend. It cannot be an existing field type",
            "enum": [
              "array",
              "string"
            ]
          },
          "showOnView": {
            "type": "boolean",
            "description": "If true, the field will appear on the connection overview",
            "default": false
          },
          "showValueOnEdit": {
            "type": "boolean",
            "description": "If false, the field value will not be shown on the edit screen",
            "default": true
          },
          "editable": {
            "type": "boolean",
            "description": "If false, the field cannot be changed",
            "default": true
          },
          "required": {
            "type": "boolean",
            "description": "If true, the field will be required to have a value"
          },
          "minLength": {
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          "maxLength": {
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          "pattern": {
            "type": "string",
            "default": ""
          },
          "placeholder": {
            "type": "string",
            "description": "The placeholder text that will appear when this field is empty",
            "default": ""
          },
          "default": {
            "type": ["string", "null"],
            "description": "Default value will be the value for this field, before user interaction. Having a default value will override the placeholder text"
          },
          "spellcheck": {
            "type": "boolean",
            "description": "This setting will enable spell check on the field.",
            "default": true
          },
          "multiple": {
            "type": "boolean",
            "description": "If true, multiple values can be added in this field.\n The values will appear as an array in the API and an “Add Another” button will be visible on the field allowing the creation of additional fields for this component",
            "default": false
          },
          "data": {
            "type": "object",
            "properties": {
              "oneOf": {
                "values": {
                  "type": ["array", "null"],
                  "description": "These are the values that will be selected on this field",
                  "items": {
                    "type": "object",
                    "required": [
                      "label",
                      "value"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      }
                    }
                  }
                },
                "json": {
                  "type": "string",
                  "description": "Enter a JSON Array to use. It should be formatted as an array of objects with named properties",
                  "default": ""
                },
                "url": {
                  "type": "string",
                  "description": "Enter a url with a data source in JSON Array format. This can be used to populate a Select list with external JSON values",
                  "format": "uri",
                  "default": ""
                }
              }
            }
          }
        }
      }
    },
    "identitySpaces": {
      "type": ["array", "null"],
      "title": "App identity spaces",
      "items": {
        "type": "object",
        "title": "App identity space",
        "oneOf": [
          {
            "required": [
              "code",
              "name",
              "filters"
            ],
            "properties": {
              "managed": {
                "type": "boolean",
                "title": "Whether this identity space is managed or mapped",
                "pattern": "false"
              },
              "code": {
                "type": "string",
                "title": "App identity space code"
              },
              "name": {
                "type": "string",
                "title": "App identity space name"
              },
              "description": {
                "type": "string",
                "title": "App identity space description",
                "default": ""
              },
              "filters": {
                "type": "array",
                "title": "App identity space filters",
                "items": {
                  "type": "object",
                  "title": "A filter",
                  "required": [
                    "type",
                    "format"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "App identity space filter type",
                      "enum": [
                        "email",
                        "controller_customer_id",
                        "android_advertising_id",
                        "android_id",
                        "fire_advertising_id",
                        "ios_advertising_id",
                        "ios_vendor_id",
                        "microsoft_advertising_id",
                        "microsoft_publisher_id",
                        "roku_publisher_id",
                        "roku_advertising_id",
                        "unique_browser",
                        "telephone"
                      ]
                    },
                    "format": {
                      "type": "string",
                      "title": "App identity space filter format",
                      "enum": [
                        "raw",
                        "SHA1",
                        "SHA256",
                        "SHA512"
                      ]
                    }
                  }
                }
              }
            }
          },
          {
            "required": [
              "code",
              "name",
              "type",
              "variable"
            ],
            "properties": {
              "managed": {
                "type": "boolean",
                "title": "Whether this identity space is managed or mapped",
                "pattern": "true"
              },
              "code": {
                "type": "string",
                "title": "App identity space code"
              },
              "name": {
                "type": "string",
                "title": "App identity space name"
              },
              "description": {
                "type": "string",
                "title": "App identity space description",
                "default": ""
              },
              "type": {
                "type": "string",
                "title": "App identity space filter type",
                "enum": [
                  "email",
                  "controller_customer_id",
                  "android_advertising_id",
                  "android_id",
                  "fire_advertising_id",
                  "ios_advertising_id",
                  "ios_vendor_id",
                  "microsoft_advertising_id",
                  "microsoft_publisher_id",
                  "roku_publisher_id",
                  "roku_advertising_id",
                  "unique_browser",
                  "telephone"
                ]
              },
              "format": {
                "type": "string",
                "title": "App identity space filter format",
                "default": "raw",
                "enum": [
                  "raw",
                  "sha1",
                  "sha256",
                  "sha512"
                ]
              },
              "variable": {
                "type": "object",
                "title": "Variable definition",
                "required": [
                  "location",
                  "name"
                ],
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string",
                    "title": "Name of the variable"
                  },
                  "location": {
                    "type": "string",
                    "title": "Location of the variable",
                    "enum": [
                      "window",
                      "cookie",
                      "dataLayer"
                    ]
                  },
                  "jwt": {
                    "type": ["object", "null"],
                    "title": "JWT details",
                    "required": [
                      "location",
                      "key"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "location": {
                        "type": "string",
                        "title": "location to find the variable within the JWT",
                        "enum": [
                          "header",
                          "claims"
                        ]
                      },
                      "key": {
                        "type": "string",
                        "title": "key of the variable within the JWT"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "workflows": {
      "type": ["array", "null"],
      "title": "definition of workflows",
      "items": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "title": "code of the workflow"
          },
          "name": {
            "type": "string",
            "title": "name of the workflow"
          },
          "readonly": {
            "type": "boolean",
            "title": "set true to make the workflow not editable",
            "default": "false"
          },
          "options": {
            "type": "object",
            "title": "options for starting the workflow",
            "properties": {
              "taskQueue": {
                "type": "string"
              },
              "workflowExecutionTimeout": {
                "type": "integer",
                "format": "int64"
              },
              "workflowRunTimeout": {
                "type": "integer",
                "format": "int64"
              },
              "workflowTaskTimeout": {
                "type": "integer",
                "format": "int64"
              },
              "memo": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "searchAttributes": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "retryPolicy": {
                "type": "object",
                "properties": {
                  "initialInterval": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "backoffCoefficient": {
                    "type": "integer",
                    "format": "double"
                  },
                  "maximumInterval": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "maximumAttempts": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "nonRetryableErrorReasons": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "steps": {
            "type": "array",
            "items": {
              "type": "object",
              "title": "step represents a step in a workflow.",
              "properties": {
                "activity": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "step": {
                      "type": "string"
                    },
                    "fn": {
                      "type": "string"
                    },
                    "next": {
                      "type": "string"
                    },
                    "options": {
                      "type": "object",
                      "properties": {
                        "taskQueue": {
                          "type": "string"
                        },
                        "scheduleToCloseTimeout": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "scheduleToStartTimeout": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "startToCloseTimeout": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "heartbeatTimeout": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "waitForCancellation": {
                          "type": "boolean"
                        },
                        "retryPolicy": {
                          "type": "string",
                          "enum": [
                            "terminate",
                            "requestCancel",
                            "abandon"
                          ]
                        }
                      }
                    },
                    "params": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "childWorkflow": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "step": {
                      "type": "string"
                    },
                    "fn": {
                      "type": "string"
                    },
                    "next": {
                      "type": "string"
                    },
                    "options": {
                      "type": "object",
                      "properties": {
                        "taskQueue": {
                          "type": "string"
                        },
                        "workflowExecutionTimeout": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "workflowRunTimeout": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "workflowTaskTimeout": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "waitForCancellation": {
                          "type": "boolean"
                        },
                        "parentClosePolicy": {
                          "type": "string",
                          "enum": [
                            "terminate",
                            "requestCancel",
                            "abandon"
                          ]
                        },
                        "memo": {
                          "type": "object",
                          "additionalProperties": true
                        },
                        "searchAttributes": {
                          "type": "object",
                          "additionalProperties": true
                        },
                        "retryPolicy": {
                          "type": "object",
                          "properties": {
                            "initialInterval": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "backoffCoefficient": {
                              "type": "number",
                              "format": "double"
                            },
                            "maximumInterval": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "maximumAttempts": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "nonRetryableErrorReasons": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "params": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "gateway": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "mode": {
                      "type": "string",
                      "enum": [
                        "split",
                        "join",
                        "single",
                        "multi"
                      ]
                    },
                    "next": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "variable": {
                            "type": "string"
                          },
                          "operator": {
                            "type": "string"
                          },
                          "operand": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "start": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "next": {
                      "type": "string"
                    },
                    "params": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "finish": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "params": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "activities": {
      "type": ["array", "null"],
      "title": "definition of activity objects",
      "items": {
        "type": "object",
        "required": [
          "code",
          "name",
          "icon",
          "fn"
        ],
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "string",
            "title": "human-readable identifier for the object"
          },
          "name": {
            "type": "string",
            "title": "name of the Activity as shown to the user"
          },
          "icon": {
            "type": "string",
            "title": "filename of the icon to show"
          },
          "fn": {
            "type": "string",
            "title": "the function to be executed"
          },
          "options": {
            "type": ["object", "null"],
            "title": "the options for the workflow object",
            "additionalProperties": false,
            "properties": {
              "task_queue": {
                "type": "string",
                "default": ""
              },
              "workflow_execution_timeout": {
                "type": "integer",
                "format": "int64",
                "default": 0
              },
              "workflow_run_timeout": {
                "type": "integer",
                "format": "int64",
                "default": 0
              },
              "workflow_task_timeout": {
                "type": "integer",
                "format": "int64",
                "default": 0
              },
              "wait_for_cancellation": {
                "type": "boolean",
                "default": false
              },
              "schedule_to_close_timeout": {
                "type": "integer",
                "format": "int64",
                "default": 0
              },
              "schedule_to_start_timeout": {
                "type": "integer",
                "format": "int64",
                "default": 0
              },
              "start_to_close_timeout": {
                "type": "integer",
                "format": "int64",
                "default": 0
              },
              "heartbeat_timeout": {
                "type": "integer",
                "format": "int64",
                "default": 0
              }
            }
          },
          "params": {
            "type": ["array", "null"],
            "title": "parameters",
            "items": {
              "type": "object",
              "required": [
                "code",
                "name",
                "type"
              ],
              "additionalProperties": false,
              "properties": {
                "code": {
                  "type": "string",
                  "title": "human-readable unique identifier of the parameter"
                },
                "name": {
                  "type": "string",
                  "title": "user-friendly name of the parameter"
                },
                "type": {
                  "type": "string",
                  "title": "type of the parameter"
                },
                "default": {
                  "type": "string",
                  "title": "default value of the parameter"
                }
              }
            }
          },
          "outputs": {
            "type": ["array", "null"],
            "title": "output values",
            "items": {
              "type": "object",
              "required": [
                "code",
                "name",
                "type"
              ],
              "additionalProperties": false,
              "properties": {
                "code": {
                  "type": "string",
                  "title": "human-readable unique identifier of the output"
                },
                "name": {
                  "type": "string",
                  "title": "user-friendly name of the output"
                },
                "type": {
                  "type": "string",
                  "title": "type of the output"
                },
                "default": {
                  "type": "string",
                  "title": "default value of the output"
                }
              }
            }
          },
          "config": {
            "type": "object",
            "additionalProperties": true
          }
        }
      }
    },
    "childWorkflows": {
      "type": ["array", "null"],
      "title": "definition of child workflow objects",
      "items": {
        "type": "object",
        "required": [
          "code",
          "name",
          "icon",
          "fn"
        ],
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "string",
            "title": "human-readable identifier for the object"
          },
          "name": {
            "type": "string",
            "title": "name of the Activity as shown to the user"
          },
          "icon": {
            "type": "string",
            "title": "filename of the icon to show"
          },
          "fn": {
            "type": "string",
            "title": "the function to be executed"
          },
          "options": {
            "type": ["object", "null"],
            "title": "the options for the workflow object",
            "additionalProperties": false,
            "properties": {
              "task_queue": {
                "type": "string",
                "default": ""
              },
              "workflow_execution_timeout": {
                "type": "integer",
                "format": "int64",
                "default": 0
              },
              "workflow_run_timeout": {
                "type": "integer",
                "format": "int64",
                "default": 0
              },
              "workflow_task_timeout": {
                "type": "integer",
                "format": "int64",
                "default": 0
              },
              "wait_for_cancellation": {
                "type": "boolean",
                "default": false
              },
              "schedule_to_close_timeout": {
                "type": "integer",
                "format": "int64",
                "default": 0
              },
              "schedule_to_start_timeout": {
                "type": "integer",
                "format": "int64",
                "default": 0
              },
              "start_to_close_timeout": {
                "type": "integer",
                "format": "int64",
                "default": 0
              },
              "heartbeat_timeout": {
                "type": "integer",
                "format": "int64",
                "default": 0
              }
            }
          },
          "params": {
            "type": ["array", "null"],
            "title": "parameters",
            "items": {
              "type": "object",
              "required": [
                "code",
                "name",
                "type"
              ],
              "additionalProperties": false,
              "properties": {
                "code": {
                  "type": "string",
                  "title": "human-readable unique identifier of the parameter"
                },
                "name": {
                  "type": "string",
                  "title": "user-friendly name of the parameter"
                },
                "type": {
                  "type": "string",
                  "title": "type of the parameter"
                },
                "default": {
                  "type": "string",
                  "title": "default value of the parameter"
                }
              }
            }
          },
          "outputs": {
            "type": ["array", "null"],
            "title": "output values",
            "items": {
              "type": "object",
              "required": [
                "code",
                "name",
                "type"
              ],
              "additionalProperties": false,
              "properties": {
                "code": {
                  "type": "string",
                  "title": "human-readable unique identifier of the output"
                },
                "name": {
                  "type": "string",
                  "title": "user-friendly name of the output"
                },
                "type": {
                  "type": "string",
                  "title": "type of the output"
                },
                "default": {
                  "type": "string",
                  "title": "default value of the output"
                }
              }
            }
          },
          "config": {
            "type": "object",
            "additionalProperties": true
          }
        }
      }
    },
    "purposes": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tcfId": {
            "type": "integer"
          },
          "tcfType": {
            "type": "string",
            "enum": [
              "purpose",
              "specialPurpose",
              "feature",
              "specialFeature"
            ]
          },
          "editable": {
            "type": "boolean",
            "default": false
          },
          "required": {
            "type": "boolean",
            "default": false
          },
          "legalBasisRestriction": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "displayName": {
            "type": "string"
          },
          "displayDescription": {
            "type": "string"
          },
          "processingPurpose": {
            "type": "string"
          },
          "legalBasis": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "cookies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "canonicalPurposes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "essential_services",
                "prod_enhancement",
                "analytics",
                "behavioral_advertising",
                "personalization",
                "tele_mktg",
                "sms_mktg",
                "email_mktg",
                "mail_mktg",
                "data_broking"
              ]
            }
          },
          "translations": {
            "type": "object",
            "items": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "dataSubjectRole": {
            "type": "string",
            "enum": [
              "customer",
              "employee"
            ]
          },
          "dataRole": {
            "type": "string",
            "enum": [
              "processor",
              "controller",
              "jointController",
              "jointProcessor",
              "coController"
            ]
          }
        }
      }
    },
    "purposeTemplates": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tcfId": {
            "type": "integer"
          },
          "tcfType": {
            "type": "string",
            "enum": [
              "purpose",
              "specialPurpose",
              "feature",
              "specialFeature"
            ]
          },
          "editable": {
            "type": "boolean",
            "default": false
          },
          "required": {
            "type": "boolean",
            "default": false
          },
          "legalBasisRestrictions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "displayName": {
            "type": "string"
          },
          "displayDescription": {
            "type": "string"
          },
          "legalBasis": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "cookies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "canonicalPurposes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "essential_services",
                "prod_enhancement",
                "analytics",
                "behavioral_advertising",
                "personalization",
                "tele_mktg",
                "sms_mktg",
                "email_mktg",
                "mail_mktg",
                "data_broking"
              ]
            }
          },
          "translations": {
            "type": "object",
            "items": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "dataSubjectRole": {
            "type": "string",
            "enum": [
              "customer",
              "employee"
            ]
          },
          "dataRole": {
            "type": "string",
            "enum": [
              "processor",
              "controller",
              "jointController",
              "jointProcessor",
              "coController"
            ]
          },
          "collections": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "legalBasisRestrictions": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "regulation": {
            "type": "string"
          },
          "legalBases": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "policyScopes": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "regions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "regulations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fulfillment": {
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          }
        }
      }
    },
    "policyScopeTemplates": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "regions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "regulations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fulfillment": {
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          }
        }
      }
    },
    "legalBases": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "requiresOptIn": {
            "type": "boolean"
          },
          "allowOptOut": {
            "type": "boolean"
          },
          "requiresPrivacyPolicy": {
            "type": "boolean"
          }
        }
      }
    },
    "tcf": {
      "type": "object",
      "properties": {
        "vendor": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "purposes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "specialPurposes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "features": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "specialFeatures": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "policyUrl": {
              "type": "string"
            },
            "legIntPurposes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "flexiblePurposes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "usesCookies": {
              "type": "boolean"
            },
            "cookieMaxAgeSeconds": {
              "type": "integer",
              "format": "int64",
              "default": 0
            },
            "cookieRefresh": {
              "type": "boolean"
            },
            "usesNonCookieAccess": {
              "type": "boolean"
            },
            "deviceStorageDisclosureUrl": {
              "type": "boolean"
            }
          }
        },
        "gvlSpecificationVersion": {
          "type": "string"
        },
        "vendorListVersion": {
          "type": "string"
        },
        "tcfPolicyVersion": {
          "type": "string"
        }
      }
    },
    "cookies": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "duration": {
            "type": "string",
            "enum": [
              "session",
              "persistent"
            ]
          },
          "provenance": {
            "type": "string",
            "enum": [
              "firstParty",
              "thirdParty"
            ]
          },
          "category": {
            "type": "string",
            "enum": [
              "strictlyNecessary",
              "functional",
              "performance",
              "marketing",
              "analytics"
            ]
          },
          "serviceProvider": {
            "type": "string"
          },
          "translations": {
            "type": "object",
            "items": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      }
    },
    "purposeTemplateCollections": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      }
    },
    "regulations": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "rightsFulfillment": {
            "type": "object",
            "properties": {
              "rightCode": {
                "type": "string"
              },
              "fulfillment": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "rights": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "translations": {
          "type": "object",
          "items": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "canonicalRights": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "themes": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "bannerBackgroundColor": {
            "type": "string"
          },
          "lightboxRibbonColor": {
            "type": "string"
          },
          "formHeaderColor": {
            "type": "string"
          },
          "statusColor": {
            "type": "string"
          },
          "highlightColor": {
            "type": "string"
          },
          "feedbackColor": {
            "type": "string"
          }
        }
      }
    }
  }
}
