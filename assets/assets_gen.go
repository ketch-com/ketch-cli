// Code generated by vfsgen; DO NOT EDIT.

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets statically implements the virtual filesystem provided to vfsgen.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2020, 12, 31, 0, 10, 39, 156675798, time.UTC),
		},
		"/schemas": &vfsgen۰DirInfo{
			name:    "schemas",
			modTime: time.Date(2020, 12, 31, 0, 10, 57, 514382310, time.UTC),
		},
		"/schemas/manifest.json": &vfsgen۰CompressedFileInfo{
			name:             "manifest.json",
			modTime:          time.Date(2020, 12, 31, 0, 10, 57, 514307487, time.UTC),
			uncompressedSize: 23074,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\xeb\x8e\xdc\xb6\x92\xfe\x3f\x4f\x41\x08\x01\x92\xec\xda\x63\x27\xd8\x64\x11\x03\xfb\xc3\x9b\x78\xb1\x13\x78\x63\xc3\x97\xf8\x87\x33\xdb\x60\x8b\xa5\x16\xdd\x14\xa9\x90\x54\xf7\xcc\x06\x06\xf2\x20\x7b\x5e\x2e\x4f\x72\xc0\x8b\xd4\xba\x90\xba\x4d\xdb\xf1\x39\x88\x81\x20\xd3\x12\x59\x55\x2c\xb2\xaa\xbe\x22\x8b\xfa\xed\x02\xa1\xe4\x33\x95\xe6\x50\xe0\xe4\x11\x4a\x72\xad\xcb\x47\x0f\x1e\xbc\x53\x82\xdf\x77\x4f\x2f\x85\xdc\x3d\x20\x12\x67\xfa\xfe\xc3\x7f\x7f\xe0\x5b\xde\x33\xdd\xf4\x6d\x09\xa6\x8f\xd8\xbe\x83\x54\xfb\x67\x54\x33\xfb\xf0\x7f\xb0\xdc\x83\x2e\x19\x4e\x01\xe1\xb2\x44\xed\x8e\x12\x7e\xad\xa8\x04\x92\x3c\x42\x6f\x2f\x10\x42\x28\xe1\xb8\x00\xfb\x0e\xa1\xe4\x00\x52\x51\xc1\x93\x0b\x84\xae\x6d\x73\x02\x25\x70\x02\x3c\xa5\xa0\x92\x47\xe8\x37\xd7\xcc\x10\x01\xa5\x5f\x2b\x90\x8f\x2b\x9d\x1b\x5a\x49\xa5\x40\x6e\x70\xa5\xf3\x4d\x8a\x19\xdb\xe2\x74\xbf\xa9\x24\x4b\xae\x2f\x10\x7a\x6f\x49\x61\x42\xa8\xa6\x82\x63\xf6\x5c\x8a\x12\xa4\x76\x24\x33\xcc\x14\xd8\x06\x65\xfb\xb1\xe7\x44\x49\xf3\x77\x6b\xd4\x4a\x4b\xca\x77\x5e\xe8\xf6\xc8\x1f\x97\x25\xba\xfa\xe1\xf4\x82\x40\x86\x2b\xa6\xcd\xab\xc4\x3e\x7b\xef\x07\x2a\xe4\x6e\x11\xe1\x67\x72\x87\x39\xfd\x3f\x6c\x06\x30\x83\xbc\xd5\xe9\x52\xc1\x6d\xa7\x0e\x99\x7a\x3a\x96\x52\x52\x50\x60\xae\x69\x8a\x6a\x02\x4d\xb3\x12\x6b\x0d\xd2\x50\x4c\xfe\xf7\x8b\xb7\x0f\xef\x7f\x77\xfd\xaf\x5f\xfe\xf2\xcb\x65\xe0\xcf\xcf\xba\xa2\x94\x92\x16\x58\xde\x7e\x8f\x35\xec\x84\xbc\x0d\x88\xf4\xb6\x91\x09\x25\xbc\x62\x2c\xb9\x1e\x0a\xd7\x5e\x99\x46\x50\x4f\x15\xa5\x35\xd9\xa6\x0b\xf0\xaa\x68\xd6\x68\x2d\xc1\x01\xa7\xa7\x26\x66\x49\x29\x05\x3a\xf1\xbf\xaf\x3b\xf2\x2a\x48\x05\x27\xe7\x97\xb8\xa1\xfb\x01\x64\x96\x15\x6b\xad\xfd\xb6\x9c\xb5\x99\xc7\xe5\x34\xb2\xb9\xfe\xcd\xbb\x29\x83\xf3\x12\x0e\x8c\xce\x2d\x3d\x0a\xc7\xce\x93\xf8\xda\xeb\x0a\x62\x84\x40\x70\x53\x4a\x50\x8a\xf2\x1d\x3a\xe6\xc0\x91\xce\x9d\x27\xa2\x0a\x1d\xa8\xa2\x5b\x06\xdd\xde\x03\x43\x6a\xa9\xc5\x36\xa0\x5c\x69\xcc\xd8\xdd\x25\x12\xbc\x2b\x51\x8a\x39\xda\x02\xf2\xf4\x81\xcc\x91\xeb\xa2\xfd\xff\x7a\xf2\x52\x5c\xe2\x2d\x65\xb4\xa7\xca\x46\x44\x2c\x25\xbe\x8d\xd8\x6b\xa7\x6f\xd3\x84\x6a\x28\x7a\xb3\x12\x1d\x6f\x84\x5e\x67\xe5\x0d\x96\xa7\x99\x7e\x90\x05\xd5\x66\x7d\xe0\x5d\xd7\xb9\xb5\x5e\x5f\xf1\x1d\xa8\xe1\x4b\x49\x77\x79\xbc\xab\x7d\x7b\xea\xd9\xbc\xba\x0e\x6a\x4f\x55\x65\x29\xa4\x06\xf2\x14\xf3\x5d\x85\x77\x11\x3b\xf0\x4a\x1c\x37\x83\x86\x16\x62\x0d\xb1\x75\x4a\x0d\x69\x0c\x26\xc7\x52\x56\xb2\x14\xea\x2e\x23\x68\x28\x9c\x51\x6c\xa5\x80\x6b\x8a\xd9\x46\x81\x3c\xd0\xb4\x45\x1c\x79\x3f\x40\x36\xc0\x73\xcc\x53\x28\x80\xeb\xee\x5b\xcc\x31\xbb\xd5\x34\xed\x75\xda\x42\x8e\x0f\x54\x48\xcc\x36\x98\x1c\x8c\x1b\x51\x03\x33\x2c\x41\x2a\xe3\x83\xfa\xc1\xd3\x8d\x01\x18\x6c\x8a\xbd\xee\xf5\x51\x85\x0a\x3c\x85\x02\x53\x16\x78\x1e\x79\x4c\xb0\xc6\x9b\xad\x14\x7b\x23\xd2\xc4\x94\xd9\xc5\x7a\x87\x09\xf3\xfd\xcf\x37\x5d\x04\x18\xe8\x9e\x93\xc4\x69\x0a\xaa\x37\x03\xa9\x90\x12\xd2\x80\xe1\x0a\xa9\x6b\x17\x30\x31\x76\x4a\xcc\xc2\xd0\xb7\x2f\x4b\x9c\xde\x65\xd1\xd6\x74\x90\x72\x84\xe6\x28\xa3\x05\x5f\xa7\x49\xb6\x9b\x09\x0e\xcf\xb2\x9e\xd2\xda\x91\x21\x84\x74\x3b\x6a\x23\x5d\xe5\xa2\x1e\x12\x6e\x3d\xcd\x28\xd3\x20\x55\xd2\x79\x7e\xdd\x6d\x16\x0b\xa3\xfe\x6d\x81\x39\xde\x01\x09\xbc\x6a\xe9\x62\x2b\x04\x03\xcc\x07\x02\xb4\x95\xf2\x26\x07\x9d\x83\x44\x3a\xa7\xaa\xa7\x1d\x13\x5b\x3d\x1f\x24\x24\x2a\x70\x59\xf6\xa2\x59\x2d\xea\x09\x02\x5a\x28\x90\xf4\x9a\xbc\x1f\x68\xc0\x6a\x6b\x54\xf6\x40\xfc\xed\x8b\x3e\x9c\x4f\x64\xe9\x4e\x72\xef\x61\xe9\xb3\x71\x3f\xc1\xed\x31\xee\x04\x54\x2a\x69\xa9\xbb\x30\xfc\x6c\x42\xb4\xc9\x07\xba\x06\xf1\x47\x4c\xd4\x7a\xa1\x8e\x8a\xd9\x85\x21\x33\xa5\xac\x29\x07\xba\x0d\x8d\x3b\xc0\x74\x60\xe6\x41\xbe\x9e\x4d\xb8\xd9\x88\x35\xb7\x99\x85\xfa\x1a\xd5\x08\x59\x60\xdd\x57\x21\x1a\x1a\xb2\x6f\x3f\x07\x3a\x77\x3a\x8c\xda\x7f\x57\x1b\xe1\xb7\x73\x56\x52\xdd\x6e\x72\xa6\xd0\x88\x2e\xc2\x01\xa7\xdf\xc2\xc4\xd4\x28\x01\xeb\x12\xb8\x96\x82\x31\x90\x9b\xb4\x52\x5a\x14\x20\x37\x34\xe4\x6e\x9a\x1e\x98\x13\x29\x28\x69\x03\x85\x99\x3d\xc6\x5b\x65\x54\xc2\x02\xa2\x54\xa8\x85\xad\x0f\xc0\x89\x98\x1a\x5d\x41\x53\x29\x94\xc8\xf4\x02\xe2\xa7\x3e\x65\xb5\x65\x54\xe5\x93\x3a\x94\x62\x5f\x2d\x6b\x3c\x5f\x9a\x8a\xd3\x5f\x2b\x30\x80\xe9\xa8\x22\x46\xe8\x5b\x1a\xd0\x56\xe6\x82\x0f\xbc\x67\xfd\xef\x3a\xf8\x7c\xe0\xb0\x3c\x39\x6f\x9b\x1f\xc7\x30\x3c\xb3\x3b\x98\x86\xc4\xc7\x31\xe5\xa8\x1c\x7f\x35\xf1\xfe\xeb\x6f\xbe\x9d\x68\xf1\xcd\x57\x5f\x2f\xd4\x6d\xe0\xe9\xf0\x59\xff\x49\xf7\x77\xfb\x57\x67\xae\x3e\x10\xae\x0a\xfa\xa8\xe4\x80\x25\xc5\x5b\x06\xff\x8c\x70\x4b\xcb\xea\x2f\xb4\x35\xca\xfd\x1f\x08\x6d\x45\xa3\xf9\x1d\x65\x1c\x8f\xe0\x63\x0e\x6a\x24\x6a\x2f\x89\xd7\x4b\x22\xf5\x54\x8c\x9e\x1d\x9d\xe7\xc6\xe5\x19\x11\x79\x59\x2c\x5e\x12\x85\x67\xc6\xdf\xd9\x91\x77\x4e\xcc\x1d\x8b\xb6\xfd\x58\x10\x48\x09\xe2\xb1\xf5\x3c\xcb\x34\x1a\x4f\xdb\xc6\x14\x0e\x99\xa3\x4b\x39\x16\x65\xe3\xf1\x75\x2c\xb2\x46\x63\xea\xb4\x06\x9b\x78\x34\xaa\xc3\x68\x82\x73\xd2\xe1\xcf\x9e\x10\x22\x90\x51\x4e\x63\x3e\x68\x22\xcf\x49\x98\x48\x87\xfb\x68\xcd\xdb\x90\x97\x0d\xe6\x38\x0b\x33\x9c\xe9\xfc\x26\x1e\x38\xd0\x6c\x08\x77\x52\xd6\x4f\xb8\x00\x24\x32\xbb\x4b\x1f\x46\x04\xee\x5f\x10\x53\x9e\x74\x74\x2e\x71\x9e\x7a\x82\x03\x91\x22\x1d\x27\x50\x64\x72\xa4\x9c\x88\x38\x8c\x4c\x52\x21\xf6\x74\x24\x81\x23\x58\xe3\xa7\xf8\x16\x64\x18\x25\x86\x30\x62\x58\x53\xef\x8e\x71\xe0\x3d\x7d\xfa\xd4\x6f\x5f\xab\xeb\xc7\x37\xaf\x10\x01\x8d\x29\x0b\x6d\x19\xa0\x59\xe9\xfc\xd4\x52\xb7\x2d\xf6\x70\x1b\xd1\x40\x84\xed\xd2\xbc\x7e\x5e\x66\x3f\x67\xc9\xa1\x05\x89\x4c\x5b\x97\x35\x61\xa4\x05\xca\x28\x27\x9d\xf5\x87\x8e\x54\xe7\xd4\x1d\x66\xfd\xf8\xe6\xd5\x18\xc1\xc9\xc4\x06\xa1\x24\x07\x4c\x46\x53\x3f\xb3\x34\x19\xa6\x85\x8a\x65\x27\xb1\xfc\x24\x9a\xfd\xf9\x49\x3c\xb7\xd6\xf6\x70\xdb\xb7\xd5\xbe\xae\x62\x72\x7e\x9c\xfc\xaa\xf9\x3b\x72\x1c\x96\x0b\xa9\x7f\x08\x82\xe1\xe9\x0a\x00\xdb\xb9\x8d\x75\x91\xce\xb1\x46\x26\x43\xc1\x52\x21\xca\x91\x02\x2c\xd3\x1c\x49\x50\x15\xd3\x0a\x61\x4e\xd0\x0e\x1b\x70\xd8\x39\x7f\x8c\x56\x37\x38\xdb\x06\xb2\x56\xc0\xba\x7f\x5c\x46\x71\x3a\xa0\xf5\x8e\x04\xa9\x54\x02\xcc\xa9\xbd\xb0\x67\x96\xf6\xa4\xf7\x27\xa1\x97\x57\x61\x9c\xba\x23\x2e\x34\x20\x95\x8b\xa3\xb5\x3e\x23\x50\xa5\x40\xba\xf3\x63\xac\xf6\x94\xef\x0c\xfe\x41\xb8\xd2\xb9\x90\xf3\x8b\x43\x4e\x1c\xee\x72\x44\xd8\x22\xb2\xee\xd8\xa9\x21\xf7\xbc\x21\x95\x84\x17\x23\xe8\xaa\x7c\xfd\xe2\xe9\x8a\x32\x14\x5d\x95\xc8\xf4\xec\xd0\xcb\x45\x01\x25\xde\xc1\x1a\x92\x75\xdf\x21\xd5\x3a\xad\x79\xe9\x4e\x7f\xd7\x10\xaf\x49\xd4\x27\xc8\x43\x26\xbe\x9e\xe3\xb9\x60\x34\xbd\x5d\xc3\xc2\x13\x40\xa5\xa5\x30\x64\xa0\x34\xd6\x95\x5a\xa5\x6c\xdb\x73\x48\x51\x8b\x55\xe4\x34\xc8\x42\x19\x1f\xea\x8f\x8b\x87\x84\x89\x48\xd7\x10\x26\x22\xad\x0a\xe0\xda\x45\xb5\x01\x55\x26\x76\x62\x65\x09\x4c\xbf\x54\xc7\x92\x6a\x9a\x05\x11\x47\xc2\x28\xdf\x37\xc5\x38\x4d\xdb\x59\x95\x33\x75\x69\x9c\x7e\x71\xa2\xdc\x32\xbc\x23\x25\xbe\x32\x2e\x07\xba\xcb\x75\x1b\x36\xd5\x8f\xcc\x5b\xd7\xae\x09\x03\x0d\xf9\x58\x61\x4e\x3d\xdc\xe5\x75\x30\x46\x1f\xc8\xfd\xea\x34\x98\x2c\xbe\xb1\x4a\x5a\xc3\x31\xa3\x0c\xba\x29\x49\x9b\x6c\xad\xa1\x20\x5d\xca\x35\xec\x7a\x60\xa4\x37\x14\xd7\x3f\x32\x94\x87\x41\x96\x8d\xde\xd7\xf2\xf4\x04\xa6\x99\x06\x3d\x69\x29\xe1\x40\xe1\xb8\xd2\xed\x0f\x8b\xe7\x3c\xb5\x39\xfe\x7f\xe4\xa4\xfd\xaa\xc0\xbb\xce\xe1\x7a\x04\x9c\x77\x8c\xa5\x83\xb1\x67\xe2\xea\x09\x93\x99\x30\x9a\x31\xb3\xe9\xce\x72\x14\xb2\x07\x8d\x67\x0a\x61\xf6\x14\x15\xb0\xa0\xf8\xd6\x61\x07\xf5\x86\xec\x68\x29\xf3\xa1\x45\xf5\x99\x84\xac\x6a\x62\x8d\x0f\xd9\x0c\x4d\x2b\xb2\xce\xfb\xdc\x83\x06\xb6\x98\x7d\xc0\xca\xe2\xfc\x27\x6c\x2e\x15\x5c\xe3\xf4\x2e\xc5\x3d\x0d\x85\x75\x76\x16\xb3\xa6\xc1\x0e\xaf\xdf\xbf\xbd\x8b\x81\x8d\xac\xfc\xd0\x76\xf5\xdc\xb5\xd7\xd2\x42\x68\x63\x3a\x96\x5c\x26\x1a\xd2\x9c\xd3\x14\x0f\x37\xa5\x93\xc2\x3a\xb3\x50\x3e\x97\x64\x94\x63\x9e\x06\xce\x86\x14\xa4\x95\xec\x54\x34\xa1\x5e\xc6\xf9\x3e\xa0\xcf\x73\x0c\x3a\xb4\xb3\x7e\xda\x5c\xed\x4f\xdc\xf4\xa2\x84\x9b\x92\x4a\x78\xad\x40\xbe\x12\x7b\x08\xe6\x01\x83\x03\xaa\x93\x64\x4f\x6c\x6f\x97\x8c\x68\xd7\x3f\x90\x75\xd8\xb5\xd1\xe1\x2a\x21\x93\xa0\xf2\x2b\xae\x41\x1e\x30\x5b\x0c\xdd\x7c\x7f\x44\x6b\x02\x27\xb0\x72\x3a\xe4\xfa\xe2\xed\x57\xf7\xbf\xbb\xb6\x45\xe4\xff\xf2\x65\x3e\x23\x1d\x1a\x5e\x26\x58\xa0\x8a\x17\xae\xb3\xd3\x85\x49\xc4\xe6\x69\xa2\xf2\xcc\xbe\xf7\x57\x15\x66\x02\xd9\xd3\x8c\x57\x92\x46\x94\xf4\xcc\xd0\x45\xf5\x1d\x08\x0b\x70\xe7\xe8\x80\x50\x09\xa9\x7e\xc6\x5f\x97\x04\x87\xb3\xd6\x31\x25\xb8\xde\x26\x6d\xae\x5c\xff\x59\x5a\x38\xc2\x36\x17\x62\x7f\x87\x8a\xf3\x9a\xc2\x04\xca\xae\x64\xdb\x78\x8c\x1d\x4b\xe8\xf8\x48\x38\x00\xd7\x6a\x25\x10\x8f\x21\x65\xc3\x75\x01\x6a\x0d\x4f\x6e\x77\xcc\x6f\xdc\x78\xd1\xeb\x17\x57\x61\x4c\xeb\x87\xb6\x06\x2c\xff\x27\x56\xf0\xed\xbf\xdd\x07\x9e\x0a\x02\xa4\x56\x2d\x72\x14\xcd\x02\x27\x48\x0b\xa4\xe8\x8e\x23\xaf\xae\x0e\x1d\xe3\xaa\x80\xeb\x27\xa6\xbb\x61\x62\x56\x8c\xa5\xb8\x10\xec\x77\x77\x33\xd6\x0c\xa4\x56\x52\x87\x12\x72\x9b\x8b\xcd\x38\xcc\x4b\xe0\x9a\xa6\x58\x43\xbd\xbb\xd2\x5f\x4d\xf3\x04\xf6\xca\x08\x4b\x1a\x0d\xf1\x61\x91\x43\x8a\x0d\x57\xb8\x4d\x44\x91\x58\x44\x2c\x83\x11\xcf\xd7\xca\x1f\xfc\x5e\xef\x65\x2a\x01\xeb\x40\x39\xc1\xa0\x61\x56\xb1\x8c\x0e\xae\x2d\xb8\x79\x2c\xcb\xcb\xf0\xad\x86\xe6\xb5\xf7\xe7\xe1\x97\x15\x1f\xe9\xed\xee\x05\xc4\xe5\xf4\xef\x5d\x15\x33\x19\x89\xd7\x13\x71\xf2\x28\xe4\x3e\x63\xe2\xb8\x0e\xbc\x9d\x4e\xda\x90\xc8\x50\x4d\x0b\x39\xd7\x76\x6e\x38\x37\x28\x7d\x19\x96\xbd\x24\x34\xed\xd7\x69\x67\xfc\x03\xe1\xbd\x60\x15\xc9\x5c\xe8\x93\x57\x05\xe6\xf7\x25\x60\x62\x77\xce\xdd\xd1\x6f\x46\xdd\x79\xaf\x35\x55\xaf\x97\x28\xf4\x0a\x9e\x06\xce\x65\xcf\x5b\xa7\x7f\x8f\x53\x4d\x0f\x54\xdf\x22\xac\x86\x5b\xb1\x71\xfe\x56\xd3\x6b\xf9\xd7\x49\x56\x2d\x83\x21\x66\x7d\x6f\x2e\x8e\x71\x96\x77\x42\xd8\xa6\x59\xcd\x2e\x78\x98\xdc\xf6\x83\xd8\xeb\x64\xae\xd3\x89\xb4\x6f\xdb\xd7\x4c\x44\x9d\xad\x57\xaa\x19\x59\x56\xf1\xb4\x3e\xcc\xda\x02\x82\x1b\x48\xab\x9e\x7f\xe8\xf2\x13\xf6\x6c\x20\xee\x7d\xa7\xce\x26\xbb\xec\x3d\xb5\x66\x11\xf7\x3c\x42\x5f\xf4\xf9\x87\x85\x13\xf5\x68\x1a\xab\xfd\xe6\xd7\x0a\xaa\xd5\x05\x43\x8b\x2a\x93\xea\x61\x6d\x9c\x7e\xa9\xe0\x1b\x4d\x0b\x10\xd5\x44\x21\x48\x38\x37\x47\x5d\x6c\x44\xb9\xee\x41\x8a\x81\x88\x0f\xe7\x4b\x28\xab\x4f\x57\x36\x3b\x6b\x9f\x9a\x70\x98\xea\x4d\x26\xe4\x26\x35\x19\x32\x63\xf1\x33\xe7\x39\x75\x8e\xa1\xdc\x60\x8c\xbb\x4a\x73\x20\x15\x83\x8d\x16\x9b\x94\x09\x05\x9f\x9a\x7a\xda\x02\x2a\x8d\xa5\xfe\xe4\x04\x74\x42\x7d\xa2\xea\xcb\x01\x4b\xbd\x05\xfc\x67\xab\xed\x22\xf6\xab\x1b\x1c\x4a\x2c\xf1\x08\x32\x1f\x85\xfe\xed\xd0\x60\xe9\x40\xe0\x82\x4b\xf4\x72\xcb\x54\xdd\xd7\x78\x79\x4b\xb8\x4a\x3a\x56\x27\x5d\x73\xeb\x3d\x1e\x54\xb8\x2c\xaa\x6d\x99\xaa\x6a\x89\x17\x21\xcf\xab\xc7\x88\x42\x49\x57\xf1\xd8\x46\x94\x1e\xf4\x34\x93\x30\x2c\xcc\x08\x94\x8e\x8c\x55\x9b\x2d\x93\xcf\xc0\xc8\xfb\x99\xa4\xc0\x09\xbb\x45\x6d\xd4\xb7\x50\xa2\x91\xdb\x3d\xcb\x24\x6a\x43\xc1\x85\x32\x9c\x6c\xea\xee\x62\x78\x5a\xe8\x80\x59\x35\x4b\x9e\x95\x56\x2c\x2a\x5d\x56\x83\xfc\x7d\x85\x19\x3b\x42\x4e\xde\xbf\x2c\xb9\x2b\xe2\xc7\xb4\x64\x37\x0f\x9f\x8c\x19\x2f\x11\xe7\x83\xd8\xf0\x12\x01\x3e\xb8\x01\x47\x85\x59\x69\xbd\xa9\xe0\x19\xdd\xc5\x93\xc2\x45\x99\x95\x96\x55\x1b\x84\x4e\x6d\x0e\x19\x90\xb1\x68\x63\xe8\x2c\xfb\x3c\xc3\x5d\x9d\xae\x51\x9f\x75\x17\x67\xcd\x36\x4a\xf7\x0e\x4d\xf2\x2a\x07\xb4\x87\x5b\x94\x51\x60\x04\x51\x85\x8e\x39\x48\xb0\x8b\x81\x60\x8d\xd1\x91\x32\x66\x92\x71\x85\x0f\x76\x67\xf6\x12\xbd\xca\xa9\x42\x45\xa5\xb4\x79\xec\xcd\xbc\x04\xe9\x28\x5c\xfe\xc2\xd1\x7f\x09\x89\xe0\x06\x17\x25\x83\x7b\x88\x66\x96\xfc\x7f\xa0\xcf\xeb\xf2\x29\xf5\xb9\xa1\xce\x7d\xf5\x65\x6b\xf1\x39\x11\xba\x0c\x29\xb7\x62\x5c\x36\x9d\x47\x36\x58\xd6\x1c\xde\x07\xb4\xe1\xbc\x83\x74\x07\xf9\x7e\x33\x80\x2a\x94\x8a\xa2\x14\x1c\xf8\xc8\xae\xd6\x9a\x2d\x9e\x80\x00\xd6\x3b\xf8\x49\xbf\x6d\xf4\xd1\xec\xf0\x03\x83\x54\xa3\x63\x4e\xd3\xfc\x24\x94\x79\x23\x81\x13\xe3\x67\x9d\x6a\x33\x69\x77\xfc\xc9\x25\xba\xd2\x28\xc5\x9c\x0b\x3b\x61\x98\x23\xb8\xa1\x4a\xdb\xea\x44\xab\xf0\x25\x27\xb6\xe1\xeb\xe1\xf5\xd0\x3a\x8f\xe3\xbb\x44\x2a\x17\xc7\x67\xfc\xe7\xe1\x17\x84\x26\xd3\xd2\xbe\xb6\xae\x32\xeb\x14\xee\xf5\x97\x8f\xab\x13\xad\x35\x91\x0a\xce\xdd\x47\x30\x90\x38\x80\xb4\x9f\x2e\x8a\xee\x9e\xf5\x53\xdd\xa1\xe8\x3f\x9b\x35\xfb\x8c\x3f\x21\x74\xa4\x90\x61\xb6\xfc\xce\xd8\x5b\x03\x70\x26\x61\x87\xe1\xa7\xcc\xed\x6b\xfa\xc1\x00\xa1\xba\x5f\xec\x3a\x18\x44\xdf\x53\x76\xc6\x60\x28\x04\xaf\xac\x9c\x41\xf8\xd3\x3a\x4b\x73\xcc\x77\x83\xbd\xff\xb9\x32\xca\x70\x01\xd0\xd9\x16\xc8\x16\x50\xcd\xc2\x58\x4e\x8e\x0f\x80\xb0\x53\x7d\xdc\xbc\x0b\xca\x9f\x02\xdf\xad\x28\x9f\x19\xcf\x77\x67\x55\xce\x14\xf8\xe6\xcf\x63\x7e\x3a\xbf\x5f\xe8\xdb\x66\x54\x3d\xd9\x82\xb5\x5c\x30\x02\xf2\x0c\xbe\xb3\x45\x0d\x69\xb8\xd1\xae\x6e\xbc\xed\x14\xfc\xe7\xbd\xa8\x3a\x85\x3c\x28\xca\xe1\x6e\xf9\x2c\xe1\x63\x80\xec\x04\x36\x62\x9f\x90\x0b\x0f\xe1\x87\x0e\x28\xab\x97\xea\x29\x52\x36\xd1\xc8\xca\x7e\x0f\x6d\x21\x13\x75\xa9\x87\x2d\xbb\xc0\xd6\xcf\x5d\xa2\xff\xc6\x07\xe3\xe1\x31\x22\x43\x8a\xc6\x09\x4a\x4a\x1c\xdd\xbe\xc2\xe2\x63\x55\x25\x30\x96\xe6\x90\x8e\x14\xa9\xcd\xb3\x4a\x8b\x20\x14\x68\x1b\x84\xac\x48\xc0\x6d\xd2\x60\x59\x20\xcb\xa3\x09\x63\x16\x55\xac\x74\x23\x45\xc5\x34\x2d\xcf\xe2\xea\x9c\x1b\xa9\x09\xfa\x34\xb2\xfe\x3c\x1c\x26\xc4\x61\x95\xd3\xdc\x18\x20\xf4\x2a\x6f\x1a\xb6\x57\x20\x56\x26\x0a\xdb\x50\x8a\xfc\x8d\x93\xc7\xcf\xaf\xec\x35\x0b\xcc\xd1\x1f\xbf\xff\xff\x63\x42\xd0\x63\x2e\x74\x0e\xf2\x8f\xdf\xff\x86\xb6\x95\xd6\x82\x37\xab\xc1\x7f\x21\xaf\xa3\x20\x84\x19\x13\x47\xa3\x4e\x1b\xf0\x24\x34\xf7\xd1\x4e\x18\xd3\xb5\x54\x21\x44\xb3\x32\x1a\x1a\x64\xb6\x14\xdb\x8f\x1f\x85\xd4\xdf\x6d\x0a\x24\xaa\x3e\x71\x1f\x4f\x7d\x26\x76\x03\xc2\xb3\xfb\x2a\x07\x05\x08\xcb\x96\xa1\xa9\x96\xdf\x30\x11\xd8\x62\x2e\x20\x4e\xe7\xf5\x14\x87\x13\xac\xb1\x2f\xde\x4c\x6f\x28\xf8\x56\xb3\xee\xbf\xe1\x2d\xc4\x3f\xc2\x92\x0c\x82\xd9\xe9\xdf\x47\xbf\xfe\xe6\x64\x59\x72\x8b\x2b\xd2\x30\x7e\x4d\xcc\x69\xe3\x1c\x2c\x82\xcf\x67\xde\xf0\x0a\xe4\xec\xef\x54\xf4\xda\xdf\xac\x84\xbd\xb7\x58\x9f\x18\x2f\x8f\x30\xfa\xf1\xe5\xb3\x9f\xd0\x63\xeb\x43\xb4\x30\x01\xc0\xe2\x7c\x95\x8b\x8a\x11\xb3\x64\x5d\xd4\x37\x6b\xb6\xed\x6e\x44\x56\x97\x37\xd8\xfb\x6e\x36\xd7\x21\xa8\x35\x89\x11\x11\xa2\xc7\x8b\xe1\x31\x0f\x4b\xab\xce\x31\xe4\x4a\x32\x27\x35\x76\xa9\xa9\x12\x95\x4c\xc1\xb8\xd0\x96\x32\xdc\xb8\x7d\x96\xea\xdd\x73\x9d\x3a\x95\xa2\xac\x18\xd6\x06\xea\xbd\x74\x59\x14\xa3\x4a\x3b\x9a\x70\x63\x10\x0e\x66\x8e\x56\x70\x97\xd0\x4b\x17\x2f\x04\x9b\xa9\xb0\xf9\x7b\x29\xb1\x1d\x8e\x0b\xf3\xdf\xfb\x8b\xbf\x07\x00\x00\xff\xff\x56\x3f\x89\x72\x22\x5a\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas"].(os.FileInfo),
	}
	fs["/schemas"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas/manifest.json"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
