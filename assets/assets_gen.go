// Code generated by vfsgen; DO NOT EDIT.

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets statically implements the virtual filesystem provided to vfsgen.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2020, 12, 17, 3, 11, 48, 312988850, time.UTC),
		},
		"/schemas": &vfsgen۰DirInfo{
			name:    "schemas",
			modTime: time.Date(2020, 12, 17, 21, 29, 0, 671939368, time.UTC),
		},
		"/schemas/manifest.json": &vfsgen۰CompressedFileInfo{
			name:             "manifest.json",
			modTime:          time.Date(2020, 12, 17, 21, 29, 0, 671863258, time.UTC),
			uncompressedSize: 23529,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xec\x5c\xdb\x8e\x24\x35\xd2\xbe\xef\xa7\xb0\x52\x48\xc0\xff\x77\xf7\x00\xfa\xe1\x17\x23\xed\x45\xaf\x96\xd5\x0e\x9a\x05\x34\x0c\xcb\xc5\xd0\x9b\x8a\xca\x8c\xac\xf4\x94\xd3\x4e\x6c\x67\x55\xd7\xa2\x96\x78\x90\xdd\x97\xe3\x49\x56\x76\x1e\x2a\x0f\x76\x9e\xaa\x1a\x46\x88\x0b\xc4\x74\xda\x0e\x87\x3f\xc7\xd1\x0e\xd7\x4f\x57\x84\x04\xef\xa9\x28\xc5\x0c\x82\xe7\x24\x48\xb5\xce\x9f\x3f\x7b\xf6\x56\x09\x7e\x53\x7e\xbd\x15\x72\xfb\x2c\x96\x90\xe8\x9b\x8f\xfe\xff\x59\xd5\xf3\xda\x0c\xd3\xc7\x1c\xcd\x18\xb1\x79\x8b\x91\xae\xbe\x51\xcd\xec\xc7\xbf\x83\xdc\xa1\xce\x19\x44\x48\x20\xcf\x49\x7b\xa0\xc4\x1f\x0b\x2a\x31\x0e\x9e\x93\x37\x57\x84\x10\x12\x70\xc8\xd0\xb6\x11\x12\xec\x51\x2a\x2a\x78\x70\x45\xc8\xbd\xed\x1e\x63\x8e\x3c\x46\x1e\x51\x54\xc1\x73\xf2\x53\xd9\xcd\x10\x41\xa5\xc3\x42\xa1\x0c\xa1\xd0\xa9\xa1\x16\x34\x7f\x85\x11\x30\xb6\x81\x68\x17\x16\x92\x05\xf7\x57\x84\x3c\x5a\x62\x10\xc7\x54\x53\xc1\x81\x7d\x23\x45\x8e\x52\x97\x44\x13\x60\x0a\x6d\x87\xbc\xfd\xf9\xa7\x16\x7b\xf5\x5f\xad\x95\x2b\x2d\x29\xdf\x56\x8c\xb7\x57\x7f\x97\xe7\xc4\x0e\xb2\x2d\x8f\xbd\x95\x2d\xa5\xa4\x30\x03\xae\x69\x44\x6a\x02\x4d\xb7\x1c\xb4\x46\x69\x28\x06\xff\xfc\xe0\xcd\x47\x37\x9f\xdf\xff\xef\x87\x3f\xfc\x70\xeb\xf8\xe7\x7b\x5d\x56\x72\x49\x33\x90\xc7\x30\x02\x8d\x5b\x21\x8f\x0e\x9e\xde\x34\x4c\x91\x80\x17\x8c\x05\xf7\x43\xee\xda\xbb\x6c\x38\xad\xc8\x92\x86\x6c\x33\x04\x79\x91\x35\xfb\x5d\xb3\xb0\x87\xe8\xd4\xc5\x6c\x8e\x52\xa8\x83\xea\xef\xfb\x0e\xc3\x0a\x23\xc1\xe3\x27\x60\xb9\x21\xfc\x04\x4c\xcb\x82\xb5\xc4\xa8\xcd\x67\xad\x33\x7e\x3e\x0d\x6f\xe5\xf8\xa6\x6d\x4a\x76\x2b\x0e\x07\xf2\x5b\x0a\x1f\xc5\x43\xe7\x8b\x5f\xfa\xba\x8c\x18\x26\x08\x3e\xe4\x12\x95\xa2\x7c\x4b\x0e\x29\x72\xa2\xd3\x52\xad\xa9\x22\x7b\xaa\xe8\x86\x61\x77\x74\x8c\x09\x14\x4c\x9b\xf1\x41\xf3\xfd\xb1\x85\x1a\xe5\x4a\x03\x63\xe7\x73\x24\x78\x97\xa3\x08\x38\xd9\x20\xa9\xe8\x63\x3c\x87\xaf\xab\xf6\xff\xeb\xcd\x8b\x20\x87\x0d\x65\xb4\x07\x65\xc3\x22\x48\x09\x47\x8f\xc6\x76\xc6\x36\x5d\xa8\xc6\xac\xb7\x2b\xde\xf5\x7a\xe8\x75\x24\x6f\x20\x9e\x66\xfb\x51\x66\x54\x87\x46\x0a\x60\x0b\xba\x6d\x2d\xda\xed\x94\x6f\x51\x0d\x5b\x25\xdd\xa6\x5a\xf9\x47\x57\xed\xa7\xd1\x4d\xe3\xbd\x13\x43\x55\xe4\xb9\x90\x1a\xe3\x90\x01\xdf\x16\xb0\xf5\xa8\x43\x85\xe5\xb8\x36\x34\xc4\xc8\x89\xd8\x3a\x6c\x5d\xc0\xe1\xe4\x62\xf2\x42\xe6\x42\x9d\xb3\x82\x86\xc2\x05\xd9\x56\x0a\xb9\xa6\xc0\x42\x85\x72\x4f\xa3\x16\xf1\xda\x1c\xc4\x21\xf2\x14\x78\x84\x19\x72\xdd\x6d\x05\x0e\xec\xa8\x69\xd4\x1b\xb4\xc1\x14\xf6\x54\x48\x60\x21\xc4\x7b\x63\x4d\xd4\x40\x1b\x73\x94\xca\x98\x22\xfa\x2f\x87\x9c\x68\x64\x18\x66\x3b\xdd\x1b\xa3\x32\xe5\xf8\x8a\x19\x50\xe6\xf8\xee\xf9\x1c\x83\x86\x70\x23\xc5\xce\xb0\x34\xb1\x65\xa5\xbc\xae\xdf\xb0\x6a\xfc\xe5\xb6\x2b\x46\x86\xba\x67\x2b\x21\x8a\x50\xf5\x76\x20\x12\x52\x62\xe4\x50\x5f\x21\x75\x6d\x09\x26\xd6\x4e\x63\x23\x18\xfa\x18\xaa\x1c\xa2\x73\xa4\xb6\x26\x44\x2a\x42\x73\xd0\x68\xc5\x84\xd3\x24\xdb\xdd\x04\xc7\xaf\x93\x1e\x6a\x6d\x0f\xe1\x0a\x1f\x3b\xb8\xc5\x5d\x74\xfb\xe1\x65\xeb\x6b\x42\x99\x46\xa9\x82\xce\xf7\xfb\x6e\x37\x9f\x3b\x6d\x44\x94\xc3\xd6\x72\xd2\x6f\x6a\x61\xb1\x11\x82\x21\xf0\x01\x03\x6d\x50\xbe\x4f\x51\xa7\x28\x89\x4e\xa9\xea\xa1\x63\x7c\x6c\x35\x0f\x11\x92\x64\x90\xe7\x3d\xaf\x36\x0c\x06\x6d\x48\x10\xf4\xba\x3c\x5e\x3b\xd1\x1a\xe5\xdd\xe1\x87\xa7\xf7\x93\x58\xba\x93\xb3\xf7\xa2\xea\x8b\xcd\x7e\x0a\xbc\xc7\x66\x8f\x51\x45\x92\xe6\xba\x1b\x90\x5f\x8c\x89\x36\x79\xc7\x50\x67\x1c\xe2\x63\xb5\x16\xd4\x51\x36\xbb\xe1\xc8\x4c\x2e\x6b\xca\x8e\x61\x43\xe5\x76\x4c\x3a\x50\x73\xe7\xbc\xd5\x34\xee\x6e\x23\xda\xdc\x9e\xec\xda\xdd\x96\x08\x99\x81\x0e\x1c\x8d\xf7\xce\xd9\xe6\x84\xd0\xf3\xf5\xbf\x8b\x86\xbb\x75\x8e\x24\xcd\xde\x29\x32\x82\x85\xdb\xe3\xf4\x7b\x18\xa7\xea\x25\x60\x4d\x02\xd7\x52\x30\x86\x32\x8c\x0a\xa5\x45\x86\x32\xa4\xf1\xd8\x08\xe0\xb1\x14\x34\x6e\x47\x0a\x33\x47\x8c\xf7\x4a\xa8\xc4\x05\x44\xa9\x50\x0b\x7b\xef\x91\xc7\x62\x6a\x75\x19\x8d\xa4\x50\x22\xd1\x0b\x88\x9f\xc6\xe4\xc5\x86\x51\x95\x4e\x62\x28\xc5\xae\x58\xd6\x79\x3e\x37\x05\xa7\x3f\x16\x68\x22\xa6\x83\xf2\x28\x61\x2b\x6a\xcb\x53\xc1\x31\xf0\xf4\xb9\x77\x7e\x7f\x1c\xd7\xcd\x5f\x47\x31\xaa\xc9\xce\x50\x0d\x09\x87\x31\x70\x54\x0a\x1f\x4f\xb4\x7f\xf2\xe9\x67\x13\x3d\x3e\xfd\xf8\x93\x85\xd8\x5e\xcd\xf9\xd6\xff\xd2\xfd\xbb\xfd\x57\x67\xaf\x9e\x28\xae\x72\xda\xa8\x60\x0f\x92\xc2\x86\xe1\xef\x31\xdc\xd2\xb2\xf8\x23\xda\xfa\xbd\x44\x5b\x5e\x6f\x7e\x26\x8f\xe3\x1e\x7c\xcc\x40\x8d\x78\xed\x25\xfe\x7a\x89\xa7\x9e\xf2\xd1\xb3\xbd\xf3\x5c\xbf\x3c\xc3\x23\x2f\xf3\xc5\x4b\xbc\xf0\x4c\xff\x3b\xdb\xf3\xce\xf1\xb9\x63\xde\xf6\x7e\x3a\x25\xf0\xfb\xd6\xcb\x88\xa9\xd7\x9f\xb6\x95\xc9\xed\x32\x47\x45\xd9\xe7\x65\xfd\xfe\x75\xcc\xb3\x7a\x7d\xea\x34\x82\x8d\x3f\x1a\xc5\xd0\x9b\xe0\x9c\x30\xfc\x47\x45\x88\xc4\x98\x50\x4e\x7d\x36\x68\x22\xcf\x09\x98\x88\xc0\x33\xb6\xb6\xde\x57\x33\x72\x9c\x85\x19\xce\x74\x7e\xe3\x77\x1c\xf3\x43\xb8\x13\x58\x5f\x41\x86\x44\x24\xf6\xb4\xde\x1d\x11\x8c\xc4\x94\x27\x8c\x2e\xc5\xce\xcb\x8a\xe0\x80\x25\xcf\xc0\x89\x28\x32\x38\x50\x1e\x0b\x7f\x18\x19\x44\x42\xec\xe8\x48\x02\x17\x83\x86\x97\x70\x44\xe9\x8e\x12\xef\x67\x23\xf5\xf6\xa0\x27\x41\xf2\xdf\x42\xf9\xe0\xfa\xf2\xfb\xd7\x24\x46\x0d\x94\x29\x1f\x42\x93\xe9\xfc\x94\xa8\xdb\x1e\x3b\x3c\x7a\x10\xf0\x4c\xbb\x34\xaf\x9f\x97\xd9\xcf\x11\xb9\x25\x89\x4c\x1b\xcb\x9a\x30\xd1\x82\x24\x94\xc7\x1d\xf9\x23\x07\xaa\x53\x5a\x5e\x6a\x7d\xf9\xfd\xeb\x31\x82\x93\x89\x0d\x21\x41\x8a\x10\x8f\xa6\x7e\x46\x34\x19\xd0\x4c\x05\xde\x2e\xf7\x9e\x96\xc7\xd1\x4d\xbc\x34\x6a\x3b\x3c\xf6\x75\xb5\x8f\x95\x8f\xcf\x5f\x27\xbf\x9a\xba\x10\x4b\x85\xd4\xa1\x3b\x1a\x9e\x2e\x06\xb0\xa3\xdb\xc1\x2e\xd1\x29\x68\x62\x52\x14\x90\x8a\x50\x4e\x14\x82\x8c\x52\x22\x51\x15\x4c\x2b\x02\x3c\x26\x5b\x30\xd1\x61\xe7\x22\x72\x10\x0f\xd7\xec\x95\xca\x8d\xf1\x6a\x0e\x6b\x02\x7e\x26\xc5\xe9\xaa\xb6\x32\x25\x44\x45\x12\x91\xcf\x60\xcf\x5e\x5e\xda\x3b\xdf\x90\x0b\xbd\xbc\x24\xe3\x34\x9e\x98\xf1\x44\xa5\xe2\x60\x15\xd0\x70\x54\x28\x94\xe5\x55\x32\xa8\x1d\xe5\x5b\x13\x02\x11\x28\x74\x2a\x64\xff\x8e\x6b\x0e\x87\xe7\x5c\x13\xb6\x88\x9c\x79\x79\xfc\x4d\x43\x2a\x70\xcb\x23\xea\x22\xb7\x25\x32\xcb\x8b\x52\x74\x91\x93\xef\x5e\xbd\xec\x02\x90\x8a\x0c\x73\xd8\xe2\x2a\x9a\xf5\xe0\x21\xd9\x26\xb7\xa9\x2e\x81\x57\x91\xaf\x89\xd4\x37\xc9\xc3\x69\xaa\xf2\x8e\x30\x17\x8c\x46\xc7\x55\x93\x54\x24\x48\x49\x62\x38\x85\xd2\xa0\x0b\xb5\x0e\x72\x3b\x74\x48\x52\x8b\x75\xf4\x34\xca\x4c\x19\x73\x5a\x5d\x1d\x0f\x29\xc7\x22\x5a\x45\x39\x16\x51\x91\x21\xd7\xa5\x87\x1b\x90\x65\x62\x2b\x56\x96\xc5\xf4\xcb\x77\x2c\xa9\xa6\x9b\x33\xfa\x08\x18\xe5\xbb\xa6\x40\x67\x59\x35\x4d\x5d\x7b\xa6\x5f\x9d\x28\xb7\x34\xf0\x40\xe3\xaa\xf0\x2c\x45\xba\x4d\x75\x3b\x84\xaa\x3f\x99\xd6\xb2\x5f\xe3\x12\x26\x8b\x75\xea\xe5\x2e\xaf\x8d\x31\x78\x90\xf2\xaf\x65\x05\x39\x16\xa4\x35\x33\x26\x94\x61\x37\x3d\x69\x93\xad\x11\x72\xd2\xa5\x5c\xe3\xb6\x17\x98\xf4\x96\x52\x8e\xf7\x2c\xe5\x23\xe7\x94\x0d\xee\x6b\xe7\xac\x08\x4c\x4f\xea\x2e\x13\x91\xb8\xa7\x78\x58\x69\xff\x87\x15\x75\x15\xb5\x33\x6f\xdd\x5f\x64\xb0\xed\x5c\xb4\x7b\x02\xf5\x8e\xb2\x74\xe2\xed\x99\x31\xf6\x84\xca\x4c\x28\xcd\x98\xda\x74\x77\xd9\x1b\xbe\x3b\x95\x67\x2a\xda\xec\x01\xe5\xd0\x20\xff\x31\x62\x27\x02\x76\xe9\xd1\xd2\xc9\x87\x1a\xd5\x9f\xc4\xa5\x55\x13\x32\x3e\x9c\x66\xa8\x5a\x1e\x39\xef\xcf\xee\x54\xb0\xc5\xd3\x3b\xb4\xcc\x3f\xff\x54\xad\x9e\xe0\x1a\xa2\x73\x2a\x7d\x1a\x0a\xeb\xf4\xcc\xa7\x4d\x83\xd3\xde\xea\x2c\xf7\x1c\x05\x1b\x91\x7c\xd7\xd1\xf5\x5c\xd9\x6b\xa1\xe0\x3a\xa4\xf6\x25\x9a\x81\xc6\x28\xe5\x34\x82\xe1\x01\x75\x90\x59\x63\xe6\xca\xed\x82\x84\x72\xe0\x91\xe3\x9e\x48\x61\x54\xc8\x4e\x79\x53\x3f\xfb\x7c\x74\xe0\x79\x89\x45\xbb\x4e\xd9\x4f\x07\xad\xfd\x8d\x9b\x16\x4a\x7c\xc8\xa9\xc4\xb2\x40\x5d\x8b\x1d\x3a\x53\x82\xc1\x75\xd5\x89\xb7\x2f\xec\xf8\x32\x2f\xa9\xc6\x3b\x12\x10\x2b\x1d\xdd\xa2\x37\x4c\x24\xaa\x34\x34\x6a\x28\xf7\xb0\x3c\x7a\xab\x08\x90\x86\x80\xab\xde\xfc\x83\x37\x1f\xdf\x7c\x7e\x6f\xab\xcb\xff\xe7\xc3\x74\x46\x6a\xe4\x2a\xd8\x5f\x80\xc6\xab\x72\x78\x09\x87\x1d\x3e\x0b\x0c\xcf\x83\x80\x19\x90\x9c\x76\xbe\x90\xd4\x83\xd4\xd7\x77\x85\x4e\x49\x4d\xd9\x06\xba\x73\x80\x88\xa9\xc4\x48\x87\x82\x87\x45\x1e\x83\x3b\x91\x1d\x43\xa2\x1c\x6f\x52\xe9\x6a\xfc\x2c\x28\x0e\xb8\x49\x85\xd8\x9d\x51\x8f\x5e\x53\x98\x88\xb7\x0d\xc0\x2d\x7b\xa5\x30\x92\xd8\xb1\x96\xb8\x47\xae\xd5\xca\x90\xdc\x17\x33\x77\xb7\x75\x32\x7e\x75\x6f\x6f\xef\x9a\xb8\x5c\x2f\xf9\xee\xd5\x0b\x77\x74\x5b\x2d\x6d\x4d\xd8\xfc\x67\x50\xf8\xd9\xff\xdd\x20\x8f\x44\x8c\x71\x0d\x2d\x29\x29\x1a\x29\x8f\x89\x16\x44\xd1\x2d\x27\x15\x5c\xbd\x02\x51\xae\x91\xeb\x2f\xcc\x70\x33\x89\x91\x18\x4b\x71\x61\xd8\xdf\x3d\xe0\x58\xb3\x90\x1a\xa4\x0e\x25\x52\x1e\x39\x36\xeb\x30\x8d\xc8\x35\x8d\x40\x63\x7d\xe0\xd2\x97\xa6\x79\x0c\x57\x60\xb8\x39\xf5\x3a\x7b\x37\xcb\x2e\x60\xdd\x75\x6f\x13\xfe\xc4\xe7\x1b\x73\xa7\xef\xb3\x55\xc5\x2f\xf8\xbe\x3a\x01\xbe\x8d\x24\x82\x76\x14\x19\x0c\x3a\x26\x05\x4b\xe8\xe0\x51\x43\xb9\x8f\x79\x7e\xeb\x7e\xf3\xd0\x34\x57\x66\xdd\xdd\x58\xf0\x91\xd1\xe5\xa3\x01\x3f\x9f\x55\x7b\x59\xdc\x1c\x8f\x78\xee\x09\x8f\x79\x10\x72\x97\x30\x71\x58\x17\xc6\x9d\xee\xdf\x88\x48\x48\x4d\x8b\x94\xa6\xed\xd2\x81\xdd\xa0\x20\x66\x58\x0c\x13\xd0\xa8\x5f\xbe\x9d\xf0\x27\x8a\xfc\x9c\xb5\x25\x73\x83\xa0\xb4\xc8\x80\xdf\x48\x84\xd8\x9e\xa7\x97\x17\xc2\x09\x2d\x6f\x81\xad\xaa\x56\xb8\x78\x83\x30\xe7\x1d\xe1\xdc\xe9\x79\xeb\x4e\xf0\x2e\xd2\x74\x4f\xf5\x91\x80\x1a\x9e\xce\xfa\xe7\xb7\x48\xaf\x9d\xbf\x4e\xb7\x6a\x1e\x0c\x31\x6b\x7b\x53\x71\xf0\x4f\x79\x56\xac\x6d\xba\xd5\xd3\x39\xaf\x98\xdb\x76\x10\x2a\x4c\xe6\x1a\x1d\x4f\xff\xb6\x7e\xcd\x8c\xad\x93\xf5\xa0\x9a\x95\x25\x05\x8f\xea\x2b\xae\x0d\x12\x7c\xc0\xa8\xe8\xd9\x87\xee\x7c\xc2\xde\x17\xf8\xad\xef\xd4\x8d\x65\x77\xfa\x8a\x5a\x23\xc4\x3d\x8b\xd0\x67\x7d\xfe\x15\xe2\x44\x95\x9a\x06\xb5\x0b\x7f\x2c\xb0\x58\x5d\x46\xb4\xa8\x5e\xa9\x5e\x56\x58\xe2\x4b\x05\x0f\x35\xcd\x50\x14\x13\xe5\x21\xee\x2c\xbd\x17\x1b\x51\xae\x7b\x21\xc5\x68\x9e\x3e\xc1\xa1\x2c\xde\x5d\xde\xec\xae\xbd\x6b\xcc\x01\xd5\x61\x22\x64\x18\x99\x5c\x99\x31\x98\xae\x9f\x1b\xa9\x7e\x74\xe5\x06\x63\xb3\xab\x28\xc5\xb8\x60\x18\x6a\x11\x46\x4c\x28\x7c\xd7\xe0\x69\x33\xa8\x34\x48\xfd\xce\x31\x58\x32\xf5\x8e\xc2\x97\x22\x48\xbd\x41\xf8\xad\x61\x9b\x57\xac\x1c\xe4\x20\x21\x1b\xf3\x0d\x23\xa1\x7f\xdb\x35\x58\x3a\xe8\x78\xf6\xe2\x7d\xf2\x32\x55\x0d\x36\x5e\xf4\xe2\xae\x9d\xf6\x55\x4f\xd7\xb3\x5d\x4d\xd4\xbd\x2c\xaa\x78\x99\xaa\x75\xf1\x97\x26\xcf\xab\xd2\xf0\x86\x92\x65\x1d\x64\x3b\xa2\xac\x82\x9e\x66\x13\x86\xe5\x1a\x8f\x3e\xa8\x2e\xc1\x9f\x09\x23\x6f\x12\x49\x91\xc7\xec\x48\xda\x51\xdf\x42\x8e\x46\xde\xfc\x2c\xe3\xa8\x1d\x0a\x2e\xe4\xe1\xa4\x53\xe7\xb3\x51\xd1\x22\x7b\x60\xc5\x2c\x7e\x56\x6a\xb1\x28\x74\x5e\xe8\x0b\xa8\x71\x49\xa8\xe4\xf7\x0f\x4d\xfe\xed\x34\xb9\xdc\x87\x77\x46\x8d\x97\xb0\xf3\x24\x3a\xbc\x84\x81\x27\x57\x60\x2f\x33\x2b\xb5\x37\x12\x3c\xa1\x5b\x7f\x52\xb8\x28\xb3\xd2\xb2\xc0\x05\x87\x43\x26\xc8\x58\x74\x30\x74\x91\x73\x9e\x1d\x1e\x83\x61\xde\xff\x34\x87\x38\xae\x82\xc9\x89\x7c\xbb\x5b\xa7\x17\xbc\x4e\x91\xec\xf0\x48\x12\x8a\x2c\x26\x54\x91\x43\x8a\x12\xad\x28\xc4\xa0\x81\x1c\x28\x63\x26\x15\x57\xb0\xb7\xe7\xb2\xb7\xe4\x75\x4a\x15\xc9\x0a\xa5\xcd\xe7\x4a\xc9\x73\x94\x25\x85\xdb\x1f\x38\xf9\xab\x90\x04\x1f\x20\xcb\x19\x5e\x13\x9a\x58\xf2\x7f\x22\xef\xd7\xb5\x54\xea\x7d\x43\x9d\x57\x15\x99\x2d\xd1\x2b\x59\xe8\x4e\x48\xb9\x65\xe3\xb6\x19\x3c\x72\x8d\x0e\x1b\x64\x17\x40\xa3\xb4\x0d\xb2\xbc\xd0\xaf\x8e\x02\xa8\x22\x91\xc8\x72\xc1\x91\xeb\xcb\x1e\xf0\x38\x18\xb0\xb6\xa1\xda\xf3\x63\x83\x47\x73\xbe\x8f\x0c\x23\x4d\x0e\x29\x8d\xd2\x13\x53\xa6\x45\x22\x8f\x8d\x95\x2d\xa1\x4d\xa4\x3d\xef\x8f\x6f\xc9\x0b\x4d\x22\xe0\x5c\xd8\x0d\x03\x4e\xf0\x81\x2a\x6d\xcb\x15\x2d\xe0\x4b\x6e\x6e\xcb\xc9\x1d\x0f\xf8\xf0\x41\x87\x96\xdc\xdc\x83\x22\xe9\x2e\xf5\x98\xcc\x4b\xfb\x80\xbd\x48\xac\x55\xb8\x76\x48\x50\x3d\x85\xc1\x26\x85\x3d\x12\x28\xe5\xcd\xbf\x81\x19\xe5\x2f\x91\x6f\x57\x14\x4a\x8c\xe7\x33\xb3\x6a\x24\x32\x78\xf8\xed\x26\x3f\x5d\xd3\x2e\x94\xde\x19\xf5\x2d\x2d\xe1\x58\x7d\x4c\xd7\xdb\xf5\x93\x45\x24\x12\x19\xe8\x72\x93\xcd\x44\xa5\x0c\xa8\x27\x3b\xaa\xb3\x75\x56\xa9\x60\x31\xca\xf5\x67\x75\x03\x95\x6f\x51\x2d\x57\x61\x0b\xa0\xad\x20\x97\x55\xd0\xf5\x2f\x56\x51\x75\xb2\xd4\x98\xe5\xfa\x78\xf6\x61\xe0\x58\x44\x31\xfd\x2b\x69\xfe\x65\xfd\xa5\x13\x5d\xd4\x3a\x79\x32\xfa\x8d\x61\xb5\xeb\xb9\x26\x1b\x4c\x44\x5d\xbb\x60\xcb\x08\xc0\x9e\x04\xdf\x92\xbf\xc1\xde\x18\x2b\x20\xf1\x90\xa2\xd8\xa3\x94\x34\x2e\xe9\xf6\x41\x9c\x5e\xbb\xca\x91\xb1\x28\xc5\x68\x77\xc6\x11\x59\x6f\x33\xa9\x22\x0a\xb5\xb5\xaf\x96\x45\xe4\x36\x1a\xb6\x53\x11\x3b\x57\x63\xa1\xad\xc3\x1c\xdf\xc0\x5e\xc4\xb3\x24\xf2\xaa\x6c\xf5\xd3\xaa\x5c\xe5\x8d\x62\x29\xf2\x58\x1c\xf8\xef\x4f\xef\x2a\xb1\x04\x5e\x5d\x0e\x10\xbb\xbf\x66\xd1\xee\x37\xde\x7f\xe8\xde\x4c\xdd\xcb\x0a\xa6\x69\x3e\xf5\x9a\x72\xbe\xe6\x35\x81\x40\x4d\xb8\x4a\xf4\xeb\x9f\xf7\x83\x38\x2e\xe3\xc9\xd3\xc2\x4d\xb0\xfa\x3a\x6d\x3a\xb6\xb7\x1d\x94\xd9\x72\x9b\x27\x90\xea\xa5\xd0\xdd\x37\x2f\xec\xeb\x18\xe0\xe4\x97\x9f\xff\x7d\x17\xc7\xe4\x8e\x0b\x9d\xa2\xfc\xe5\xe7\xff\x90\x4d\xa1\xb5\xe0\x0d\xd4\xd5\x2f\x1c\x76\x34\x9d\x00\x63\xe2\x60\xe0\x34\x9f\xec\xcd\x78\x75\xf1\x7c\x52\x92\xca\x7b\xb9\xa2\xce\x0b\x1c\xcf\x9b\x48\x7a\xed\xe3\xd5\xe9\x57\x9f\xf5\xef\x70\x79\x9e\x10\x56\xc7\x2e\xd3\xbf\xed\x31\x71\x9e\x33\xaa\xd0\x0a\x09\xc8\x96\xa4\xab\x96\x42\x9b\x9c\xa2\x52\xdc\x72\x5f\x6a\x31\xf0\x3f\x2a\x1c\xfb\x45\xa3\xb9\xc8\x2d\x79\xe7\xd8\xca\x63\x46\x5f\xde\x0d\xc2\xd8\x59\x4f\x1e\x57\x3e\x7b\x9c\xff\xf4\xb1\xc5\xdb\x78\xa7\xa1\xb9\x1e\xe9\xfc\x78\x3d\x8d\xd6\x25\xa7\xbb\x5a\xda\xf2\xb8\xe8\x37\x6e\xde\xaa\xd1\xa7\xa1\xb3\x7f\xe1\xa6\x27\xfc\x5f\x18\xb3\x4d\x80\x7c\xf9\xed\xd7\x5f\x91\x3b\x6b\xb7\xb4\x30\x16\xdd\xe6\x7f\x2a\x15\x05\x8b\x8d\x0a\x94\xb9\x82\xd1\x81\xb6\x89\x13\x49\x5d\xf4\x62\xdf\x46\xda\x1c\x38\x26\xad\x4d\x1f\x61\xc3\xeb\xef\xc6\x71\x18\x16\xdf\x5d\x12\x86\x42\xb2\x72\x25\x50\x1e\x63\x28\x51\xc8\x08\x8d\x29\x6f\x01\x54\x62\x51\x9d\x68\x54\x6e\xa2\x4e\xb3\x73\x91\x17\x26\xca\x21\x40\xbe\x2d\x63\x1c\x46\x95\x2e\x69\xe2\x83\xc9\x95\x80\x95\xb4\x9c\xe7\xc9\xb3\xca\x06\x17\x02\xf9\x64\x0f\x4f\x7b\xa7\x67\x57\xe6\xbf\xc7\xab\xff\x06\x00\x00\xff\xff\x93\xd1\x3b\xa7\xe9\x5b\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas"].(os.FileInfo),
	}
	fs["/schemas"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas/manifest.json"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
