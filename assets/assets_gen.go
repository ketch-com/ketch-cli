// Code generated by vfsgen; DO NOT EDIT.

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets statically implements the virtual filesystem provided to vfsgen.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2020, 12, 22, 17, 32, 47, 55210784, time.UTC),
		},
		"/schemas": &vfsgen۰DirInfo{
			name:    "schemas",
			modTime: time.Date(2020, 12, 22, 17, 59, 22, 83133989, time.UTC),
		},
		"/schemas/manifest.json": &vfsgen۰CompressedFileInfo{
			name:             "manifest.json",
			modTime:          time.Date(2020, 12, 22, 17, 59, 22, 83066972, time.UTC),
			uncompressedSize: 24268,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\xeb\xae\x1c\x35\xd2\xff\xcf\x53\x94\x5a\x48\xc0\xf7\x25\x27\x01\x7d\xf0\x89\x48\xfb\x23\x2b\x82\x36\x28\x4b\x50\x08\xe4\x47\x38\x3b\xf2\x74\xd7\x4c\x3b\xe3\xb6\x1b\xdb\x3d\x73\x66\x51\x24\x1e\x64\xf7\xe5\x78\x92\x95\x2f\xdd\xd3\x17\xbb\x2f\x73\x26\x90\x45\x44\x42\x9c\xe9\xb6\xab\xca\xe5\xba\xbb\xdc\x3f\x5f\x01\x24\x1f\xa8\x34\xc7\x82\x24\x8f\x20\xc9\xb5\x2e\x1f\x3d\x78\xf0\x46\x09\x7e\xdf\x3d\xbd\x16\x72\xfb\x20\x93\x64\xa3\xef\x3f\xfc\xff\x07\x7e\xe4\x3d\x33\x4d\x1f\x4b\x34\x73\xc4\xfa\x0d\xa6\xda\x3f\xa3\x9a\xd9\x87\x7f\x27\x72\x87\xba\x64\x24\x45\x20\x65\x09\xed\x89\x12\x7f\xaa\xa8\xc4\x2c\x79\x04\xaf\xaf\x00\x00\x12\x4e\x0a\xb4\xef\x00\x92\x3d\x4a\x45\x05\x4f\xae\x00\x6e\xec\xf0\x0c\x4b\xe4\x19\xf2\x94\xa2\x4a\x1e\xc1\xcf\x6e\x98\x01\x82\x4a\xaf\x2a\x85\x72\x45\x2a\x9d\x1b\x68\x49\xf3\x6b\x95\x12\xc6\xd6\x24\xdd\xad\x2a\xc9\x92\x9b\x2b\x80\xb7\x16\x18\xc9\x32\xaa\xa9\xe0\x84\x7d\x2b\x45\x89\x52\x3b\xa0\x1b\xc2\x14\xda\x01\x65\xfb\xb1\xc7\x45\xb3\xe6\xef\xd6\xba\x95\x96\x94\x6f\x3d\xd9\xed\xb5\x3f\x2e\x4b\x78\xfa\xe5\xe9\x45\x86\x1b\x52\x31\x6d\x5e\x25\xf6\xd9\x5b\xbf\x54\x21\xb7\x8b\x00\x3f\x97\x5b\xc2\xe9\x3f\x89\x59\xc0\x0c\xf0\x96\xab\x4b\x09\xb7\x93\x3a\x60\xea\x0d\x59\x0a\x49\x61\x41\xb8\xa6\x29\xd4\x00\x9a\x61\x25\xd1\x1a\xa5\x81\x98\xfc\xe3\xa3\xd7\x0f\xef\x7f\x71\xf3\xbf\x1f\xff\xf8\xe3\x75\xe0\xcf\x0f\xba\xa4\x94\x92\x16\x44\x1e\x57\x29\xd1\xb8\x15\xf2\x18\xa0\xe9\x75\x43\x14\x24\xbc\x62\x2c\xb9\x19\x52\xd7\x16\x4e\x43\xa9\x07\x0b\x0d\xd8\x66\x0a\xf2\xaa\x68\xc4\xb4\x26\x61\x4f\xd2\xd3\x10\x23\x53\x4a\xa1\x4e\xfc\xef\x9b\x0e\xc1\x0a\x53\xc1\xb3\x77\x40\x72\x03\xf8\x1d\x10\x2d\x2b\xd6\x92\xfe\x36\x9d\xb5\xaa\xc7\xe9\x34\xb4\xb9\xf9\xcd\xbb\x29\x95\xf3\x14\x0e\xd4\xce\x09\x1f\xc5\x43\xe7\x49\x5c\xfa\xba\x84\x18\x22\x00\x6f\x4b\x89\x4a\x51\xbe\x85\x43\x8e\x1c\x74\xee\xac\x11\x55\xb0\xa7\x8a\xae\x19\x76\x67\x0f\x54\xa9\xc5\x16\x3b\x80\x72\xa5\x09\x63\x77\xa7\x48\xf0\x2e\x45\x29\xe1\xb0\x46\xf0\xf0\x31\x9b\x43\xd7\x55\xfb\xff\xf5\xe6\xa5\xa4\x24\x6b\xca\x68\x8f\x95\x0d\x89\x44\x4a\x72\x8c\x68\x6c\x67\x6e\x33\x84\x6a\x2c\x7a\xbb\x12\x5d\x6f\x04\x5e\x47\xf2\x06\xe2\x69\xb6\x1f\x65\x41\xf5\xca\x48\x01\xd9\x76\xed\x5b\xfb\x3d\xe5\x5b\x54\xc3\xb7\x92\x6e\x73\xad\xe2\xb3\xfd\xfb\xd3\xec\xe6\xe5\x4d\x90\x87\xaa\x2a\x4b\x21\x35\x66\x2b\x46\xf8\xb6\x22\xdb\x88\x3a\x78\x5e\x8e\x6b\x43\x03\x0c\x4e\xc0\xce\xe3\x6d\x88\x71\x38\xb9\x98\xb2\x92\xa5\x50\x77\x59\x41\x03\xe1\x82\x64\x2b\x85\x5c\x53\xc2\x56\x0a\xe5\x9e\xa6\x2d\xe0\xe0\xcd\x41\xb6\x42\x9e\x13\x9e\x62\x81\x5c\x77\xdf\x12\x4e\xd8\x51\xd3\xb4\x37\x69\x8d\x39\xd9\x53\x21\x09\x5b\x91\x6c\x6f\xac\x89\x1a\x68\x63\x89\x52\x19\x53\xd4\xf7\xa2\x6e\x0d\xc8\x70\x55\xec\x74\x6f\x8e\x2a\x54\xe0\x29\x16\x84\xb2\xc0\xf3\xc8\xe3\x8c\x68\xb2\x5a\x4b\xb1\x33\x24\x4d\x6c\x99\x93\xd7\xf3\x37\xcc\xcf\xbf\xdc\x76\x65\xc8\x50\xf7\x6c\x25\x49\x53\x54\xbd\x1d\x48\x85\x94\x98\x06\xd4\x57\x48\x5d\x5b\x82\x89\xb5\xd3\xcc\x08\x86\x3e\xae\x54\x49\xd2\xbb\x48\x6d\x0d\x08\x3c\xa0\x39\xdc\x68\x85\xb2\xd3\x20\xdb\xc3\x04\xc7\xe7\x9b\x1e\xd7\xda\x1e\x22\x14\xf5\x76\xf8\x96\x75\xb9\x0b\xbd\xa8\xb8\xf5\x74\x43\x99\x46\xa9\x92\xce\xf3\x9b\xee\xb0\x98\x3b\xf5\x6f\x0b\xc2\xc9\x16\xb3\xc0\xab\x16\x2f\xd6\x42\x30\x24\x7c\x40\x40\x9b\x29\xaf\x72\xd4\x39\x4a\xd0\x39\x55\x3d\xee\x18\x1f\xeb\xf1\x80\x90\x50\x90\xb2\xec\x79\xb5\x9a\xd4\x53\x30\x68\x43\x82\xa4\x37\xe4\xed\x80\x03\x96\x5b\xa3\xb4\x07\xfc\x70\x9f\xf4\xe1\x7e\x82\x85\x3b\x89\xbd\x17\x55\x5f\x0c\xfb\x29\xf0\x1e\xc3\x9e\xa1\x4a\x25\x2d\x75\x37\x20\xbf\x18\x11\x6d\xf0\x81\xa9\xc1\x38\x24\x46\x6a\x2d\xa8\xa3\x64\x76\xc3\x91\x99\x54\xd6\x90\x03\xd3\x86\xca\x1d\x40\x3a\x50\xf3\x20\x5e\x8f\x26\x3c\x6c\x44\x9b\xdb\xc8\x42\x73\x0d\x6b\x84\x2c\x88\xee\xb3\x10\x86\x8a\xec\xc7\xcf\x09\xa1\x3b\x13\x46\xf5\xbf\xcb\x8d\xf0\xdb\x39\x92\x54\x8f\x9b\xdc\x29\x18\xe1\x45\xd8\xe3\xf4\x47\x18\xa7\x1a\x05\x60\x4d\x02\xd7\x52\x30\x86\x72\x95\x56\x4a\x8b\x02\xe5\x8a\x86\xcc\x4d\x33\x83\xf0\x4c\x0a\x9a\xb5\x23\x85\x99\x33\xc6\x47\x6d\xa8\xc4\x05\x40\xa9\x50\x0b\x47\xef\x91\x67\x62\x6a\x75\x05\x4d\xa5\x50\x62\xa3\x17\x00\x3f\xcd\x29\xab\x35\xa3\x2a\x9f\xe4\xa1\x14\xbb\x6a\xd9\xe0\xf9\xd4\x54\x9c\xfe\x54\xa1\x89\x98\x0e\x2a\xa2\x84\x7e\xa4\x89\xda\xca\x5c\xf0\x81\xf5\xac\xff\xdd\x04\x9f\x0f\x0c\x96\x07\xe7\x75\xf3\xb7\x51\x0c\x8f\xec\x0e\xaa\x21\xc9\x61\x8c\x39\x2a\x27\x9f\x4c\xbc\xff\xf4\xb3\xcf\x27\x46\x7c\xf6\xc9\xa7\x0b\x79\x1b\x78\x3a\x7c\xd6\x7f\xd2\xfd\xdd\xfe\xd5\xd9\xab\x77\x14\x57\x05\x6d\x54\xb2\x27\x92\x92\x35\xc3\x3f\x62\xb8\xa5\x65\xf5\x67\xb4\x35\x8a\xfd\xbf\x28\xda\x8a\x7a\xf3\x3b\xd2\x38\xee\xc1\xc7\x0c\xd4\x88\xd7\x5e\xe2\xaf\x97\x78\xea\x29\x1f\x3d\xdb\x3b\xcf\xf5\xcb\x33\x3c\xf2\x32\x5f\xbc\xc4\x0b\xcf\xf4\xbf\xb3\x3d\xef\x1c\x9f\x3b\xe6\x6d\xfb\xbe\x20\x90\x12\xc4\x7d\xeb\x65\xc4\x34\xea\x4f\xdb\xca\x14\x76\x99\xa3\xa2\x1c\xf3\xb2\x71\xff\x3a\xe6\x59\xa3\x3e\x75\x9a\x83\x8d\x3f\x1a\xe5\x61\x34\xc1\x39\xf1\xf0\x07\x0f\x08\x32\xdc\x50\x4e\x63\x36\x68\x22\xcf\x49\x98\x48\x87\x85\xb4\xe6\x6d\xc8\xca\x06\x73\x9c\x85\x19\xce\x74\x7e\x13\x77\x1c\x30\x3b\x84\x3b\x31\xeb\x1b\x52\x20\x88\x8d\xad\xd6\x87\x23\x02\xf7\x2f\x18\x53\x9e\x78\x74\x29\x72\x9e\x79\x80\x03\x92\x22\x13\x27\xa2\xc8\xe4\x40\x79\x26\xe2\x61\x64\x92\x0a\xb1\xa3\x23\x09\x5c\x46\x34\x79\x46\x8e\x28\xc3\x51\x62\x28\x46\x0c\x73\xea\xcd\x21\x1e\x78\x4f\x9f\x42\xf5\xc7\xd7\xec\xfa\xfa\xd5\x4b\xc8\x50\x13\xca\x42\x25\x03\x98\x95\xce\x4f\x89\xba\x1d\xb1\xc3\x63\x84\x03\x11\xb4\x4b\xf3\xfa\x79\x99\xfd\x1c\x91\x83\x05\x89\x4c\x9b\x97\x35\x60\xd0\x02\x36\x94\x67\x1d\xf9\x83\x03\xd5\x39\x75\x87\x5a\x5f\xbf\x7a\x39\x06\x70\x32\xb1\x01\x48\x72\x24\xd9\x68\xea\x67\x44\x93\x11\x5a\xa8\x58\x76\x12\xcb\x4f\xa2\xd9\x9f\xdf\xc4\x4b\x73\x6d\x87\xc7\xbe\xae\xf6\x79\x15\xa3\xf3\xb7\xc9\xaf\x9a\xbf\x23\x07\x62\xb9\x90\x7a\x15\x8e\x86\xa7\x9b\x01\xec\xec\x76\xb0\x0b\x3a\x27\x1a\x4c\x8a\x42\xa4\x02\xca\x41\x21\x91\x69\x0e\x12\x55\xc5\xb4\x02\xc2\x33\xd8\x12\x13\x1d\x76\x0e\x22\xa3\x8d\x0e\x4e\xb9\x31\x3b\x9b\xc2\x1a\x40\x9c\x48\x71\x3a\xaa\xf5\xa6\x04\x54\x2a\x11\xe7\xf4\x61\xd8\xc3\x4b\x7b\xe6\xbb\xe2\x42\x2f\x6f\xc9\x38\xcd\x07\x33\x1f\x54\x2e\x0e\x56\x01\x0d\x45\x95\x42\xe9\x8e\x92\x89\xda\x51\xbe\x35\x21\x10\x90\x4a\xe7\x42\xce\xef\x14\x39\x61\xb8\xcb\x31\x61\x0b\xc8\x79\x47\x4f\x0d\xb8\x6f\x1b\x50\x49\x58\x1e\x51\x57\xa5\xed\xec\x59\xde\x94\xa2\xab\x12\xbe\x7f\xf1\xac\xcb\x80\x5c\x14\x58\x92\x2d\x9e\x05\xb3\x9e\x3c\x04\xdb\xe4\x36\xfe\x10\xf8\x2c\xf0\x35\x90\xfa\x24\x79\x88\xc6\xb7\x77\xac\x4a\xc1\x68\x7a\x3c\x0b\x89\x07\x01\x0e\xc4\x10\x85\xd2\x44\x57\xea\x3c\x96\xdb\xa9\x43\x90\x5a\x9c\x07\x4f\xa3\x2c\x94\x31\xa7\xfe\xe8\x78\x08\x39\x13\xe9\x59\x90\x33\x91\x56\x05\x72\xed\x3c\xdc\x00\x2c\x13\x5b\x71\x66\x5b\x4c\xbf\x7d\xc7\x82\x6a\x86\x05\xa3\x8f\x84\x51\xbe\x6b\x1a\x74\x9a\xb1\xb3\xba\x69\xea\x96\x39\xfd\xe2\x04\xb9\xa5\x81\x07\x9a\xf9\x7e\xb9\x1c\xe9\x36\xd7\xed\x10\xaa\x7e\x64\xde\xba\x71\x8d\x4b\x68\xc0\xc7\x9a\x75\xea\xe5\x2e\xef\x8d\x31\xfc\x00\xf7\xab\x33\x60\xb2\x21\xc7\x32\xe9\x1c\x8c\x1b\xca\xb0\x9b\x9e\xb4\xc1\xd6\x1c\x0a\xc2\xa5\x5c\xe3\xb6\x17\x98\xf4\x96\xe2\xe6\x47\x96\xf2\x30\x88\xb2\xe1\xfb\xb9\x38\x3d\x80\x69\xa4\x41\x93\x5a\x4a\xdc\x53\x3c\x9c\x69\xff\x87\x1d\x75\x1e\xda\x1c\x47\x30\x72\xea\xfe\xb4\x20\xdb\xce\x41\x7b\x24\x50\xef\x28\x4b\x27\xde\x9e\x19\x63\x4f\xa8\xcc\x84\xd2\x8c\xa9\x4d\x77\x97\xa3\xe1\x7b\x50\x79\xa6\xa2\xcd\x1e\xa3\x02\x1a\x14\x2f\x23\x76\x22\xe0\x90\x1e\x2d\x45\x3e\xd4\xa8\x3e\x92\x90\x56\x4d\xc8\xf8\x10\xcd\x50\xb5\x22\x72\xde\xc7\x1e\x54\xb0\xc5\xe8\x03\x5a\x16\xc7\x3f\xa1\x73\xa9\xe0\x9a\xa4\x77\xe9\xf4\x69\x20\x9c\xa7\x67\x31\x6d\x1a\x54\x7b\x7d\x2d\xf7\x2e\x0a\x36\x22\xf9\xa1\xd2\xf5\x5c\xd9\x6b\x71\x21\x54\xa4\x8e\x25\x9a\x89\xc6\x34\xe7\x34\x25\xc3\x02\x75\x52\x58\x63\x16\xca\xed\x92\x0d\xe5\x84\xa7\x81\x73\x22\x85\x69\x25\x3b\xed\x4d\xd0\xcb\x3e\xdf\x06\xf8\x79\x89\x45\x87\xaa\xec\xa7\x42\x6b\x7f\xe3\xa6\x85\x12\x6f\x4b\x2a\xd1\xf5\xd5\x6b\xb1\xc3\x60\x4a\x30\x38\xae\x3a\xd1\xf6\xc4\xce\x77\x79\x89\x9f\x1f\x48\x40\xac\x74\x74\xf0\x4a\xdc\x48\x54\xf9\xca\xa8\xa1\xdc\x93\xe5\xd1\x9b\x07\x00\x0d\x80\x53\xbc\x72\x3a\xf3\xfa\xe8\xf5\x27\xf7\xbf\xb8\xb1\xdd\xe5\xff\xf3\x71\x3e\x23\x35\x0a\xdd\x33\x58\xc0\x8d\x17\x6e\xba\x63\x87\x9d\x3e\x8b\x19\x91\x7b\x0c\x33\x58\x72\xda\xf9\x4a\xd2\x08\xa7\x9e\x3f\xae\x74\x0e\x35\x64\x1b\xe8\xce\x61\x44\x46\x25\xa6\x7a\x25\xf8\xaa\x2a\x33\x12\x4e\x64\xc7\x38\xe1\xe6\x9b\x54\xda\xcf\x9f\xc5\x8a\x03\xae\x73\x21\x76\x77\xe8\x47\xaf\x21\x4c\xc4\xdb\x86\xc1\x2d\x7b\xa5\x30\x95\xd8\xb1\x96\xb8\x47\xae\xd5\x99\x21\x79\x2c\x66\xee\x6e\xeb\xd8\xd6\x8e\x6c\x6f\x77\xcd\xaf\xdc\x7a\xe1\xfb\x17\x4f\xc3\xd1\xad\x5f\xda\x39\x61\xf3\x5f\x89\xc2\xcf\xff\xef\x3e\xf2\x54\x64\x98\xd5\xac\x05\x07\xd1\x48\x79\x06\x5a\x80\xa2\x5b\x0e\x9e\x5d\x1d\x38\xc6\x68\x21\xd7\x4f\xcc\x74\x83\xc4\x48\x8c\x85\xb8\x30\xec\xef\x16\x38\xce\x59\x48\xcd\xa4\x0e\x24\x70\x25\xc7\x66\x1d\xe6\x25\x72\x4d\x53\xa2\xb1\x2e\xb8\xf4\xa5\x69\x1e\xc1\x9e\x19\x61\x4a\xa3\xce\x3e\x4c\x72\x88\xb1\xe1\xbe\xb7\x09\x7f\x12\xf3\x8d\x65\xd0\xf7\xd9\xae\xe2\xa7\x7c\xef\x2b\xc0\xd7\xa9\x44\xa2\x03\x4d\x06\x83\x81\x9b\x8a\x6d\xe8\xe0\x52\x83\xdb\xc7\xb2\xbc\x0e\xdf\x79\x68\x5e\x7b\xb3\x1e\x7e\x59\xf1\x91\xd9\xee\xd2\x40\x9c\x4e\xff\xde\x35\x37\x67\x23\x9e\x7b\xc2\x63\x1e\x84\xdc\x6d\x98\x38\x9c\x17\xc6\x9d\xce\xdf\x40\x6c\xa0\x86\x05\xce\xb4\x5d\x3a\xb0\x1b\x34\xc4\x0c\x9b\x61\x12\x9a\xf6\xdb\xb7\x37\xfc\x1d\x45\x7e\xc1\xde\x92\xb9\x41\x50\x5e\x15\x84\xdf\x97\x48\x32\x5b\x4f\x77\x07\xc2\x1b\xea\x4e\x81\xad\xaa\x7a\xbe\x44\x83\xb0\xe0\x19\xe1\x5c\xf4\xbc\x75\x26\xf8\x38\xd5\x74\x4f\xf5\x11\x88\x1a\x56\x67\xe3\xf8\x2d\xa7\xcf\xc5\x5f\xa7\x5b\x35\x0d\x06\x98\xb5\xbd\xb9\x38\xc4\x51\xde\x29\xd6\x36\xc3\x6a\x74\xc1\x23\xe6\xb6\x1d\x24\x9e\x27\x73\x8d\x4e\x64\x7c\x5b\xbf\x66\xc6\xd6\x9b\xf3\x99\x6a\x56\xb6\xa9\x78\x5a\x1f\x71\xad\x11\xf0\x16\xd3\xaa\x67\x1f\xba\xf8\x84\x3d\x2f\x88\x5b\xdf\xa9\x13\xcb\x2e\x7a\x0f\xad\x11\xe2\x9e\x45\xe8\x93\x3e\xff\x08\x71\xa2\x4b\x4d\x13\xb5\x5b\xfd\x54\x61\x75\x76\x1b\xd1\xa2\x7e\xa5\x7a\x59\x2b\xc7\x5f\x2a\xf8\x4a\xd3\x02\x45\x35\xd1\x1e\x12\xce\xd2\xa1\x1b\x1b\x51\xae\x7b\x21\xc5\x80\xc4\x87\xf3\x29\x94\xd5\xfb\x4b\x9b\xdd\xb5\xf7\x8d\x38\x42\xf5\x6a\x23\xe4\x2a\x35\xb9\x32\x63\xf1\x93\xe8\x39\xdd\x8f\xa1\xdc\x60\x0c\xbb\x4a\x73\xcc\x2a\x86\x2b\x2d\x56\x29\x13\x0a\xdf\x37\xf6\xb4\x09\x54\x9a\x48\xfd\xde\x11\xe8\x88\x7a\x4f\xd9\x97\x23\x91\x7a\x8d\xe4\xf7\x66\xdb\x55\xec\x57\xd7\x39\x94\x44\x92\x91\xc8\x7c\x34\xf4\x6f\xbb\x06\x0b\x07\x03\xd7\x5e\xa2\x57\x5e\xa6\xba\xc1\xc6\x9b\x5e\xc2\xbd\xd3\xb1\xee\xe9\x1a\x5b\xef\xf1\xa0\xef\x65\x51\xc7\xcb\x54\xaf\x4b\xbc\x35\x79\x5e\x97\x46\x34\x94\x74\x7d\x90\xed\x88\xd2\x07\x3d\xcd\x26\x0c\xdb\x35\x02\x0d\x25\x63\x3d\x68\xcb\xe8\x33\x61\xe4\xfd\x8d\xa4\xc8\x33\x76\x84\x76\xd4\xb7\x90\xa2\x91\x3b\x3f\xcb\x28\x6a\x87\x82\x0b\x69\x38\xe9\xd4\xdd\xc9\xf0\xb0\x60\x4f\x58\x35\x8b\x9e\x33\xb5\x58\x54\xba\xac\x06\xf9\xfb\x19\x6a\xec\x00\x39\x7a\xff\xd4\xe4\x2e\x89\xbf\xa5\x26\xbb\x7d\x78\x6f\xd4\x78\x09\x39\xef\x44\x87\x97\x10\xf0\xce\x15\x38\x4a\xcc\x99\xda\x9b\x0a\xbe\xa1\xdb\x78\x52\xb8\x28\xb3\xd2\xb2\x6a\x07\xa1\x53\xc5\x21\x13\x64\x2c\x2a\x0c\x5d\xa4\xce\xb3\xc3\x63\x32\xcc\xfb\x9b\x07\x17\x2d\xe2\x84\x1a\x26\x27\xf2\xed\x6e\x9f\x5e\xf2\x32\x47\xd8\xe1\x11\x36\x14\x59\x06\x54\xc1\x21\x47\x89\x56\x14\x32\xa2\x09\x1c\x28\x63\x26\x15\x57\x64\x6f\xeb\xb2\xd7\xf0\x32\xa7\x0a\x8a\x4a\x69\xf3\xd8\x2b\x79\x89\xd2\x41\xb8\xfe\x91\xc3\x57\x42\x02\xde\x92\xa2\x64\x78\x0f\xe8\xc6\x82\xff\x0b\x7c\x58\xf7\x52\xa9\x0f\x0d\x74\xee\x3b\x32\x5b\xa2\xe7\x48\xe8\x22\xa4\xdc\x92\x71\xdd\x4c\x1e\x39\x46\x27\x6b\x5c\x7c\xac\x17\xe0\x86\xb3\x0d\xd2\x1d\xe8\xfb\x52\x00\x55\x90\x8a\xa2\x14\x1c\xf9\x48\x4d\xeb\x9c\x02\x4f\x80\x00\x6b\x1b\xfc\x9e\x1f\x1b\x7e\x34\xf5\x7d\x64\x98\x6a\x38\xe4\x34\xcd\x4f\x44\x99\x37\x12\x79\x66\xac\xac\x63\xed\x46\xda\x7a\x7f\x76\x0d\x4f\x35\xa4\x84\x73\x61\x37\x8c\x70\xc0\x5b\xaa\xb4\x6d\x57\xb4\x0c\x5f\x72\x72\xeb\x90\x0f\x9d\xa0\xc6\x5b\xbd\xb2\xe0\xe6\x16\x8a\x54\x2e\x0e\xcf\xf9\x0f\xc3\x4f\x0c\x4d\x66\xa6\x7d\x96\x3d\xdd\x58\xbb\x70\xaf\x2f\x43\xae\x7d\xb4\x66\x47\x2a\x38\x77\x9f\xc7\x00\xb1\x47\x69\xbf\x6d\x14\x2d\xa0\xf5\xb3\xdd\x21\xe9\x3f\x18\xc1\x7d\xce\x9f\x64\x74\xa4\xab\x61\x36\xfd\x4e\xe1\x5b\x0b\x70\x7a\x61\x97\xe1\xf7\xcd\x95\x36\xfd\x62\x30\xa3\xba\xdf\x03\x3b\x58\x44\xdf\x58\x76\xd6\x60\x20\x04\xef\xb2\x5c\x80\xf8\x93\xb0\xa5\x39\xe1\xdb\x41\xf9\x7f\x2e\x8d\x32\xdc\x0d\x74\x31\x01\x59\x23\xd4\x28\x8c\xfa\xe4\x64\x8f\x40\x1c\xeb\xe3\x3a\x5e\x50\xfe\x0c\xf9\xf6\x8c\x5e\x9a\xf1\x94\x77\x56\x1b\x4d\x41\x6e\x7f\x3f\xe4\xa7\x93\xfc\x85\x06\x6e\x46\x0b\x94\xb1\x1f\x5f\x59\xf3\x71\x76\x21\xb7\xb7\xe9\x27\x9f\x09\x12\x19\xd1\x6e\x8f\x0d\x1e\x27\x02\x83\x04\xe0\x62\xc5\x5c\xdb\x89\x97\x0b\x96\xa1\x3c\xbf\x9a\x3b\x70\x0a\x2d\xa8\x6e\x15\xb6\x45\xbe\x6d\xe8\xfc\x37\xcd\xa8\x3a\xf9\x72\x2c\xca\x40\x51\x7f\x69\xb9\xd8\x0f\xb6\x26\x6f\x74\x45\xf1\x8f\xe9\xc5\xd7\xf6\x65\x27\x08\xad\xf5\xf2\x14\x1b\x34\xfe\xd7\x2e\xea\x1e\xac\x71\x23\xea\x16\x17\xdb\x6d\x42\xac\x51\xbf\x86\xbf\x91\xbd\xf1\x69\x04\xb2\x21\x44\x63\xf1\x25\xcd\x1c\xdc\x3e\x27\xa7\x19\xa0\x4a\x64\x2c\xcd\x31\x1d\xb6\xe9\xc1\xec\x4a\x6a\x6f\x47\xa9\x02\x85\xda\xba\x61\x4b\x22\x72\x9b\x34\x59\x54\x60\x71\x35\x8e\xdc\xc6\x55\xe3\xbb\xd8\xb3\xa3\xb0\x20\x40\xf7\x2e\xfd\xdd\xea\x9d\x0f\x5a\x32\x29\xca\x4c\x1c\xf8\x1f\x4f\xf9\xbc\x58\x12\xee\xcf\x90\xc0\xee\xaf\x59\x74\xf8\x53\x00\x7f\x2a\xe0\x12\x05\x2c\x2a\xa6\x69\x39\x75\xf3\x76\xbe\xfa\x35\x11\x41\x0d\xd8\x17\x85\xea\x4f\x41\x92\x2c\x73\xb9\xc7\x69\xe1\x26\xb1\x79\x99\x37\x03\xdb\x7b\x4f\x94\xd9\x77\x9b\x53\x82\xbf\x55\xf6\xf8\xdb\xa7\xf6\x26\x15\xe1\xf0\xeb\x2f\xff\x7a\x9c\x65\xf0\x98\x0b\x9d\xa3\xfc\xf5\x97\x7f\xc3\xba\xd2\x5a\xf0\x86\xd5\xfe\x6b\x98\x1d\x75\x07\xc2\x98\x38\x18\x76\xda\xd8\x55\x62\x73\xe7\xf4\xa4\x29\xde\x8f\x85\x32\x94\x0b\x1c\xe5\x98\xac\xeb\xdc\x8b\xce\xd3\x37\x84\xeb\x6f\xb6\x45\xae\x9b\xfa\x12\xdd\xf4\x77\x60\x26\x6a\x7f\x9d\xf5\xf7\xb5\x5a\x21\x10\xd9\x92\x74\xd5\xd2\x6a\x13\x70\x7b\xed\x75\xfb\x52\x8b\x41\xb0\xa4\x02\x63\x05\xc4\x25\x9c\x6b\x46\xce\xb8\x13\x0b\xa7\x9c\x37\x0e\xa8\xe6\xe5\xc8\x25\xcd\x11\x2a\x96\x5f\x91\x85\x59\xdb\xdf\xa3\x6d\x7c\xd0\xd0\x66\x8f\x0c\x8e\x5e\x2d\x85\x78\x85\xe0\x2e\xe8\xa2\xef\x62\x6f\x22\x77\x4a\xc3\x64\x27\x6f\xd4\xe8\x35\xe2\xd9\x5f\x43\xea\x09\xff\x13\x63\xb6\x81\xc0\xd7\xdf\x3d\xff\x06\x1e\x5b\xbb\xa5\x85\xb1\xe8\xb6\x56\xa0\x72\x51\xb1\xcc\xa8\x80\x4b\x1a\x8c\x0e\xb4\x4d\x9c\xd8\xd4\x0d\x52\xf6\x1e\xad\xad\x97\x64\xd0\xda\xf4\x11\x32\xa2\x4e\x6f\x9c\x0f\xc3\x46\xcd\x4b\xb2\xa1\x92\xcc\xad\x84\xb8\x92\x97\x12\x95\x4c\xd1\x98\xf2\x16\x83\x1c\x2f\x7c\xf5\xcb\xbb\x89\xba\x24\x53\x8a\xb2\x32\xa1\x0e\x10\xf8\xce\x05\x3a\x8c\x2a\xed\x60\xe2\xad\x49\x9a\x08\x73\xb0\x82\x67\x0f\x2d\x0a\xe3\x2d\xa6\x0b\x19\x19\x78\x7a\x99\x4b\xca\xbd\x4a\xeb\x95\xf9\xef\xed\xd5\x7f\x02\x00\x00\xff\xff\xb4\xb4\x8e\x67\xcc\x5e\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas"].(os.FileInfo),
	}
	fs["/schemas"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas/manifest.json"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
