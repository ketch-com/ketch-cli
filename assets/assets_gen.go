// Code generated by vfsgen; DO NOT EDIT.

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets statically implements the virtual filesystem provided to vfsgen.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2020, 12, 29, 21, 43, 28, 235910709, time.UTC),
		},
		"/schemas": &vfsgen۰DirInfo{
			name:    "schemas",
			modTime: time.Date(2020, 12, 30, 23, 27, 59, 793230091, time.UTC),
		},
		"/schemas/manifest.json": &vfsgen۰CompressedFileInfo{
			name:             "manifest.json",
			modTime:          time.Date(2020, 12, 30, 23, 27, 59, 791615667, time.UTC),
			uncompressedSize: 23075,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\xdd\x8e\xdc\x36\xb2\xbe\x9f\xa7\x20\x84\x00\x49\xce\xb1\xc7\x4e\x70\x92\x83\x18\xd8\x0b\x6f\xe2\xc5\x4e\xe0\x8d\x0d\x7b\x1c\x5f\x38\xb3\x0d\xb6\x54\x6a\xd1\x4d\x91\x0a\x49\x75\x4f\x6f\x60\x20\x0f\xb2\xfb\x72\x79\x92\x05\x7f\xf4\x4f\xea\x6f\xda\x8e\x77\x11\x03\x41\xa6\x25\xb2\xaa\x58\x64\x55\x7d\x45\x16\xf5\xcb\x05\x42\xd1\x27\x32\xce\x20\xc7\xd1\x23\x14\x65\x4a\x15\x8f\x1e\x3c\x78\x2b\x39\xbb\x6f\x9f\x5e\x72\xb1\x7b\x90\x08\x9c\xaa\xfb\x0f\xff\xff\x81\x6b\x79\x4f\x77\x53\xa7\x02\x74\x1f\xbe\x7d\x0b\xb1\x72\xcf\x88\xa2\xe6\xe1\xdf\xb0\xd8\x83\x2a\x28\x8e\x01\xe1\xa2\x40\xed\x8e\x02\x7e\x2e\x89\x80\x24\x7a\x84\xde\x5c\x20\x84\x50\xc4\x70\x0e\xe6\x1d\x42\xd1\x01\x84\x24\x9c\x45\x17\x08\xdd\x98\xe6\x09\x14\xc0\x12\x60\x31\x01\x19\x3d\x42\xbf\xd8\x66\x9a\x08\x48\xf5\x4a\x82\x78\x5c\xaa\x4c\xd3\x8a\x4a\x09\x62\x83\x4b\x95\x6d\x62\x4c\xe9\x16\xc7\xfb\x4d\x29\x68\x74\x73\x81\xd0\x3b\x43\x0a\x27\x09\x51\x84\x33\x4c\x9f\x0b\x5e\x80\x50\x96\x64\x8a\xa9\x04\xd3\xa0\x68\x3f\x76\x9c\x48\x52\xff\xdd\x1a\xb5\x54\x82\xb0\x9d\x13\xba\x3d\xf2\xc7\x45\x81\xae\xbe\x6b\x5e\x24\x90\xe2\x92\x2a\xfd\x2a\x32\xcf\xde\xb9\x81\x72\xb1\x5b\x44\xf8\x99\xd8\x61\x46\xfe\x81\xf5\x00\x66\x90\x37\x3a\x5d\x2a\xb8\xe9\xd4\x21\x53\x4d\xc7\x52\x4a\x12\x72\xcc\x14\x89\x51\x45\xa0\x6e\x56\x60\xa5\x40\x68\x8a\xd1\xdf\x3f\x7b\xf3\xf0\xfe\x37\x37\xff\xfb\xf9\x4f\x3f\x5d\x7a\xfe\xfc\xa4\x2b\x4a\x21\x48\x8e\xc5\xe9\x5b\xac\x60\xc7\xc5\xc9\x23\xd2\x9b\x5a\x26\x14\xb1\x92\xd2\xe8\x66\x28\x5c\x7b\x65\x6a\x41\x1d\x55\x14\x57\x64\xeb\x2e\xc0\xca\xbc\x5e\xa3\x95\x04\x07\x1c\x37\x4d\xf4\x92\x92\x12\x54\xe4\x7e\xdf\x74\xe4\x95\x10\x73\x96\x9c\x5f\xe2\x9a\xee\x7b\x90\x59\x94\xb4\xb5\xf6\xdb\x72\x56\x66\x1e\x96\x53\xcb\x66\xfb\xd7\xef\xa6\x0c\xce\x49\x38\x30\x3a\xbb\xf4\x08\x1c\x3b\x4f\xc2\x6b\xaf\x2b\x88\x16\x02\xc1\x6d\x21\x40\x4a\xc2\x76\xe8\x98\x01\x43\x2a\xb3\x9e\x88\x48\x74\x20\x92\x6c\x29\x74\x7b\x0f\x0c\xa9\xa5\x16\xd3\x80\x30\xa9\x30\xa5\x77\x97\x88\xb3\xae\x44\x31\x66\x68\x0b\xc8\xd1\x87\x64\x8e\x5c\x17\xed\xff\x57\x93\x17\xe3\x02\x6f\x09\x25\x3d\x55\xd6\x22\x62\x21\xf0\x29\x60\xaf\x9d\xbe\x75\x13\xa2\x20\xef\xcd\x4a\x70\xbc\x01\x7a\x9d\x95\x37\x58\x9e\x7a\xfa\x41\xe4\x44\xe9\xf5\x81\x77\x5d\xe7\xd6\x7a\x7d\xc5\x76\x20\x87\x2f\x05\xd9\x65\x4a\x06\xfb\xda\xd7\x4d\xdf\xfa\xdd\x8d\x57\x7f\xb2\x2c\x0a\x2e\x14\x24\x4f\x31\xdb\x95\x78\x17\xb0\x04\xa7\xc6\x71\x43\xa8\x69\x21\x5a\x13\x5b\xa7\x56\x9f\xce\x60\x72\x2c\x45\x29\x0a\x2e\xef\x32\x82\x9a\xc2\x19\xc5\x96\x12\x98\x22\x98\x6e\x24\x88\x03\x89\x5b\xc4\x91\xf3\x04\xc9\x06\x58\x86\x59\x0c\x39\x30\xd5\x7d\x8b\x19\xa6\x27\x45\xe2\x5e\xa7\x2d\x64\xf8\x40\xb8\xc0\x74\x83\x93\x83\x76\x24\x72\x60\x88\x05\x08\xa9\xbd\x50\x3f\x7c\xda\x31\x00\x85\x4d\xbe\x57\xbd\x3e\x32\x97\x9e\xa7\x90\x63\x42\x3d\xcf\x03\x8f\x13\xac\xf0\x66\x2b\xf8\x5e\x8b\x34\x31\x65\x76\xb5\xae\x9f\x30\xd7\xff\x7c\xd3\x95\x00\x05\xd5\x73\x93\x38\x8e\x41\xf6\x66\x20\xe6\x42\x40\xec\x31\x5d\x2e\x54\xe5\x04\x26\xc6\x4e\x12\xbd\x30\xd4\xe9\x65\x81\xe3\xbb\x2c\xda\x8a\x0e\x92\x96\xd0\x1c\x65\xb4\x00\xec\x34\xc9\x76\x33\xce\xe0\x59\xda\x53\x5a\x3b\x36\xf8\xb0\x6e\x47\x6d\x49\x57\xb9\xa8\x87\x85\x5b\x4f\x53\x42\x15\x08\x19\x75\x9e\xdf\x74\x9b\x85\x02\xa9\x7b\x9b\x63\x86\x77\x90\x78\x5e\xb5\x74\xb1\xe5\x9c\x02\x66\x03\x01\xda\x4a\x79\x9d\x81\xca\x40\x20\x95\x11\xd9\xd3\x8e\x8e\xae\x8e\x0f\xe2\x02\xe5\xb8\x28\x7a\xf1\xac\x12\xb5\x01\x81\x06\x0c\x44\xbd\x26\xef\x06\x1a\x30\xda\x1a\x95\xdd\x13\x81\xfb\xa2\x0f\xe7\x13\x19\xba\x93\xdc\x7b\x68\xfa\x6c\xdc\x1b\xc0\x3d\xc6\x3d\x01\x19\x0b\x52\xa8\x2e\x10\x3f\x9b\x10\x6d\xf2\x9e\xae\x5e\x04\x12\x12\xb5\x5a\xa8\xa3\x62\x76\x81\xc8\x4c\x29\x2b\xca\x9e\x6e\x43\xe3\xf6\x30\x1d\x98\xb9\x97\xaf\x63\xe3\x6f\x36\x62\xcd\x6d\x66\xbe\xbe\x5a\x35\x5c\xe4\x58\xf5\x55\x88\x86\x86\xec\xda\xcf\x01\xcf\x9d\x0e\xa3\xf6\xdf\xd5\x86\xff\xed\x9c\x95\x54\xb5\x9b\x9c\x29\x34\xa2\x0b\x7f\xc0\xe9\xb7\xd0\x31\x35\x48\xc0\xb8\x04\xa6\x04\xa7\x14\xc4\x26\x2e\xa5\xe2\x39\x88\x0d\xf1\xb9\x9b\xba\x07\x66\x89\xe0\x24\x69\x03\x85\x99\x3d\xc6\x5b\xa5\x44\xc0\x02\xa2\x84\xcb\x85\xad\x0f\xc0\x12\x3e\x35\xba\x9c\xc4\x82\x4b\x9e\xaa\x05\xc4\x9b\x3e\x45\xb9\xa5\x44\x66\x93\x3a\x14\x7c\x5f\x2e\x6b\x3c\x5f\x9a\x92\x91\x9f\x4b\xd0\x80\xe9\x28\x03\x46\xe8\x5a\x6a\xd0\x56\x64\x9c\x0d\xbc\x67\xf5\xef\xc6\xfb\x7c\xe0\xb0\x1c\x39\x67\x9b\x1f\xc6\x30\x1c\xb3\x3b\x98\x86\xc0\xc7\x31\xe5\xc8\x0c\x7f\x31\xf1\xfe\xcb\xaf\xbe\x9e\x68\xf1\xd5\x17\x5f\x2e\xd4\xad\xe7\xe9\xf0\x59\xff\x49\xf7\x77\xfb\x57\x67\xae\xde\x13\xae\xf2\xfa\xa8\xe8\x80\x05\xc1\x5b\x0a\xff\x8d\x70\x4b\x89\xf2\x0f\xb4\x35\xca\xfd\x3f\x08\x6d\x05\xa3\xf9\x1d\x65\x1c\x8f\xe0\x63\x0e\x6a\x24\x6a\x2f\x89\xd7\x4b\x22\xf5\x54\x8c\x9e\x1d\x9d\xe7\xc6\xe5\x19\x11\x79\x59\x2c\x5e\x12\x85\x67\xc6\xdf\xd9\x91\x77\x4e\xcc\x1d\x8b\xb6\xfd\x58\xe0\x49\x09\xc2\xb1\xf5\x3c\xcb\x34\x18\x4f\xdb\xc6\xe4\x0f\x99\xa3\x4b\x39\x14\x65\xc3\xf1\x75\x2c\xb2\x06\x63\xea\xb4\x06\xeb\x78\x34\xaa\xc3\x60\x82\xd3\xe8\xf0\x47\x47\x08\x25\x90\x12\x46\x42\x3e\x68\x22\xcf\x89\x28\x8f\x87\xfb\x68\xf5\x5b\x9f\x97\xf5\xe6\x38\x0b\x33\x9c\xe9\xfc\x26\x1c\x38\xd0\x6c\x08\xd7\x28\xeb\x07\x9c\x03\xe2\xa9\xd9\xa7\xf7\x23\x02\xfb\xcf\x8b\x29\x1b\x1d\x9d\x4b\x9c\xa7\x8e\xe0\x40\xa4\x40\xc7\x09\x14\x19\x1d\x09\x4b\x78\x18\x46\x46\x31\xe7\x7b\x32\x92\xc0\x25\x58\xe1\xa7\xf8\x04\xc2\x8f\x12\x7d\x18\xd1\xaf\xa9\xb7\xc7\x30\xf0\x9e\x3e\x7f\xea\xb7\xaf\xd4\xf5\xfd\xeb\x6b\x94\x80\xc2\x84\xfa\xb6\x0c\xd0\xac\x74\x7e\x6a\xa9\x9b\x16\x7b\x38\x05\x34\x10\x60\xbb\x34\xaf\x9f\x97\xd9\xcf\x59\x72\x68\x41\x22\xd3\xd6\x65\x45\x18\x29\x8e\x52\xc2\x92\xce\xfa\x43\x47\xa2\x32\x62\x8f\xb3\xbe\x7f\x7d\x3d\x46\x70\x32\xb1\x41\x28\xca\x00\x27\xa3\xa9\x9f\x5e\x9a\x14\x93\x5c\x86\xb2\x93\x50\x7e\x12\xcc\xfe\xdc\x24\x9e\x5b\x6b\x7b\x38\xf5\x6d\xb5\xaf\xab\x90\x9c\x1f\x26\xbf\xaa\xff\x0e\x1c\x87\x65\x5c\xa8\xef\xbc\x60\x78\xba\x06\xc0\x74\x6e\x63\x5d\xa4\x32\xac\x90\xce\x50\xb0\x90\x88\x30\x24\x01\x8b\x38\x43\x02\x64\x49\x95\x44\x98\x25\x68\x87\x35\x38\xec\x9c\x40\x06\xeb\x1b\xac\x6d\x43\xb2\x56\xc0\xaa\x7f\x58\x46\xde\x1c\xd1\x3a\x47\x82\x64\x2c\x00\xe6\x54\x5f\x98\x53\x4b\x73\xd6\xfb\x03\x57\xcb\xeb\x30\x9a\xee\x88\x71\x05\x48\x66\xfc\x68\xac\x4f\x0b\x54\x4a\x10\xf6\x04\x19\xcb\x3d\x61\x3b\x8d\x7f\x10\x2e\x55\xc6\xc5\xfc\xf2\x90\x86\xc3\x5d\x8e\x08\x5b\x44\xd6\x1d\x3b\xd5\xe4\x9e\xd7\xa4\x22\xff\x62\x04\x55\x16\xaf\x5e\x3c\x5d\x51\x88\xa2\xca\x02\xe9\x9e\x1d\x7a\x19\xcf\xa1\xc0\x3b\x58\x43\xb2\xea\x3b\xa4\x5a\xa5\x35\x2f\xed\xe9\xef\x1a\xe2\x15\x89\xea\x04\x79\xc8\xc4\x55\x74\x3c\xe7\x94\xc4\xa7\x35\x2c\x1c\x01\x54\x18\x0a\x43\x06\x52\x61\x55\xca\x55\xca\x36\x3d\x87\x14\x15\x5f\x45\x4e\x81\xc8\xa5\xf6\xa1\xee\xb8\x78\x48\x38\xe1\xf1\x1a\xc2\x09\x8f\xcb\x1c\x98\xb2\x51\x6d\x40\x95\xf2\x1d\x5f\x59\x04\xd3\x2f\xd6\x31\xa4\xea\x66\x5e\xc4\x11\x51\xc2\xf6\x75\x39\x4e\xdd\x76\x56\xed\x4c\x55\x1c\xa7\x5e\x34\x94\x5b\x86\x77\x24\x89\xab\x8d\xcb\x80\xec\x32\xd5\x86\x4d\xd5\x23\xfd\xd6\xb6\xab\xc3\x40\x4d\x3e\x54\x9a\x53\x0d\x77\x79\x25\x8c\xd6\x07\xb2\xbf\x3a\x0d\x26\xcb\x6f\x8c\x92\xd6\x70\x4c\x09\x85\x6e\x4a\xd2\x26\x5b\x69\xc8\x4b\x97\x30\x05\xbb\x1e\x18\xe9\x0d\xc5\xf6\x0f\x0c\xe5\xa1\x97\x65\xad\xf7\xb5\x3c\x1d\x81\x69\xa6\x5e\x4f\x5a\x08\x38\x10\x38\xae\x74\xfb\xc3\xf2\x39\x47\x6d\x8e\xff\x1f\x39\x69\xbf\xca\xf1\xae\x73\xb8\x1e\x00\xe7\x1d\x63\xe9\x60\xec\x99\xb8\x7a\xc2\x64\x26\x8c\x66\xcc\x6c\xba\xb3\x1c\x84\xec\x5e\xe3\x99\x42\x98\x3d\x45\x79\x2c\x28\xbc\x75\xd8\x41\xbd\x3e\x3b\x5a\xca\x7c\x68\x51\x7d\x26\x3e\xab\x9a\x58\xe3\x43\x36\x43\xd3\x0a\xac\xf3\x3e\x77\xaf\x81\x2d\x66\xef\xb1\xb2\x30\xff\x09\x9b\x8b\x39\x53\x38\xbe\x4b\x71\x4f\x4d\x61\x9d\x9d\x85\xac\x69\xb0\xc3\xeb\xf6\x6f\xef\x62\x60\x23\x2b\xdf\xb7\x5d\x3d\x77\xed\xb5\xb4\xe0\xdb\x98\x0e\x25\x97\x91\x82\x38\x63\x24\xc6\xc3\x4d\xe9\x28\x37\xce\xcc\x97\xcf\x45\x29\x61\x98\xc5\x9e\xb3\x21\x09\x71\x29\x3a\x15\x4d\xa8\x97\x71\xbe\xf3\xe8\xf3\x1c\x83\xf6\xed\xac\x37\x9b\xab\xfd\x89\x9b\x5e\x94\x70\x5b\x10\x01\xaf\x24\x88\x6b\xbe\x07\x6f\x1e\x30\x38\xa0\x6a\x24\x7b\x62\x7a\xdb\x64\x44\xd9\xfe\x9e\xac\xc3\xac\x8d\x0e\x57\x01\xa9\x00\x99\x5d\x31\x05\xe2\x80\xe9\x62\xe8\xe6\xfa\x23\x52\x11\x68\xc0\x4a\x73\xc8\xf5\xd9\x9b\x2f\xee\x7f\x73\x63\xca\xc8\xff\xe7\xf3\x6c\x46\x3a\x34\xbc\x4e\xb0\x40\x15\x2f\x6c\x67\xab\x0b\x9d\x88\xcd\xd3\x44\xe9\x98\x7d\xeb\x2e\x2b\xcc\x04\xb2\xcd\x8c\x97\x82\x04\x94\xf4\x4c\xd3\x45\xd5\x2d\x08\x03\x70\xe7\xe8\x20\x21\x02\x62\xf5\x8c\xbd\x2a\x12\xec\xcf\x5a\xc7\x94\x60\x7b\xeb\xb4\xb9\xb4\xfd\x67\x69\xe1\x08\xdb\x8c\xf3\xfd\x1d\x6a\xce\x2b\x0a\x13\x28\xbb\x14\x6d\xe3\xd1\x76\x2c\xa0\xe3\x23\xe1\x00\x4c\xc9\x95\x40\x3c\x84\x94\x35\xd7\x05\xa8\xd5\x3f\xb9\xdd\x31\xbf\xb6\xe3\x45\xaf\x5e\x5c\xf9\x31\xad\x1b\xda\x1a\xb0\xfc\x67\x2c\xe1\xeb\xff\xbb\x0f\x2c\xe6\x09\x24\x95\x6a\x91\xa5\xa8\x17\x78\x82\x14\x47\x92\xec\x18\x72\xea\xea\xd0\xd1\xae\x0a\x98\x7a\xa2\xbb\x6b\x26\x7a\xc5\x18\x8a\x0b\xc1\x7e\x77\x37\x63\xcd\x40\x2a\x25\x75\x28\x21\xbb\xb9\x58\x8f\x43\xbf\x04\xa6\x48\x8c\x15\x54\xbb\x2b\xfd\xd5\x34\x4f\x60\xa7\x0c\xbf\xa4\xc1\x10\xef\x17\xd9\xa7\x58\x7f\x85\xdb\x44\x14\x09\x45\xc4\xc2\x1b\xf1\x4c\xf9\xf0\x15\x3b\xb8\xbd\xde\xcb\x58\x00\x56\x9e\x72\x82\x41\xc3\xb4\xa4\x29\x19\x5c\x5c\xb0\xf3\x58\x14\x97\xfe\x7b\x0d\xf5\x6b\xe7\xcf\xfd\x2f\x4b\x36\xd2\xdb\xde\x0c\x08\xcb\xe9\xde\xdb\x2a\xe6\x64\x24\x5e\x4f\xc4\xc9\x23\x17\xfb\x94\xf2\xe3\x3a\xf0\xd6\x9c\xb4\x21\x9e\xa2\x8a\x16\xb2\xae\xed\xdc\x70\x6e\x50\xfa\x32\x2c\x7b\x89\x48\xdc\xaf\xd3\x4e\xd9\x7b\xc2\x7b\xde\x2a\x92\xb9\xd0\x27\x2b\x73\xcc\xee\x0b\xc0\x89\xd9\x39\xb7\x47\xbf\x29\xb1\xe7\xbd\xc6\x54\x9d\x5e\x82\xd0\xcb\x7b\x1a\x38\x97\x3d\x6b\x9d\xfe\x3d\x8e\x15\x39\x10\x75\x42\x58\x0e\xb7\x62\xc3\xfc\x8d\xa6\xd7\xf2\xaf\x92\xac\x4a\x06\x4d\xcc\xf8\xde\x8c\x1f\xc3\x2c\xef\x84\xb0\x75\xb3\x8a\x9d\xf7\x30\xb9\xed\x07\xb1\xd3\xc9\x5c\xa7\x13\x68\xdf\xb6\xaf\x99\x88\x3a\x5d\xaf\x54\x3d\xb2\xb4\x64\x71\x75\x98\xb5\x05\x04\xb7\x10\x97\x3d\xff\xd0\xe5\xc7\xcd\xd9\x40\xd8\xfb\x4e\x9d\x4d\x76\xd9\x3b\x6a\xf5\x22\xee\x79\x84\xbe\xe8\xf3\x0f\x0b\x27\xea\xd1\x14\x96\xfb\xcd\xcf\x25\x94\xab\x0b\x86\x16\x55\x26\x55\xc3\xda\x58\xfd\x12\xce\x36\x8a\xe4\xc0\xcb\x89\x42\x10\x7f\x6e\x8e\xba\xd8\x88\x30\xd5\x83\x14\x03\x11\x1f\xce\x97\x50\x94\x1f\xaf\x6c\x66\xd6\x3e\x36\xe1\x30\x51\x9b\x94\x8b\x4d\xac\x33\x64\x4a\xc3\x67\xce\x73\xea\x1c\x7d\xb9\xc1\x18\x77\x19\x67\x90\x94\x14\x36\x8a\x6f\x62\xca\x25\x7c\x6c\xea\x69\x0b\x28\x15\x16\xea\xa3\x13\xd0\x0a\xf5\x91\xaa\x2f\x03\x2c\xd4\x16\xf0\xef\xad\xb6\x8b\xd0\xaf\x6e\x70\x28\xb0\xc0\x23\xc8\x7c\x14\xfa\xb7\x43\x83\xa1\x03\x9e\x0b\x2e\xc1\xcb\x2d\x53\x75\x5f\xe3\xe5\x2d\xfe\x2a\xe9\x50\x9d\x74\xc5\xad\xf7\x78\x50\xe1\xb2\xa8\xb6\x65\xaa\xaa\x25\x5c\x84\x3c\xaf\x1e\x23\x08\x25\x6d\xc5\x63\x1b\x51\x3a\xd0\x53\x4f\xc2\xb0\x30\xc3\x53\x3a\x32\x56\x6d\xb6\x4c\x3e\x0d\x23\xef\xa7\x82\x00\x4b\xe8\x09\xb5\x51\xdf\x42\x89\x46\x6e\xf7\x2c\x93\xa8\x0d\x05\x17\xca\xd0\xd8\xd4\xdd\xc5\x70\xb4\xd0\x01\xd3\x72\x96\x3c\x2b\xad\x98\x97\xaa\x28\x07\xf9\xfb\x0a\x33\xb6\x84\xac\xbc\x7f\x58\x72\x57\xc4\x0f\x69\xc9\x76\x1e\x3e\x1a\x33\x5e\x22\xce\x7b\xb1\xe1\x25\x02\xbc\x77\x03\x0e\x0a\xb3\xd2\x7a\x63\xce\x52\xb2\x0b\x27\x85\x8b\x32\x2b\x25\xca\x36\x08\x9d\xda\x1c\xd2\x20\x63\xd1\xc6\xd0\x59\xf6\x79\xf6\x70\x8a\x86\x79\x7f\xfd\xe0\xac\x9b\x38\x6b\x76\x51\xba\x57\x68\xa2\xeb\x0c\xd0\x1e\x4e\x28\x25\x40\x13\x44\x24\x3a\x66\x20\xc0\xac\x85\x04\x2b\x8c\x8e\x84\x52\x9d\x8b\x4b\x7c\x30\x1b\xb3\x97\xe8\x3a\x23\x12\xe5\xa5\x54\xfa\xb1\xb3\xf2\x02\x84\xa5\x70\xf9\x13\x43\x7f\xe1\x02\xc1\x2d\xce\x0b\x0a\xf7\x10\x49\x0d\xf9\x3f\xa1\x4f\xab\xea\x29\xf9\xa9\xa6\xce\x5c\xf1\x65\x6b\xed\x59\x11\xba\x0c\x09\x33\x62\x5c\xd6\x9d\x47\xf6\x57\xd6\x9c\xdd\x7b\xb4\x61\x9d\x83\xb0\xe7\xf8\x6e\x2f\x80\x48\x14\xf3\xbc\xe0\x0c\xd8\xc8\xa6\xd6\x9a\x1d\x1e\x8f\x00\xc6\x39\xb8\x49\x3f\xd5\xfa\xa8\x37\xf8\x81\x42\xac\xd0\x31\x23\x71\xd6\x08\xa5\xdf\x08\x60\x89\x76\xb3\x56\xb5\xa9\x30\x1b\xfe\xc9\x25\xba\x52\x28\xc6\x8c\x71\x33\x61\x98\x21\xb8\x25\x52\x99\xe2\x44\xa3\xf0\x25\x07\xb6\xfe\xdb\xe1\xd5\xd0\x3a\x8f\xc3\x9b\x44\x32\xe3\xc7\x67\xec\xc7\xe1\x27\x84\x26\xb3\xd2\xbe\xb6\xae\x52\xe3\x13\xee\xf5\x97\x8f\x2d\x13\xad\x34\x11\x73\xc6\xec\x37\x30\x10\x3f\x80\x30\xdf\x2e\x0a\x6e\x9e\xf5\x33\xdd\xa1\xe8\x3f\xea\x35\xfb\x8c\x3d\x49\xc8\x48\x1d\xc3\x6c\xf9\xad\xb1\xb7\x06\x60\x4d\xc2\x0c\xc3\x4d\x99\xdd\xd6\x74\x83\x81\x84\xa8\x7e\xad\xeb\x60\x10\x7d\x47\xd9\x19\x83\xa6\xe0\xbd\xb1\x72\x06\xe1\x9b\x75\x16\x67\x98\xed\x06\x5b\xff\x73\x65\x14\xfe\xfa\x9f\xb3\x2d\x90\x2d\xa0\x8a\x85\xb6\x9c\x0c\x1f\x00\x61\xab\xfa\xb0\x79\xe7\x84\x3d\x05\xb6\x5b\x51\x3d\x33\x9e\xee\xce\x2a\x9c\xc9\xf1\xed\xef\xc7\xbc\x39\xbe\x5f\xe8\xdb\x66\x14\x3d\x99\x7a\xb5\x8c\xd3\x04\xc4\x19\x7c\x67\x8b\x1a\x52\x70\xab\x6c\xd9\x78\xdb\x29\xb8\xef\x7b\x11\xd9\x84\x3c\xc8\x8b\xe1\x66\xf9\x2c\xe1\x43\x78\xac\xc1\x1a\xa1\x6f\xc8\xf9\x87\xf0\x5d\x07\x93\x55\x4b\xb5\x89\x94\x75\x34\x32\xb2\xdf\x43\x5b\x48\x79\x55\xe9\x61\xaa\x2e\xb0\xf1\x73\x97\xe8\xaf\xf8\xa0\x3d\x3c\x46\xc9\x90\xa2\x76\x82\x82\x24\x96\x6e\x5f\x61\xe1\xb1\xca\x02\x28\x8d\x33\x88\x47\x6a\xd4\xe6\x59\xa5\x41\x10\x12\x94\x09\x42\x46\x24\x60\x26\x67\x30\x2c\x90\xe1\x51\x87\x31\x83\x2a\x56\xba\x91\xbc\xa4\x8a\x14\x67\x71\x75\xd6\x8d\x54\x04\x5d\x16\x59\x7d\x1f\x0e\x27\x89\xc5\x2a\xcd\xdc\x68\x20\x74\x9d\xd5\x0d\xdb\x2b\x10\x4b\x1d\x85\x4d\x28\x45\xee\xc2\xc9\xe3\xe7\x57\xe6\x96\x05\x66\xe8\xb7\x5f\xff\xf9\x38\x49\xd0\x63\xc6\x55\x06\xe2\xb7\x5f\xff\x85\xb6\xa5\x52\x9c\xd5\xab\xc1\x7d\x22\xaf\xa3\x20\x84\x29\xe5\x47\xad\x4e\x13\xf0\x04\xd4\xd7\xd1\x1a\x8c\x69\x5b\x4a\x1f\xa2\x59\x19\x0d\x35\x32\x5b\x0a\xed\xc7\x4f\x42\xaa\xcf\x36\x79\xf2\x54\x97\xb7\x8f\x67\x3e\x13\x9b\x01\xfe\xd9\xbd\xce\x40\x02\xc2\xa2\x65\x68\xb2\xe5\x37\x74\x04\x36\x98\x0b\x12\xab\xf3\x6a\x8a\xfd\xf9\xd5\xd8\x07\x6f\xa6\xf7\x13\x5c\xab\x59\xd7\xdf\xf0\x16\xc2\xdf\x60\x89\x06\xc1\xac\xf9\xf7\xc1\x6f\xbf\x59\x59\x96\x5c\xe2\x0a\x34\x0c\xdf\x12\xb3\xda\x38\x07\x0b\xef\xf3\x99\x17\xbc\x3c\x29\xfb\x5b\x19\xbc\xf5\x37\x2b\x5f\xef\x2d\xd6\x27\xda\xcb\x23\x8c\xbe\x7f\xf9\xec\x07\xf4\xd8\xf8\x10\xc5\x75\x00\x30\x38\x5f\x66\xbc\xa4\x89\x5e\xb2\x36\xea\xeb\x35\xdb\x76\x37\x3c\xad\xaa\x1b\xcc\x75\x37\x93\xeb\x24\xa8\x35\x89\x01\x11\x82\xa7\x8b\xfe\x31\x0f\x2b\xab\xce\x31\xe4\x52\x50\x2b\x35\xb6\xa9\xa9\xe4\xa5\x88\x41\xbb\xd0\x96\x32\xec\xb8\x5d\x96\xea\xdc\x73\x95\x3a\x15\xbc\x28\x29\x56\x1a\xea\xbd\xb4\x59\x14\x25\x52\x59\x9a\x70\xab\x11\x0e\xa6\x96\x96\x77\x93\xd0\x49\x17\xae\x03\x9b\xa9\xb0\xf9\x5b\x29\xa1\x0d\x8e\x0b\xfd\xdf\xbb\x8b\x7f\x07\x00\x00\xff\xff\xf2\xf1\xbc\xe5\x23\x5a\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas"].(os.FileInfo),
	}
	fs["/schemas"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas/manifest.json"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
