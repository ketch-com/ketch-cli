// Code generated by vfsgen; DO NOT EDIT.

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets statically implements the virtual filesystem provided to vfsgen.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2021, 1, 15, 23, 58, 26, 445327316, time.UTC),
		},
		"/schemas": &vfsgen۰DirInfo{
			name:    "schemas",
			modTime: time.Date(2021, 1, 16, 0, 24, 59, 758385279, time.UTC),
		},
		"/schemas/manifest.json": &vfsgen۰CompressedFileInfo{
			name:             "manifest.json",
			modTime:          time.Date(2021, 1, 16, 0, 24, 59, 758313718, time.UTC),
			uncompressedSize: 23358,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\xeb\x8e\x1c\xb7\xb1\xfe\xaf\xa7\x20\x1a\x06\x6c\x9f\x23\xad\x24\x9f\x63\x07\x16\x90\x1f\x8a\xad\x20\x6b\x28\x96\x22\xad\xac\x1f\xf2\x66\xc0\x61\xd7\x4c\x53\xcb\x26\xdb\x24\x7b\x66\x37\x86\x00\x3f\x48\xf2\x72\x7e\x92\x80\x97\xbe\x93\x7d\xdb\x91\xac\x04\x16\x60\x58\xea\x26\xab\x8a\xc5\xba\x7c\x45\x56\xcf\xcf\x77\x10\x4a\x3e\x51\x24\x83\x1c\x27\x8f\x50\x92\x69\x5d\x3c\xba\x7f\xff\xad\x12\xfc\x9e\x7b\x7a\x26\xe4\xfe\x7e\x2a\xf1\x4e\xdf\x7b\xf0\x87\xfb\x7e\xe4\x5d\x33\x4d\xdf\x14\x60\xe6\x88\xed\x5b\x20\xda\x3f\xa3\x9a\xd9\x87\x7f\xc5\xf2\x0a\x74\xc1\x30\x01\x84\x8b\x02\xb5\x27\x4a\xf8\xa9\xa4\x12\xd2\xe4\x11\x7a\x73\x07\x21\x84\x12\x8e\x73\xb0\xef\x10\x4a\x0e\x20\x15\x15\x3c\xb9\x83\xd0\xa5\x1d\x9e\x42\x01\x3c\x05\x4e\x28\xa8\xe4\x11\xfa\xd9\x0d\x33\x44\x40\xe9\x57\x0a\xe4\xe3\x52\x67\x86\x56\x52\x2a\x90\x1b\x5c\xea\x6c\x43\x30\x63\x5b\x4c\xae\x36\xa5\x64\xc9\xe5\x1d\x84\xde\x59\x52\x38\x4d\xa9\xa6\x82\x63\xf6\x5c\x8a\x02\xa4\x76\x24\x77\x98\x29\xb0\x03\x8a\xf6\x63\xcf\x89\xa6\xf5\xdf\x5b\xab\x56\x5a\x52\xbe\xf7\x42\xb7\x57\xfe\xb8\x28\xd0\xf9\xb7\xcd\x8b\x14\x76\xb8\x64\xda\xbc\x4a\xec\xb3\x77\x7e\xa1\x42\xee\x17\x11\x7e\x26\xf7\x98\xd3\x7f\x60\xb3\x80\x19\xe4\xad\x4e\x97\x0a\x6e\x27\x75\xc8\x54\xdb\xb1\x94\x92\x82\x1c\x73\x4d\x09\xaa\x08\xd4\xc3\x0a\xac\x35\x48\x43\x31\xf9\xfb\x67\x6f\x1e\xdc\xfb\xfa\xf2\x7f\x3f\xff\xf1\xc7\xb3\xc0\x5f\x3f\xe9\x8a\x52\x48\x9a\x63\x79\xf3\x0d\xd6\xb0\x17\xf2\x26\x20\xd2\x9b\x5a\x26\x94\xf0\x92\xb1\xe4\x72\x28\x5c\xdb\x32\x8d\xa0\x9e\x2a\x22\x15\xd9\x7a\x0a\xf0\x32\xaf\x6d\xb4\x92\xe0\x80\x49\x33\xc4\x98\x94\x52\xa0\x13\xff\xef\xcb\x8e\xbc\x0a\x88\xe0\xe9\xe9\x25\xae\xe9\xbe\x07\x99\x65\xc9\x5a\xb6\xdf\x96\xb3\x72\xf3\xb8\x9c\x46\x36\x37\xbf\x7e\x37\xe5\x70\x5e\xc2\x81\xd3\x39\xd3\xa3\x70\xec\x3c\x89\xdb\x5e\x57\x10\x23\x04\x82\xeb\x42\x82\x52\x94\xef\xd1\x31\x03\x8e\x74\xe6\x22\x11\x55\xe8\x40\x15\xdd\x32\xe8\xce\x1e\x38\x52\x4b\x2d\x76\x00\xe5\x4a\x63\xc6\x6e\x2f\x91\xe0\x5d\x89\x08\xe6\x68\x0b\xc8\xd3\x87\x74\x8e\x5c\x77\xda\xff\xaf\x36\x8f\xe0\x02\x6f\x29\xa3\x3d\x55\xd6\x22\x62\x29\xf1\x4d\xc4\x5f\x3b\x73\xeb\x21\x54\x43\xde\xdb\x95\xe8\x7a\x23\xf4\x3a\x96\x37\x30\x4f\xb3\xfd\x20\x73\xaa\x8d\x7d\xe0\x7d\x37\xb8\xb5\x5e\x9f\xf3\x3d\xa8\xe1\x4b\x49\xf7\x59\x7c\xaa\x7d\xdb\xcc\xac\x5f\x5d\x06\xb5\xa7\xca\xa2\x10\x52\x43\xfa\x14\xf3\x7d\x89\xf7\x11\x3f\xf0\x4a\x1c\x77\x83\x9a\x16\x62\x35\xb1\x75\x4a\x0d\x69\x0c\x26\xd7\x52\x94\xb2\x10\xea\x36\x2b\xa8\x29\x9c\x50\x6c\xa5\x80\x6b\x8a\xd9\x46\x81\x3c\x50\xd2\x22\x8e\x7c\x1c\x48\x37\xc0\x33\xcc\x09\xe4\xc0\x75\xf7\x2d\xe6\x98\xdd\x68\x4a\x7a\x93\xb6\x90\xe1\x03\x15\x12\xb3\x0d\x4e\x0f\x26\x8c\xa8\x81\x1b\x16\x20\x95\x89\x41\xfd\xe4\xe9\xd6\x00\x0c\x36\xf9\x95\xee\xcd\x51\xb9\x0a\x3c\x85\x1c\x53\x16\x78\x1e\x79\x9c\x62\x8d\x37\x5b\x29\xae\x8c\x48\x13\x5b\x66\x8d\xf5\x16\x1b\xe6\xe7\x9f\x6e\xbb\x52\x60\xa0\x7b\x41\x12\x13\x02\xaa\xb7\x03\x44\x48\x09\x24\xe0\xb8\x42\xea\x2a\x04\x4c\xac\x9d\xa6\xc6\x30\xf4\xcd\xcb\x02\x93\xdb\x18\x6d\x45\x07\x29\x47\x68\x8e\x32\x5a\xf0\x75\x9a\x64\x7b\x98\xe0\xf0\x6c\xd7\x53\x5a\x3b\x33\x84\x90\x6e\x47\x6d\x69\x57\xb9\xa8\x87\x84\x5b\x4f\x77\x94\x69\x90\x2a\xe9\x3c\xbf\xec\x0e\x8b\xa5\x51\xff\x36\xc7\x1c\xef\x21\x0d\xbc\x6a\xe9\x62\x2b\x04\x03\xcc\x07\x02\xb4\x95\xf2\x3a\x03\x9d\x81\x44\x3a\xa3\xaa\xa7\x1d\x93\x5b\x3d\x1f\x24\x24\xca\x71\x51\xf4\xb2\x59\x25\x6a\x03\x01\x2d\x14\x48\x7a\x43\xde\x0d\x34\x60\xb5\x35\x2a\x7b\x20\xff\xf6\x45\x1f\xee\x27\xb2\x74\x27\xb9\xf7\xb0\xf4\xc9\xb8\x37\x70\x7b\x8c\x7b\x0a\x8a\x48\x5a\xe8\x2e\x0c\x3f\x99\x10\x6d\xf2\x81\xa9\x41\xfc\x11\x13\xb5\x32\xd4\x51\x31\xbb\x30\x64\xa6\x94\x15\xe5\xc0\xb4\xa1\x73\x07\x98\x0e\xdc\x3c\xc8\xd7\xb3\x09\x0f\x1b\xf1\xe6\x36\xb3\xd0\x5c\xa3\x1a\x21\x73\xac\xfb\x2a\x44\x43\x47\xf6\xe3\xe7\x40\xe7\xce\x84\x51\xff\xef\x6a\x23\xfc\x76\x8e\x25\x55\xe3\x26\x77\x0a\x8d\xe8\x22\x9c\x70\xfa\x23\x4c\x4e\x8d\x12\xb0\x21\x81\x6b\x29\x18\x03\xb9\x21\xa5\xd2\x22\x07\xb9\xa1\xa1\x70\x53\xcf\xc0\x3c\x95\x82\xa6\x6d\xa0\x30\x73\xc6\xf8\xa8\x1d\x95\xb0\x80\x28\x15\x6a\xe1\xe8\x03\xf0\x54\x4c\xad\x2e\xa7\x44\x0a\x25\x76\x7a\x01\xf1\x66\x4e\x51\x6e\x19\x55\xd9\xa4\x0e\xa5\xb8\x2a\x97\x0d\x9e\x2f\x4d\xc9\xe9\x4f\x25\x18\xc0\x74\x54\x11\x27\xf4\x23\x0d\x68\x2b\x32\xc1\x07\xd1\xb3\xfa\x73\x19\x7c\x3e\x08\x58\x9e\x9c\xf7\xcd\x0f\xe3\x18\x9e\xd9\x2d\x5c\x43\xe2\xe3\x98\x72\x54\x86\x1f\x4e\xbc\xff\xe2\xcb\xaf\x26\x46\x7c\xf9\xf0\x8b\x85\xba\x0d\x3c\x1d\x3e\xeb\x3f\xe9\xfe\xbb\xfd\xaf\xce\x5e\xbd\x27\x5c\x15\x8c\x51\xc9\x01\x4b\x8a\xb7\x0c\xfe\x1b\xe1\x96\x96\xe5\xef\x68\x6b\x94\xfb\x7f\x10\xda\x8a\x66\xf3\x5b\xca\x38\x9e\xc1\xc7\x02\xd4\x48\xd6\x5e\x92\xaf\x97\x64\xea\xa9\x1c\x3d\x3b\x3b\xcf\xcd\xcb\x33\x32\xf2\xb2\x5c\xbc\x24\x0b\xcf\xcc\xbf\xb3\x33\xef\x9c\x9c\x3b\x96\x6d\xfb\xb9\x20\x50\x12\xc4\x73\xeb\x69\xcc\x34\x9a\x4f\xdb\xce\x14\x4e\x99\xa3\xa6\x1c\xcb\xb2\xf1\xfc\x3a\x96\x59\xa3\x39\x75\x5a\x83\x75\x3e\x1a\xd5\x61\xb4\xc0\x69\x74\xf8\x83\x27\x84\x52\xd8\x51\x4e\x63\x31\x68\xa2\xce\x49\x98\x20\xc3\x73\xb4\xfa\x6d\x28\xca\x06\x6b\x9c\x85\x15\xce\x74\x7d\x13\x4f\x1c\x68\x36\x84\x6b\x94\xf5\x3d\xce\x01\x89\x9d\x3d\xa5\x0f\x23\x02\xf7\x27\x88\x29\x1b\x1d\x9d\x4a\x9c\xa7\x9e\xe0\x40\xa4\xc8\xc4\x09\x14\x99\x1c\x29\x4f\x45\x1c\x46\x26\x44\x88\x2b\x3a\x52\xc0\xa5\x58\xe3\xa7\xf8\x06\x64\x18\x25\x86\x30\x62\x58\x53\x6f\x8f\x71\xe0\x3d\x7d\xfb\xd4\x1f\x5f\xa9\xeb\xbb\xd7\x17\x28\x05\x8d\x29\x0b\x1d\x19\xa0\x59\xe5\xfc\x94\xa9\xdb\x11\x57\x70\x13\xd1\x40\x84\xed\xd2\xba\x7e\x5e\x65\x3f\xc7\xe4\xd0\x82\x42\xa6\xad\xcb\x8a\x30\xd2\x02\xed\x28\x4f\x3b\xf6\x87\x8e\x54\x67\xd4\x5d\x66\x7d\xf7\xfa\x62\x8c\xe0\x64\x61\x83\x50\x92\x01\x4e\x47\x4b\x3f\x63\x9a\x0c\xd3\x5c\xc5\xaa\x93\x58\x7d\x12\xad\xfe\xfc\x26\x9e\x5a\x6b\x57\x70\xd3\xf7\xd5\xbe\xae\x62\x72\x7e\x98\xfa\xaa\xfe\x7b\xe4\x3a\x2c\x13\x52\x7f\x1b\x04\xc3\xd3\x1d\x00\x76\x72\x1b\xeb\x22\x9d\x61\x8d\x4c\x85\x82\xa5\x42\x94\x23\x05\x58\x92\x0c\x49\x50\x25\xd3\x0a\x61\x9e\xa2\x3d\x36\xe0\xb0\x73\xff\x18\xed\x6e\x70\xbe\x0d\xe9\x5a\x01\xab\xf9\x71\x19\x45\x73\x41\xeb\x03\x09\x52\x44\x02\xcc\xe9\xbd\xb0\x77\x96\xf6\xa6\xf7\x7b\xa1\x97\x77\x61\x34\xd3\x11\x17\x1a\x90\xca\xc4\xd1\x7a\x9f\x11\xa8\x54\x20\xdd\xfd\x31\x56\x57\x94\xef\x0d\xfe\x41\xb8\xd4\x99\x90\xf3\x9b\x43\x1a\x0e\xb7\xb9\x22\x6c\x11\x59\x77\xed\x54\x93\x7b\x5e\x93\x4a\xc2\xc6\x08\xba\x2c\x5e\xbd\x78\xba\xa2\x0d\x45\x97\x05\x32\x33\x3b\xf4\x32\x91\x43\x81\xf7\xb0\x86\x64\x35\x77\x48\xb5\x2a\x6b\x5e\xba\xdb\xdf\x35\xc4\x2b\x12\xd5\x0d\xf2\x90\x89\xef\xe7\x78\x2e\x18\x25\x37\x6b\x58\x78\x02\xa8\xb0\x14\x86\x0c\x94\xc6\xba\x54\xab\x94\x6d\x67\x0e\x29\x6a\xb1\x8a\x9c\x06\x99\x2b\x13\x43\xfd\x75\xf1\x90\x70\x2a\xc8\x1a\xc2\xa9\x20\x65\x0e\x5c\xbb\xac\x36\xa0\xca\xc4\x5e\xac\x6c\x81\xe9\xb7\xea\x58\x52\xf5\xb0\x20\xe2\x48\x18\xe5\x57\x75\x33\x4e\x3d\x76\x56\xe7\x4c\xd5\x1a\xa7\x5f\x34\x94\x5b\x8e\x77\xa4\xa9\xef\x8c\xcb\x80\xee\x33\xdd\x86\x4d\xd5\x23\xf3\xd6\x8d\xab\xd3\x40\x4d\x3e\xd6\x98\x53\x2d\x77\x79\x1f\x8c\xd1\x07\x72\xff\xea\x0c\x98\x6c\xbe\xb1\x4a\x5a\xc3\x71\x47\x19\x74\x4b\x92\x36\xd9\x4a\x43\x41\xba\x94\x6b\xd8\xf7\xc0\x48\x6f\x29\x6e\x7e\x64\x29\x0f\x82\x2c\x6b\xbd\xaf\xe5\xe9\x09\x4c\x33\x0d\x46\xd2\x42\xc2\x81\xc2\x71\x65\xd8\x1f\x36\xcf\x79\x6a\x73\xe2\xff\xc8\x4d\xfb\x79\x8e\xf7\x9d\xcb\xf5\x08\x38\xef\x38\x4b\x07\x63\xcf\xc4\xd5\x13\x2e\x33\xe1\x34\x63\x6e\xd3\xdd\xe5\x28\x64\x0f\x3a\xcf\x14\xc2\xec\x29\x2a\xe0\x41\xf1\xa3\xc3\x0e\xea\x0d\xf9\xd1\x52\xe6\x43\x8f\xea\x33\x09\x79\xd5\x84\x8d\x0f\xd9\x0c\x5d\x2b\x62\xe7\x7d\xee\x41\x07\x5b\xcc\x3e\xe0\x65\x71\xfe\x13\x3e\x47\x04\xd7\x98\xdc\xa6\xb9\xa7\xa6\xb0\xce\xcf\x62\xde\x34\x38\xe1\xf5\xe7\xb7\xb7\x71\xb0\x11\xcb\x0f\x1d\x57\xcf\xb5\xbd\x96\x16\x42\x07\xd3\xb1\xe2\x32\xd1\x40\x32\x4e\x09\x1e\x1e\x4a\x27\xb9\x0d\x66\xa1\x7a\x2e\xd9\x51\x8e\x39\x09\xdc\x0d\x29\x20\xa5\xec\x74\x34\xa1\x5e\xc5\xf9\x2e\xa0\xcf\x53\x2c\x3a\x74\xb2\xde\x1c\xae\xf6\x37\x6e\xda\x28\xe1\xba\xa0\x12\x5e\x29\x90\x17\xe2\x0a\x82\x75\xc0\xe0\x82\xaa\x91\xec\x89\x9d\xed\x8a\x11\xed\xe6\x07\xaa\x0e\x6b\x1b\x1d\xae\x12\x76\x12\x54\x76\xce\x35\xc8\x03\x66\x8b\xa1\x9b\x9f\x8f\x68\x45\xa0\x01\x2b\xcd\x25\xd7\x67\x6f\x1e\xde\xfb\xfa\xd2\x36\x91\xff\xcf\xe7\xd9\x8c\x72\x68\xf8\x31\xc1\x02\x55\xbc\x70\x93\x9d\x2e\x4c\x21\x36\x4f\x13\xa5\x67\xf6\x8d\xff\x54\x61\x26\x90\x6d\x76\xbc\x94\x34\xa2\xa4\x67\x86\x2e\xaa\xbe\x81\xb0\x00\x77\x8e\x0e\x52\x2a\x81\xe8\x67\xfc\x55\x91\xe2\x70\xd5\x3a\xa6\x04\x37\xdb\x94\xcd\xa5\x9b\x3f\x4b\x0b\x47\xd8\x66\x42\x5c\xdd\xa2\xe3\xbc\xa2\x30\x81\xb2\x4b\xd9\x76\x9e\x04\x0e\xc0\xb5\x5a\x09\xbb\x63\xb8\xd8\xf0\x58\x80\x51\xc3\x5b\xd9\x5d\xe1\x6b\xb7\x3a\xf4\xea\xc5\x79\x18\xc1\x2a\x20\x12\xa2\x70\x72\x14\x1a\xff\x09\x2b\xf8\xea\xff\xef\x01\x27\x22\x85\xb4\x52\x24\x72\x14\x8d\x39\xa7\x48\x0b\xa4\xe8\x9e\x23\xaf\xae\x0e\x1d\x13\x98\x80\xeb\x27\x66\xba\x61\x62\xec\xc3\x52\x5c\x08\xed\xbb\x67\x17\x6b\x16\x52\x29\xa9\x43\x09\xb9\xa3\xc4\x7a\x1d\xe6\x25\x70\x4d\x09\xd6\x50\x9d\xa5\xf4\x6d\x67\x9e\xc0\x5e\x19\x61\x49\xa3\x09\x3d\x2c\x72\x48\xb1\xe1\x7e\xb6\x89\x9c\x11\xcb\x7f\x45\x30\xbf\xf9\xce\xf8\x83\x3f\xd9\x3d\x23\x12\xb0\x0e\x34\x0f\x0c\x06\xee\x4a\xb6\xa3\x83\x8f\x14\xdc\x3e\x16\xc5\x59\xf8\x1b\x86\xfa\xb5\x8f\xde\xe1\x97\x25\x1f\x99\x4d\x04\x57\xc0\xf5\x59\xe1\x7b\xfd\x21\x1d\xc9\xc0\xc1\x5d\xcb\xf1\xf5\xdf\x9e\xbf\x5c\x54\x77\x35\x0e\x4a\xb9\xfe\xbf\x2f\x62\x66\xf2\xf0\x41\xb8\xd2\xd3\x2c\x6e\x24\x63\xf7\x19\x8d\x95\x5c\x3c\x7d\x69\xf2\xff\x8e\xee\x4b\x19\xfa\x34\x22\x7e\x2f\x90\x50\x6e\xa1\x4a\xe8\x3e\x6c\x10\xce\x3b\xef\xc3\x67\xc4\x61\x0c\x71\x14\xf2\x6a\xc7\xc4\x71\x1d\xb0\x6d\x6e\x21\x91\xd8\xa1\x8a\x16\x72\xaa\x39\x35\xd4\x1d\xb4\x05\x0d\x5b\x82\x12\x4a\xfa\x1a\xde\xf1\xf7\x84\x85\x83\x1d\x36\x73\x61\x61\x56\xe6\x98\xdf\x93\x80\x53\x7b\xab\xe0\xae\xc5\x77\xd4\xdd\x85\xdb\xc0\xe6\xf5\x12\x85\xa5\xc1\x9b\xd2\xb9\xec\x79\xeb\x66\xf4\x31\xd1\xf4\x40\xf5\x0d\xc2\x6a\x78\x4c\x1d\xe7\x6f\x35\xbd\x96\x7f\x55\x80\x56\x32\x18\x62\x36\x53\x65\xe2\x18\x67\x79\xab\xea\xc3\x0c\xab\xd8\x05\x2f\xda\xdb\x59\x03\x7b\x9d\xcc\x0d\xd1\x91\xf1\x6d\xff\x9a\x59\x6d\xec\xd6\x2b\xd5\xac\x6c\x57\x72\x52\x5d\xf4\x6d\x01\xc1\x35\x90\xb2\x17\x69\xbb\xfc\x84\xbd\x37\x89\xe7\xaa\xa9\x7b\xdb\x2e\x7b\x4f\xad\x36\xe2\x5e\x44\xe8\x8b\x3e\xff\x22\x75\xa2\x57\x4f\x63\x75\xb5\xf9\xa9\x84\x72\x75\x33\xd5\xa2\xae\xad\x6a\x59\x1b\xa7\x5f\x2a\xf8\x46\xd3\x1c\x44\x39\xd1\x24\x13\x3e\xb7\x40\x83\x44\xd5\x03\x60\x03\x11\x1f\xcc\x97\x50\x96\x1f\xaf\x6c\x76\xd7\x3e\x36\xe1\x30\xd5\x9b\x9d\x90\x1b\x82\x39\x01\xc6\xe2\xf7\xf1\x73\x7a\x40\x43\x75\xd3\x18\x77\x45\x32\x48\x4b\x06\x1b\x2d\x36\x84\x09\x05\x1f\x9b\x7a\xda\x02\x2a\x8d\xa5\xfe\xe8\x04\x74\x42\x7d\xa4\xea\xcb\x00\x4b\xbd\x05\xfc\x5b\xab\x2d\x0e\x17\xbb\xe8\x14\x4b\x3c\x52\xc7\x8c\x16\x4a\xed\xd4\x60\xe9\x40\xe0\xe3\x9f\xe8\x87\x3f\x53\x3d\x71\xe3\xad\x3f\xe1\x0e\xf2\x58\x0f\x79\xc5\xad\xf7\x78\xd0\xfd\xb3\xa8\xef\x67\xaa\xe3\x27\xde\xa0\x3d\xaf\x57\x25\x0a\x25\x5d\x37\x68\x1b\x51\x7a\xd0\x53\x6f\xc2\xb0\x69\x25\xd0\x56\x33\xd6\x89\xb7\x4c\x3e\x03\x23\xef\xed\x24\x05\x9e\xb2\x1b\xd4\x46\x7d\x0b\x25\x1a\xf9\xf2\x69\x99\x44\x6d\x28\xb8\x50\x86\xc6\xa7\x6e\x2f\x86\xa7\x85\x0e\x98\x95\xb3\xe4\x59\xe9\xc5\xa2\xd4\x45\x39\x38\xed\x58\xe1\xc6\x8e\x90\x93\xf7\x77\x4f\xee\x8a\xf8\x21\x3d\xd9\xed\xc3\x47\xe3\xc6\x4b\xc4\x79\x2f\x3e\xbc\x44\x80\xf7\xee\xc0\x51\x61\x56\x7a\xaf\x3b\x3c\x8a\x17\x85\x8b\x2a\x2b\x2d\xcb\x36\x08\x9d\x3a\x1c\x32\x20\x63\xd1\xc1\xd0\x49\xce\x79\x86\xa7\x3a\x5d\xa7\x3e\xe9\x29\xce\x9a\x63\x94\xee\xf7\x45\xc9\x45\x06\xe8\x0a\x6e\xd0\x8e\x02\x4b\x11\x55\xe8\x98\x81\x04\x6b\x0c\x29\xd6\x18\x1d\x29\x63\xa6\x18\x57\xf8\x60\xcf\xb1\xcf\xd0\x45\x46\x15\xca\x4b\xa5\xcd\x63\xef\xe6\x05\x48\x47\xe1\xec\x47\x8e\xfe\x2c\x24\x82\x6b\x9c\x17\x0c\xee\x22\xba\xb3\xe4\xff\x88\x3e\xad\x5a\xcb\xd4\xa7\x86\x3a\xf7\x9d\xa9\x2d\xe3\x73\x22\x74\x19\x52\x6e\xc5\x38\xab\x27\x8f\x1c\xb0\xac\x69\x6c\x08\x68\xc3\x45\x07\xe9\x9a\x1c\xfc\x61\x00\x55\x88\x88\xbc\x10\x1c\xf8\xc8\xa9\xd6\x9a\x23\x9e\x80\x00\x36\x3a\xf8\x4d\xbf\xa9\xf5\x51\xdf\x87\x00\x03\xa2\xd1\x31\xa3\x24\x6b\x84\x32\x6f\x24\xf0\xd4\xc4\x59\xa7\xda\x9d\xb4\xf7\x23\xe9\x19\x3a\xd7\x88\x60\xce\x85\xdd\x30\xcc\x11\x5c\x53\xa5\x6d\xe7\xa6\x55\xf8\x92\xdb\xec\xf0\xa7\xf3\xd5\xd2\x3a\x8f\xe3\xa7\x44\x2a\x13\xc7\x67\xfc\x87\xe1\xaf\x2b\x4d\x96\xa5\x7d\x6d\x9d\xef\x6c\x50\xb8\xdb\x37\x1f\xd7\x43\x5b\x69\x82\x08\xce\xdd\x0f\x84\x20\x71\x00\x69\x7f\xd6\x29\x7a\x7a\xd6\x2f\x75\x87\xa2\xff\x60\x6c\xf6\x19\x7f\x92\xd2\x91\x26\x8f\xd9\xf2\x3b\x67\x6f\x2d\xc0\xb9\x84\x5d\x86\xdf\x32\x77\xae\xe9\x17\x03\x29\xd5\xfd\x46\xe0\xc1\x22\xfa\x91\xb2\xb3\x06\x43\x21\xf8\x39\xcf\x09\x84\x6f\xec\x8c\x64\x98\xef\x07\x37\x29\x73\x65\x94\xe1\xe6\xa8\x93\x19\xc8\x16\x50\xc5\xc2\x78\x4e\x86\x0f\x80\xb0\x53\x7d\xdc\xbd\x73\xca\x9f\x02\xdf\xaf\x68\x2d\x1a\xaf\x77\x67\x75\x15\xe5\xf8\xfa\xb7\x63\xde\xf4\x36\x2c\x8c\x6d\x33\x3a\xc2\x6c\x33\x5f\x26\x58\x0a\xf2\x04\xb1\xb3\x45\x0d\x69\xb8\xd6\xae\xa7\xbe\x1d\x14\xfc\x4f\x9f\x51\xd5\xa4\x3c\xc8\x8b\xe1\x69\xf9\x2c\xe1\x63\x80\xac\x01\x1b\xb1\x9f\xd7\x0b\x2f\xe1\xdb\x0e\x28\xab\x4c\xb5\xc9\x94\x75\x36\xb2\xb2\xdf\x45\x5b\xd8\x89\xaa\x0d\xc6\xb6\xa4\x60\x1b\xe7\xce\xd0\x5f\xf0\xc1\x44\x78\x8c\xd2\x21\x45\x13\x04\x25\x4d\x1d\xdd\xbe\xc2\xe2\x6b\x55\x05\x30\x46\x32\x20\x23\x0d\x7c\xf3\xbc\xd2\x22\x08\x05\xda\x26\x21\x2b\x12\x70\x5b\x34\x58\x16\xc8\xf2\xa8\xd3\x98\x45\x15\x2b\xc3\x48\x5e\x32\x4d\x8b\x93\x84\x3a\x17\x46\x2a\x82\xbe\x8c\xac\x7e\x3a\x0f\xa7\xa9\xc3\x2a\xcd\xde\x18\x20\x74\x91\xd5\x03\xdb\x16\x88\x95\xc9\xc2\x36\x95\x22\xff\x35\xce\xe3\xe7\xe7\xf6\x13\x14\xcc\xd1\xaf\xbf\xfc\xf3\x71\x9a\xa2\xc7\x5c\xe8\x0c\xe4\xaf\xbf\xfc\x0b\x6d\x4b\xad\x05\xaf\xad\xc1\xff\x7a\x60\x47\x41\x08\x33\x26\x8e\x46\x9d\x36\xe1\x49\xa8\xbf\xd5\x6b\x30\xa6\x1b\xa9\x42\x88\x66\x65\x36\x34\xc8\x6c\x29\xb6\x1f\xbf\x0a\xa9\x7e\xd3\x2a\x50\xa8\xfa\xc2\x7d\xbc\xf4\x99\x38\x0d\x08\xef\xee\x45\x06\x0a\x10\x96\x2d\x47\x53\xad\xb8\x61\x32\xb0\xc5\x5c\x90\x3a\x9d\x57\x5b\x1c\x2e\xb0\xc6\x7e\x0d\x68\xfa\x40\xc1\x8f\x9a\xf5\x6d\x20\xde\x42\xfc\x07\x6a\x92\x41\x32\x6b\xfe\x7c\xf0\x4f\x03\x9d\x2c\x4b\xbe\x70\x8b\x0c\x8c\x7f\x42\xe7\xb4\x71\x0a\x16\xc1\xe7\x33\xbf\x7e\x0b\xd4\xec\x6f\x55\xf4\x93\xc8\x59\x05\x7b\xcf\x58\x9f\x98\x28\x8f\x30\xfa\xee\xe5\xb3\xef\xd1\x63\x1b\x43\xb4\x30\x09\xc0\xe2\x7c\x95\x89\x92\xa5\xc6\x64\x5d\xd6\x37\x36\xdb\x0e\x37\x62\x57\xb5\x37\xd8\x6f\x01\x6d\xad\x93\xa2\xd6\x26\x46\x44\x88\x5e\x2f\x86\xd7\x3c\x6c\x44\x3b\xc5\x92\x4b\xc9\x9c\xd4\xd8\x95\xa6\x4a\x94\x92\x80\x09\xa1\x2d\x65\xb8\x75\xfb\x2a\xd5\x87\xe7\xaa\x74\x2a\x44\x51\x32\xac\x0d\xd4\x7b\xe9\xaa\x28\x46\x95\x76\x34\xe1\xda\x20\x1c\xcc\x1c\xad\xe0\x29\xa1\x97\x2e\xde\x36\x37\x53\x61\xf3\xcf\x52\x62\x27\x1c\x77\xcc\x7f\xef\xee\xfc\x3b\x00\x00\xff\xff\x22\x83\x9b\x41\x3e\x5b\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas"].(os.FileInfo),
	}
	fs["/schemas"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas/manifest.json"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
