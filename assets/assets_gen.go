// Code generated by vfsgen; DO NOT EDIT.

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets statically implements the virtual filesystem provided to vfsgen.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2020, 12, 17, 3, 11, 48, 312988850, time.UTC),
		},
		"/schemas": &vfsgen۰DirInfo{
			name:    "schemas",
			modTime: time.Date(2020, 12, 21, 23, 10, 2, 462240651, time.UTC),
		},
		"/schemas/manifest.json": &vfsgen۰CompressedFileInfo{
			name:             "manifest.json",
			modTime:          time.Date(2020, 12, 21, 23, 10, 2, 462125645, time.UTC),
			uncompressedSize: 24264,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xec\x3c\xdd\x8e\x1c\x35\xd6\xf7\xf3\x14\x56\x09\x09\xf8\xbe\x64\x02\x68\x61\x45\xa4\xbd\xc8\x0a\x56\x1b\x94\x25\x28\x84\xe5\x22\xcc\x96\xdc\xe5\x53\x5d\x4e\xbb\xec\xc2\x76\x75\x4f\x2f\x1a\x89\x07\xd9\x7d\x39\x9e\x64\xe5\x9f\xaa\xae\x1f\xbb\x7e\x7a\x7a\x20\x42\x5c\x20\x32\x65\xfb\x9c\xe3\xe3\xf3\xef\xe3\xfe\xe9\x0a\xa1\xe4\x3d\x95\x15\x50\xe2\xe4\x29\x4a\x0a\xad\xab\xa7\x4f\x9e\xbc\x55\x82\x3f\x76\x5f\xaf\x85\xdc\x3e\x21\x12\xe7\xfa\xf1\x47\x7f\x7e\xe2\x67\x3e\x32\xcb\xf4\xb1\x02\xb3\x46\x6c\xde\x42\xa6\xfd\x37\xaa\x99\xfd\xf8\x0f\x2c\x77\xa0\x2b\x86\x33\x40\xb8\xaa\x50\x77\xa1\x84\x1f\x6b\x2a\x81\x24\x4f\xd1\x9b\x2b\x84\x10\x4a\x38\x2e\xc1\x8e\x21\x94\xec\x41\x2a\x2a\x78\x72\x85\xd0\x8d\x9d\x4e\xa0\x02\x4e\x80\x67\x14\x54\xf2\x14\xfd\xe4\xa6\x19\x20\xa0\x74\x5a\x2b\x90\x29\xae\x75\x61\xa0\x25\xed\x5f\x69\x86\x19\xdb\xe0\x6c\x97\xd6\x92\x25\x37\x57\x08\xdd\x59\x60\x98\x10\xaa\xa9\xe0\x98\x7d\x23\x45\x05\x52\x3b\xa0\x39\x66\x0a\xec\x84\xaa\xfb\xd9\xe3\xa2\xa4\xfd\x77\x67\xdf\x4a\x4b\xca\xb7\x9e\xec\xee\xde\x9f\x55\x15\x7a\xfe\xc5\x69\x80\x40\x8e\x6b\xa6\xcd\x50\x62\xbf\xdd\xf9\xad\x0a\xb9\x5d\x05\xf8\xa5\xdc\x62\x4e\xff\x8d\xcd\x06\x16\x80\xb7\x5c\x5d\x4b\xb8\x5d\xd4\x03\xd3\x1c\xc8\x5a\x48\x0a\x4a\xcc\x35\xcd\x50\x03\xa0\x9d\x56\x61\xad\x41\x1a\x88\xc9\xbf\x3e\x78\xf3\xd1\xe3\xcf\x6f\xfe\xff\xc3\x1f\x7e\xb8\x0e\xfc\xf3\xbd\x3e\x29\x95\xa4\x25\x96\xc7\x34\xc3\x1a\xb6\x42\x1e\x03\x34\xbd\x69\x89\x42\x09\xaf\x19\x4b\x6e\xc6\xd4\x75\x85\xd3\x50\xea\xc1\xa2\x16\x6c\xbb\x04\x78\x5d\xb6\x62\xda\x90\xb0\xc7\xd9\x69\x8a\x91\x29\xa5\x40\x27\xfe\xef\x9b\x1e\xc1\x0a\x32\xc1\xc9\x03\x90\xdc\x02\x7e\x00\xa2\x65\xcd\x3a\xd2\xdf\xa5\xb3\x51\xf5\x38\x9d\x86\x36\xb7\xbe\x1d\x9b\x53\x39\x4f\xe1\x48\xed\x9c\xf0\x51\x38\xf4\xbe\xc4\xa5\xaf\x4f\x88\x21\x02\xc1\x6d\x25\x41\x29\xca\xb7\xe8\x50\x00\x47\xba\x70\xd6\x88\x2a\xb4\xa7\x8a\x6e\x18\xf4\x57\x8f\x54\xa9\xc3\x16\x67\x09\xb8\xd2\x98\xb1\xfb\x53\x24\x78\x9f\xa2\x0c\x73\xb4\x01\xe4\xe1\x03\x59\x42\xd7\x55\xf7\xff\xcd\xe1\x65\xb8\xc2\x1b\xca\xe8\x80\x95\x2d\x89\x58\x4a\x7c\x8c\x68\x6c\x6f\x6d\x3b\x85\x6a\x28\x07\xa7\x12\xdd\x6f\x04\x5e\x4f\xf2\x46\xe2\x69\x8e\x1f\x64\x49\x75\x6a\xa4\x00\x6f\xfb\xf6\xad\x3b\x4e\xf9\x16\xd4\x78\x54\xd2\x6d\xa1\x55\x7c\xb5\x1f\x3f\xad\x6e\x07\x6f\x82\x3c\x54\x75\x55\x09\xa9\x81\xa4\x0c\xf3\x6d\x8d\xb7\x11\x75\xf0\xbc\x9c\xd6\x86\x16\x18\x3a\x01\x3b\x8f\xb7\x21\xc6\xc1\xec\x66\xaa\x5a\x56\x42\xdd\x67\x07\x2d\x84\x0b\x92\xad\x14\x70\x4d\x31\x4b\x15\xc8\x3d\xcd\x3a\xc0\x1b\x73\x40\x52\xe0\x05\xe6\x19\x94\xc0\x75\x7f\x14\x73\xcc\x8e\x9a\x66\x83\x45\x1b\x28\xf0\x9e\x0a\x89\x59\x8a\xc9\xde\x58\x13\x35\xd2\xc6\x0a\xa4\x32\xa6\x68\xe8\x45\xdd\x1e\x80\x41\x5a\xee\xf4\x60\x8d\x2a\x55\xe0\x2b\x94\x98\xb2\xc0\xf7\xc8\x67\x82\x35\x4e\x37\x52\xec\x0c\x49\x33\x47\xe6\xe4\xf5\xfc\x03\xf3\xeb\x2f\x77\x5c\x04\x18\xe8\x81\xad\xc4\x59\x06\x6a\x70\x02\x99\x90\x12\xb2\x80\xfa\x0a\xa9\x1b\x4b\x30\xb3\x77\x4a\x8c\x60\xe8\x63\xaa\x2a\x9c\xdd\x47\x6a\x1b\x40\xc8\x03\x5a\xc2\x8d\x4e\x28\x3b\x0f\xb2\x3b\x4d\x70\x78\x99\x0f\xb8\xd6\xf5\x10\xa1\xa8\xb7\xc7\x37\xd2\xe7\xee\x30\x2a\xee\x7c\xcd\x29\xd3\x20\x55\xd2\xfb\x7e\xd3\x9f\x16\x73\xa7\xad\x88\x72\xbc\x05\x12\x18\xea\xf0\x62\x23\x04\x03\xcc\x47\x04\x74\x99\xf2\x7d\x01\xba\x00\x89\x74\x41\xd5\x80\x3b\xc6\xc7\x7a\x3c\x48\x48\x54\xe2\xaa\x1a\x78\xb5\x71\x30\x68\x43\x82\x64\x30\xe5\xee\x51\x90\x5b\x93\xb4\x07\xfc\xf0\xfc\x79\x22\x0b\x77\x16\xfb\x20\xaa\xbe\x18\xf6\x53\xe0\x3d\x85\x9d\x80\xca\x24\xad\x74\x3f\x20\xbf\x18\x11\x5d\xf0\x81\xa5\xc1\x38\x24\x46\x6a\x23\xa8\x93\x64\xf6\xc3\x91\x85\x54\x36\x90\x03\xcb\xc6\xca\x1d\x40\x3a\x52\xf3\x20\x5e\x8f\x26\x3c\x6d\x42\x9b\xbb\xc8\x1e\x85\xc7\x72\x21\x4b\xac\x93\xc0\xe0\x4d\x10\xdb\x92\x10\x7a\xb9\xfe\xf7\xb9\x11\x1e\x5d\x22\x49\x8b\x4f\x0a\x4d\xf0\x22\xec\x71\x86\x33\x8c\x53\x8d\x02\xb0\x26\x81\x6b\x29\x18\x03\x99\x66\xb5\xd2\xa2\x04\x99\x52\x32\xb5\x02\x73\x22\x05\x25\xdd\x48\x61\xe1\x8a\xe9\x59\x39\x95\xb0\x02\x28\x15\x6a\xe5\xec\x3d\x70\x22\xe6\x76\x57\xd2\x4c\x0a\x25\x72\xbd\x02\xf8\x69\x4d\x55\x6f\x18\x55\xc5\x2c\x0f\xa5\xd8\xd5\xeb\x26\x2f\xa7\xa6\xe6\xf4\xc7\x1a\x4c\xc4\x74\x50\x11\x25\xec\x44\x6d\x55\x21\x38\x24\x91\x39\x37\xc1\xef\x77\xd3\xba\xf9\xeb\x28\x86\x47\x76\x0f\xd5\x90\xf8\x30\xc5\x1c\x55\xe0\x8f\x67\xc6\x3f\xf9\xf4\xb3\x99\x19\x9f\x7e\xfc\xc9\x4a\xde\x5e\x2d\xf9\x36\xfc\xd2\xff\xbb\xfb\x57\xef\xac\x1e\x28\xae\x0a\xda\xa8\x64\x8f\x25\xc5\x1b\x06\xbf\xc7\x70\x4b\xcb\xfa\x8f\x68\xeb\xf7\x12\x6d\x45\xbd\xf9\x3d\x69\x9c\xf6\xe0\x53\x06\x6a\xc2\x6b\xaf\xf1\xd7\x6b\x3c\xf5\x9c\x8f\x5e\xec\x9d\x97\xfa\xe5\x05\x1e\x79\x9d\x2f\x5e\xe3\x85\x17\xfa\xdf\xc5\x9e\x77\x89\xcf\x9d\xf2\xb6\x37\xf3\x29\x41\xdc\xb7\x5e\x46\x4c\xa3\xfe\xb4\xab\x4c\x61\x97\x39\x29\xca\x31\x2f\x1b\xf7\xaf\x53\x9e\x35\xea\x53\xe7\x39\xd8\xfa\xa3\x49\x1e\x46\x13\x9c\x13\x0f\xff\xe9\x01\x21\x02\x39\xe5\x34\x66\x83\x66\xf2\x9c\x84\x89\x0c\x47\xd6\x36\xd6\xfb\x6a\x41\x8e\xb3\x32\xc3\x99\xcf\x6f\xe2\x8e\x63\x79\x08\x77\x62\xd6\xd7\xb8\x04\x24\x72\x5b\xad\x0f\x47\x04\x13\x31\xe5\x89\x47\x97\x22\xe7\x85\x07\x38\x22\x29\xb2\x70\x26\x8a\x4c\x0e\x94\x13\x11\x0f\x23\x93\x4c\x88\x1d\x9d\x48\xe0\x08\xd6\xf8\x05\x3e\x82\x0c\x47\x89\x37\x8b\x39\xf5\xf6\xa0\x67\x99\x14\xbf\x85\x8a\xb1\xeb\xab\xef\x5f\x23\x02\x1a\x53\xa6\x62\x1c\x9a\x4d\xe7\xe7\x44\xdd\xce\xd8\xc1\x31\xc2\x81\x08\xda\xb5\x79\xfd\xb2\xcc\x7e\x89\xc8\xad\x49\x64\xba\xbc\x6c\x00\x23\x2d\x50\x4e\x39\xe9\xc9\x1f\x3a\x50\x5d\x50\x77\xa9\xf5\xd5\xf7\xaf\xa7\x00\xce\x26\x36\x08\x25\x05\x60\x32\x99\xfa\x19\xd1\x64\x98\x96\x2a\x89\x4e\xb9\x89\x8c\xdc\x4d\x1e\xe2\xa5\xb9\xb6\x83\xe3\x50\x57\x87\xbc\x8a\xd1\xf9\xeb\xe4\x57\x73\x17\x62\x85\x90\x3a\x0d\x47\xc3\xf3\xcd\x00\x76\x75\x37\xd8\x45\xba\xc0\x1a\x99\x14\x05\x4b\x85\x28\x47\x0a\xb0\xcc\x0a\x24\x41\xd5\x4c\x2b\x84\x39\x41\x5b\x6c\xa2\xc3\xde\x45\x64\xb4\xd1\xc1\x29\x37\x90\xb3\x29\x6c\x00\xc4\x89\x14\xa7\xab\x5a\x6f\x4a\x90\xca\x24\xc0\x92\x3e\x0c\x7b\x79\x69\xef\x7c\x53\x2e\xf4\xfa\x96\x8c\xd3\x7a\x64\xd6\x23\x55\x88\x83\x55\x40\x43\x51\xad\x40\xba\xab\x64\xac\x76\x94\x6f\x4d\x08\x84\x70\xad\x0b\x21\x97\x77\x8a\x9c\x30\xdc\xe7\x9a\xb0\x03\xe4\x9e\x97\xc7\xdf\xb4\xa0\x92\xb0\x3c\x82\xae\x2b\xdb\xd9\xb3\xbe\x29\x45\xd7\x15\xfa\xee\xd5\x8b\x3e\x03\x0a\x51\x42\x85\xb7\x70\x16\xcc\x66\xf1\x18\x6c\x9b\xdb\xf8\x4b\xe0\xb3\xc0\x37\x40\x9a\x9b\xe4\x31\x1a\xdf\xde\x91\x56\x82\xd1\xec\x78\x16\x12\x0f\x02\x39\x10\x63\x14\x4a\x63\x5d\xab\xf3\x58\x6e\x97\x8e\x41\x6a\x71\x1e\x3c\x0d\xb2\x54\xc6\x9c\xfa\xab\xe3\x31\x64\x22\xb2\xb3\x20\x13\x91\xd5\x25\x70\xed\x3c\xdc\x08\x2c\x13\x5b\x71\x66\x5b\xcc\xb0\x7d\xc7\x82\x6a\xa7\x05\xa3\x8f\x84\x51\xbe\x6b\x1b\x74\xd6\x75\xd3\x34\x2d\x73\xfa\xd5\x09\x72\x47\x03\x0f\x94\xf8\x7e\xb9\x02\xe8\xb6\xd0\xdd\x10\xaa\xf9\x64\x46\xdd\xbc\xd6\x25\xcc\x36\xeb\x34\xdb\x5d\xdf\x1b\x63\xf8\x81\xdc\x5f\xeb\x1a\x72\x2c\x93\xce\xc1\x98\x53\x06\xfd\xf4\xa4\x0b\xb6\xe1\x50\x10\x2e\xe5\x1a\xb6\x83\xc0\x64\xb0\x15\xb7\x3e\xb2\x95\x8f\x82\x28\x5b\xbe\x9f\x8b\xd3\x03\x98\x47\x1a\x6e\x13\x91\xb0\xa7\x70\x38\xd3\xfe\x8f\x3b\xea\x3c\xb4\x7b\xde\xba\x3f\x2f\xf1\xb6\x77\xd1\x1e\x09\xd4\x7b\xca\xd2\x8b\xb7\x17\xc6\xd8\x33\x2a\x33\xa3\x34\x53\x6a\xd3\x3f\xe5\x68\xf8\x1e\x54\x9e\xb9\x68\x73\xc0\xa8\x80\x06\xc5\xcb\x88\xbd\x08\x38\xa4\x47\x6b\x91\x8f\x35\x6a\x88\x24\xa4\x55\x33\x32\x3e\x46\x33\x56\xad\x88\x9c\x0f\xb1\x07\x15\x6c\x35\xfa\x80\x96\xc5\xf1\xcf\xf5\xea\x09\xae\x71\x76\x9f\x4e\x9f\x16\xc2\x79\x7a\x16\xd3\xa6\x51\xb5\xd7\xd7\x72\xef\xa3\x60\x13\x92\x1f\x2a\x5d\x2f\x95\xbd\x0e\x17\x42\x45\xea\x58\xa2\x99\x68\xc8\x0a\x4e\x33\x3c\x2e\x50\x27\xa5\x35\x66\xa1\xdc\x2e\xc9\x29\xc7\x3c\x0b\xdc\x13\x29\xc8\x6a\xd9\x6b\x6f\x1a\x66\x9f\x77\x01\x7e\x5e\x62\xd3\xa1\x2a\xfb\xa9\xd0\x3a\x3c\xb8\x79\xa1\x84\xdb\x8a\x4a\x70\x7d\xf5\x5a\xec\x20\x98\x12\x8c\xae\xab\x4e\xb4\x7d\x69\xd7\xbb\xbc\xc4\xaf\x0f\x24\x20\x56\x3a\xfa\x4d\x6f\x90\x4b\x50\x45\x6a\xd4\x50\xee\xf1\xfa\xe8\xcd\x03\x40\x2d\x80\x50\xbf\xf9\x07\x6f\x3e\x7e\xfc\xf9\x8d\xed\x2e\xff\xbf\x0f\x8b\x05\xa9\x51\xe8\x9d\xc1\x0a\x6e\xbc\x72\xcb\x1d\x3b\xec\xf2\x45\xcc\x88\xbc\x63\x58\xc0\x92\xd3\xc9\xd7\x92\x46\x38\xf5\xf2\x59\xad\x0b\xd4\x40\xb6\x81\xee\x12\x46\x10\x2a\x21\xd3\xa9\xe0\x69\x5d\x11\x1c\x4e\x64\xa7\x38\xe1\xd6\x9b\x54\xda\xaf\x5f\xc4\x8a\x03\x6c\x0a\x21\x76\xf7\xe8\x47\x6f\x20\xcc\xc4\xdb\x86\xc1\x1d\x7b\xa5\x20\x93\xd0\xb3\x96\xb0\x07\xae\xd5\x99\x21\x79\x2c\x66\xee\x1f\xeb\x6c\xfc\x1a\x3e\xde\xc1\x35\xb1\xdb\x2f\xfa\xee\xd5\xf3\x70\x74\xeb\xb7\x76\x4e\xd8\xfc\x57\xac\xe0\xb3\x3f\x3d\x06\x9e\x09\x02\xa4\x61\x2d\x72\x10\x8d\x94\x13\xa4\x05\x52\x74\xcb\x91\x67\xd7\xa0\x41\x94\x6b\xe0\xfa\x4b\xb3\xdc\x20\x31\x12\x63\x21\xae\x0c\xfb\xfb\x05\x8e\x73\x36\xd2\x30\xa9\x07\x09\xb9\x92\x63\xbb\x0f\x33\x08\x5c\xd3\x0c\x6b\x68\x0a\x2e\x43\x69\x5a\x46\xb0\x67\x46\x98\xd2\xa8\xb3\x0f\x93\x1c\x62\x6c\xb8\xef\x6d\xc6\x9f\xc4\x7c\x63\x15\xf4\x7d\xb6\xab\xf8\x39\xdf\xfb\x0a\xf0\x75\x26\x01\xeb\x40\x93\xc1\x68\x62\x5e\xb3\x9c\x8e\x1e\x35\xb8\x73\xac\xaa\xeb\xf0\x9b\x87\x76\xd8\x9b\xf5\xf0\x60\xcd\x27\x56\xbb\x47\x03\x71\x3a\xfd\xb8\x6b\x6e\x26\x13\x9e\x7b\xc6\x63\x1e\x84\xdc\xe5\x4c\x1c\xce\x0b\xe3\x4e\xf7\x6f\x48\xe4\xa8\x81\x85\x9c\x69\xbb\x74\x60\x37\x6a\x88\x19\x37\xc3\x24\x34\x1b\xb6\x6f\xe7\xfc\x81\x22\xbf\x60\x6f\xc9\xd2\x20\xa8\xa8\x4b\xcc\x1f\x4b\xc0\xc4\xd6\xd3\xdd\x85\x70\x4e\xdd\x2d\xb0\x55\x55\xcf\x97\x68\x10\x16\xbc\x23\x5c\x8a\x9e\x77\xee\x04\x9f\x65\x9a\xee\xa9\x3e\x22\xac\xc6\xd5\xd9\x38\x7e\xcb\xe9\x73\xf1\x37\xe9\x56\x43\x83\x01\x66\x6d\x6f\x21\x0e\x71\x94\xf7\x8a\xb5\xcd\xb4\x06\x5d\xf0\x8a\xb9\x6b\x07\xb1\xe7\xc9\x52\xa3\x13\x99\xdf\xd5\xaf\x85\xb1\x75\x7e\x3e\x53\xcd\xce\xf2\x9a\x67\xcd\x15\xd7\x06\x10\xdc\x42\x56\x0f\xec\x43\x1f\x9f\xb0\xf7\x05\x71\xeb\x3b\x77\x63\xd9\x47\xef\xa1\xb5\x42\x3c\xb0\x08\x43\xd2\x97\x5f\x21\xce\x74\xa9\x69\xac\x76\xe9\x8f\x35\xd4\x67\xb7\x11\xad\xea\x57\x6a\xb6\x95\x3a\xfe\x52\xc1\x53\x4d\x4b\x10\xf5\x4c\x7b\x48\x38\x4b\x1f\xc4\x46\x94\xeb\x41\x48\x31\x99\xa7\xcf\x50\x28\xeb\x77\x97\x36\x7b\x6a\xef\x1a\x71\x98\xea\x34\x17\x32\xcd\x4c\xae\xcc\x18\x9e\xef\x9f\x9b\xe8\x7e\x0c\xe5\x06\x53\xd8\x55\x56\x00\xa9\x19\xa4\x5a\xa4\x19\x13\x0a\xde\x35\xf6\x74\x09\x54\x1a\x4b\xfd\xce\x11\xe8\x88\x7a\x47\xd9\x57\x00\x96\x7a\x03\xf8\xb7\x66\xdb\xb2\x66\xe5\xa4\xc2\x12\x97\x53\xbe\x61\x22\xf4\xef\xba\x06\x0b\x07\x02\xcf\x5e\xa2\x4f\x5e\xe6\xba\xc1\xa6\x9b\x5e\xc2\xbd\xd3\xb1\xee\xe9\x06\xdb\xd5\x4c\xdf\xcb\xaa\x8e\x97\xb9\x5e\x97\x78\x6b\xf2\xb2\x2e\x8d\x68\x28\xe9\xfa\x20\xbb\x11\xa5\x0f\x7a\xda\x43\x18\xb7\x6b\xdc\xc5\x58\x75\x09\xfa\x4c\x18\xf9\x38\x97\x14\x38\x61\x47\xd4\x8d\xfa\x56\x52\x34\xf1\xe6\x67\x1d\x45\xdd\x50\x70\x25\x0d\x27\x9d\xba\x3f\x19\x1e\x16\xda\x63\x56\x2f\xa2\xe7\x4c\x2d\x16\xb5\xae\x6a\x7d\x01\x35\x76\x80\x1c\xbd\x7f\x68\xf2\x6f\xa7\xc9\xee\x1c\xde\x19\x35\x5e\x43\xce\x83\xe8\xf0\x1a\x02\x1e\x5c\x81\xa3\xc4\x9c\xa9\xbd\x99\xe0\x39\xdd\xc6\x93\xc2\x55\x99\x95\x96\x35\xac\x28\x0e\x99\x20\x63\x55\x61\xe8\x22\x75\x9e\x1d\x1c\x93\x71\xde\xff\x30\x45\x9c\x50\xc3\xe4\x4c\xbe\xdd\xef\xd3\x4b\x5e\x17\x80\x76\x70\x44\x39\x05\x46\x10\x55\xe8\x50\x80\x04\x2b\x0a\x04\x6b\x8c\x0e\x94\x31\x93\x8a\x2b\xbc\xb7\x75\xd9\x6b\xf4\xba\xa0\x0a\x95\xb5\xd2\xe6\xb3\x57\xf2\x0a\xa4\x83\x70\xfd\x03\x47\x7f\x13\x12\xc1\x2d\x2e\x2b\x06\x8f\x10\xcd\x2d\xf8\xbf\xa0\xf7\x9b\x5e\x2a\xf5\xbe\x81\xce\x7d\x47\x66\x47\xf4\x1c\x09\x7d\x84\x94\x5b\x32\xae\xdb\xc5\x13\xd7\xe8\x78\x03\xec\x02\xdc\x70\xb6\x41\xba\x0b\x7d\x5f\x0a\xa0\x0a\x65\xa2\xac\x04\x07\xae\x2f\x5b\xe0\x09\x10\x60\x6d\x83\x3f\xf3\x63\xcb\x8f\xb6\xbe\x0f\x0c\x32\x8d\x0e\x05\xcd\x8a\x13\x51\x66\x44\x02\x27\xc6\xca\x3a\xd6\xe6\xd2\xd6\xfb\xc9\x35\x7a\xae\x51\x86\x39\x17\xf6\xc0\x30\x47\x70\x4b\x95\xb6\xed\x8a\x96\xe1\x6b\x6e\x6e\x1d\xf2\xc0\x03\x3e\xb8\xd5\xa9\x05\xb7\xb4\x50\xa4\x0a\x71\x48\x05\x4f\x03\x3f\x32\x34\x9b\x9b\x0e\x99\xf6\x3c\xb7\x96\xe1\xd1\x50\x8a\x5c\x03\x69\xc3\x90\x4c\x70\xee\x7e\x20\x03\x89\x3d\x48\x8b\x38\x5a\x42\x1b\xe6\xbb\x01\xe2\xad\xec\x9a\x2d\x00\xa1\xfa\x02\x5b\x70\x5a\xdf\xd9\x83\x53\x0e\xbb\x13\x7f\x78\xae\xbe\xe9\xf7\x63\xd0\x0e\x1b\x61\x47\xfb\x18\x5a\xcc\xfe\x45\x38\xa1\x3a\xf8\xa0\xe5\x02\xc4\x9f\x24\x2e\x2b\x30\xdf\x8e\xee\x00\x96\xd2\x28\xc3\x2d\x41\x17\x93\x91\x0d\xa0\x06\x85\xd1\xa1\x02\xef\x01\x61\xc7\xfa\xb8\xa2\x97\x94\xbf\x00\xbe\x3d\xa3\xa1\x66\x3a\xef\x5d\xd4\x4b\x53\xe2\xdb\xdf\x0e\xf9\xe9\x3a\x7f\xa5\x95\x5b\xd0\x07\xd5\x31\x22\x67\x97\x73\x07\xa7\x7e\xf2\x9c\x48\x02\xc3\xda\x1d\xb2\x41\xe4\x64\x40\x3d\x58\x49\xd7\xf6\xe3\x15\x82\x11\x90\xe7\xd7\x74\x47\xae\xa1\x03\xd5\xed\xc2\x36\xca\x77\x8d\x9d\xff\x65\x33\xaa\x4e\x1e\x1d\xca\x4a\x1f\xef\x5d\x34\x9e\x8a\x3c\xe7\x7f\x4d\x2f\xbe\xad\x2f\x7a\x51\x68\xa3\x93\xa7\xe0\xa0\x75\xc0\x76\x3f\x8f\xd0\x06\x72\xd1\xf4\xb8\xd8\x76\x13\x6c\x6d\xfa\x35\xfa\x3b\xde\x1b\xa7\x86\x11\x19\x43\x34\x06\x5f\x52\xe2\xe0\x0e\x99\x38\xbf\x77\x55\x01\x63\x59\x01\xd9\xee\x1e\xa5\xd4\xc1\x61\x52\x85\x14\x68\xeb\x87\x2d\x89\xc0\x6d\xd6\x64\x51\x21\x8b\xab\xf5\xe4\x36\xb0\x9a\x3e\xc0\x81\x0d\x5d\x13\xa1\x7b\x9f\xfe\xb0\x2a\xe7\xa3\x16\x22\x45\x45\xc4\x81\xff\xfe\xf4\xce\x8b\x25\xe6\xfe\x12\x09\xd9\xf3\x35\x9b\x0e\xff\x16\xc0\x1f\xba\xb7\x50\xf7\xca\x9a\x69\x5a\xcd\xbd\xba\x5d\xae\x79\x6d\x20\xd0\x00\xf6\x05\xa1\xe6\x67\x20\x31\x21\x2e\xef\x38\x6d\xdc\x24\x35\xaf\x8b\x76\x62\xf7\xd8\xb1\x32\x47\x6e\xf3\x49\xe4\x5f\x94\x3d\xfb\xe6\xb9\x7d\x45\x85\x39\xfa\xe5\xe7\xff\x3c\x23\x04\x3d\xe3\x42\x17\x20\x7f\xf9\xf9\xbf\x68\x53\x6b\x2d\x78\xcb\x6a\xff\x4b\x98\x3d\x4d\x47\x98\x31\x71\x30\xec\xb4\x51\xab\x84\xf6\xbd\xe9\x49\x49\xbc\xf7\x0a\x65\x27\x17\xb8\xc6\x31\x19\xd7\xb9\x8f\x9c\xe7\x5f\x07\x37\xbf\xd7\x16\x79\x6a\xea\xcb\x73\xf3\xbf\x01\x33\x53\xf7\x9b\x54\x68\x05\x08\xcb\x8e\xa4\xab\x8e\x42\x9b\x38\xdb\x2b\xae\x3b\x97\x46\x0c\xe2\x8f\x4f\xa7\x7e\xf9\x6a\x29\xe7\x96\x15\x14\x47\xf9\xee\xe4\x0b\xcd\x51\x18\x3b\x53\x58\x3c\xb3\xc4\xb8\xe6\xf8\x07\xb4\x4d\x4f\x1a\x9b\xeb\x89\xc9\x77\x8f\xe6\xb9\x75\x49\x74\x57\x6b\x47\xee\x56\xfd\x16\xd2\x5b\x35\xf9\x84\x78\xf1\x2f\x21\x0d\x84\xff\x4b\x63\xb6\x11\x46\x5f\x7d\xfb\xf2\x6b\xf4\xcc\xda\x2d\x2d\x8c\x45\xb7\x75\x02\x55\x88\x9a\x11\xa3\x02\x2e\x57\x30\x3a\xd0\x35\x71\x22\x6f\x9a\xa3\xec\x1b\x5a\x5b\x2b\x21\xa8\x73\xe8\x13\x64\x44\xfd\xdd\x34\x1f\xc6\x4d\x9a\x97\x64\x43\x2d\x99\xdb\x09\x76\xe5\x2e\x25\x6a\x99\x81\x31\xe5\x1d\x06\x39\x5e\xf8\xca\x97\x77\x13\x4d\x39\xa6\x12\x55\x6d\xa2\x1c\x84\xd1\xb7\x2e\xc6\x61\x54\x69\x07\x13\x6e\x4d\xae\x84\x99\x83\x15\xbc\x77\x58\xd4\x5e\xba\x92\x91\x0f\xf6\x40\x79\x50\x65\xbd\x32\xff\xdd\x5d\xfd\x2f\x00\x00\xff\xff\x87\xaa\x0a\x31\xc8\x5e\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas"].(os.FileInfo),
	}
	fs["/schemas"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas/manifest.json"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
