// Code generated by vfsgen; DO NOT EDIT.

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets statically implements the virtual filesystem provided to vfsgen.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2020, 12, 13, 21, 44, 59, 796228496, time.UTC),
		},
		"/schemas": &vfsgen۰DirInfo{
			name:    "schemas",
			modTime: time.Date(2020, 12, 16, 3, 36, 58, 78411564, time.UTC),
		},
		"/schemas/manifest.json": &vfsgen۰CompressedFileInfo{
			name:             "manifest.json",
			modTime:          time.Date(2020, 12, 16, 3, 36, 58, 78172769, time.UTC),
			uncompressedSize: 22406,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\xdb\x8e\xdc\x36\xb2\xef\xf3\x15\x05\x21\x40\x92\x73\xec\x71\x12\x9c\xe4\x20\x06\xf6\xc1\x8b\xcd\x62\x1d\x78\x93\xc0\x71\xd6\x0f\x89\x57\xe0\x48\xa5\x16\xdd\x14\xa9\x90\x54\xf7\xcc\x06\x06\xf2\x21\xbb\x3f\x97\x2f\x59\xf0\x22\xb5\x2e\xa4\x2e\xed\x1e\x27\x08\x32\x40\x10\xb7\x48\x56\x15\x8b\x75\x65\x95\xf4\xd3\x15\x40\xf2\x9e\xca\x4a\xac\x48\xf2\x18\x92\x52\xeb\xfa\xf1\xa3\x47\xaf\x95\xe0\x0f\xdd\xd3\x6b\x21\x77\x8f\x72\x49\x0a\xfd\xf0\xa3\xff\x7f\xe4\x67\x3e\x30\xcb\xf4\x5d\x8d\x66\x8d\xb8\x79\x8d\x99\xf6\xcf\xa8\x66\xf6\xe1\xdf\x89\xdc\xa3\xae\x19\xc9\x10\x48\x5d\x43\x7f\xa1\xc4\x1f\x1b\x2a\x31\x4f\x1e\xc3\xf7\x57\x00\x00\x09\x27\x15\xda\x31\x80\xe4\x80\x52\x51\xc1\x93\x2b\x80\x57\x76\x7a\x8e\x35\xf2\x1c\x79\x46\x51\x25\x8f\xe1\x27\x37\xcd\x00\x41\xa5\xd3\x46\xa1\x4c\x49\xa3\x4b\x03\x2d\xe9\x7e\xa5\x19\x61\xec\x86\x64\xfb\xb4\x91\x2c\x79\x75\x05\xf0\xc6\x02\x23\x79\x4e\x35\x15\x9c\xb0\x6f\xa4\xa8\x51\x6a\x07\xb4\x20\x4c\xa1\x9d\x50\xf7\x1f\xff\xd4\x23\xaf\xfd\xd5\xdb\xb9\xd2\x92\xf2\x9d\x27\xbc\xbf\xfb\x27\x75\x0d\x76\x91\x1d\x79\x33\xda\xd9\x56\x48\x0a\x2b\xc2\x35\xcd\xa0\x05\xd0\x4d\xab\x89\xd6\x28\x0d\xc4\xe4\x9f\x1f\x7c\xff\xd1\xc3\xcf\x5f\xfd\xef\x87\x3f\xfc\x70\x1d\xf8\xe7\x7b\x43\x52\x6a\x49\x2b\x22\xef\xd2\x8c\x68\xdc\x09\x79\xb7\x89\xa6\xfe\xd9\x1a\xfa\x3c\x30\xe8\x80\x75\x4b\x90\x37\x55\x77\xca\x2d\xe2\x03\xc9\x4e\x53\xcc\x91\x28\x85\x3a\xf1\xbf\x5f\x0d\xc8\x54\x98\x09\x9e\x5f\x8c\xd0\x0e\xdc\x3d\x90\x2a\x1b\xd6\x13\x99\xb0\x7a\x4c\x8f\xd6\xad\xea\xc6\x96\xa4\xd3\xd3\x35\x91\x50\x27\x5e\x14\x8f\x83\x27\x71\x16\x0d\x09\x31\x44\x00\xde\xd6\x12\x95\xa2\x7c\x07\xc7\x12\x39\xe8\xd2\x29\x2e\x55\x70\xa0\x8a\xde\x30\x4c\xba\xc5\x6f\x7a\x2c\xa1\x5c\x69\xc2\xd8\xdb\x23\x16\x7c\x88\x38\x23\x1c\x6e\x10\x3c\x7c\xcc\x7b\xe8\xaf\xfa\xff\x6f\x0f\x20\x23\x35\xb9\xa1\x8c\x8e\x18\xd3\x51\x42\xa4\x24\x77\x91\x63\x18\xac\xed\xa6\x50\x8d\xd5\x88\xc7\xd1\x6d\x45\xe0\x0d\xa4\x67\x22\x62\xe6\x30\x51\x56\x54\xa7\xe6\x4c\xc9\x8e\xe8\xbe\x76\xf7\xc7\x29\xdf\xa1\x9a\x8e\x4a\xba\x2b\xb5\x8a\xaf\xf6\xe3\xa7\xd5\xdd\xe0\xab\x20\x0f\x55\x53\xd7\x42\x6a\xcc\x53\x46\xf8\xae\x21\xbb\xed\xac\xec\x40\xc0\x09\xc4\x79\x1c\x0d\xb1\x0b\x17\xb7\x50\x37\xb2\x16\x6a\x3b\xdd\xdd\xba\x0b\x12\xab\x14\x72\x4d\x09\x4b\x15\xca\x03\xcd\x7a\xc0\xc1\x2b\x72\x9e\x22\x2f\x09\xcf\xb0\x42\xae\x87\xa3\x84\x13\x76\xa7\x69\x36\x5a\x74\x83\x25\x39\x50\x21\x09\x4b\x49\x7e\x30\x76\x40\x4d\x14\xac\x46\xa9\x8c\x11\xa1\xff\x0a\xc8\x84\x46\x86\x69\xb5\xd7\xa3\x35\xaa\x52\x81\xa7\x58\x11\xca\x02\xcf\x23\x8f\x73\xa2\x49\x7a\x23\xc5\xde\x90\xb4\x70\x50\x4e\x36\xb7\x1e\x93\x5f\x75\xb9\x43\xca\x91\xa1\xc6\x11\xeb\xb3\x0c\xd5\x88\xef\x99\x90\x12\xb3\x80\x82\x0a\xa9\x5b\x5d\x5f\xd8\x31\xcd\x8d\x38\xe8\xbb\x54\xd5\x24\xdb\x2e\xa1\xed\x72\xf0\xcb\xd7\xf0\x60\xe4\x7c\xe6\x41\xf6\xa7\x09\x8e\x5f\x17\x23\x5e\xf5\x0d\x7c\x28\x8c\x1b\x70\x2b\x1f\xf2\x14\x46\x61\x5e\xef\x69\x41\x99\x46\xa9\x92\xc1\xf3\x57\xc3\x69\x31\xa7\xe7\x47\x2b\xc2\xc9\xce\x52\x32\x1e\xea\xf1\xe2\x46\x08\x86\x84\x4f\x08\xe8\x33\xe5\x65\x89\xba\x44\x09\xba\xa4\x6a\xc4\x1d\xe3\x09\x3d\x1e\x10\x12\x2a\x52\xd7\x98\x87\x80\xf5\x82\x32\xeb\xb8\x93\xd1\x94\x37\x13\x0e\x58\x6e\xcd\xd2\x1e\x70\xa3\x63\xd2\xa7\xe7\x09\x16\xee\x22\xf6\x51\x74\x7b\x31\xec\xa7\x00\x78\x0e\x7b\x8e\x2a\x93\xb4\xd6\xc3\xc0\xf8\x62\x44\xf4\xc1\x2f\xd2\xd2\x4a\xe2\x2c\x1d\x43\x15\x5d\x49\x46\x0b\x39\xb0\x6c\xaa\xbd\x01\xa4\x13\x3d\x0e\xe2\xf5\x68\xc2\xd3\x66\xd4\xb5\x8f\x2c\xb4\xd6\xb0\x46\xc8\x8a\xe8\x31\x0b\x61\xaa\xa9\x7e\xfe\x9a\x48\x76\xb0\x60\x56\xc1\x87\xdc\x08\x8f\xae\x11\x95\x76\xde\xe2\x49\xc1\x0c\x2f\xc2\x8e\x64\x3c\xc3\x78\xc8\x28\x00\xab\xf3\x5c\x4b\xc1\x18\xca\x34\x6b\x94\x16\x15\xca\x94\x86\xec\x49\xb7\x82\xf0\x5c\x0a\x9a\xf7\xdd\xfe\xca\x15\xf3\xb3\x0a\x2a\x71\x03\x50\x2a\xd4\xc6\xd9\x07\xe4\xb9\x58\xda\x5d\x45\x33\x29\x94\x28\xf4\x06\xe0\xa7\x35\x75\x73\xc3\xa8\x2a\x17\x79\x28\xc5\xbe\xd9\x36\x79\x3d\x35\x0d\xa7\x3f\x36\x68\xc2\x9f\xa3\x42\x19\x52\x15\xe8\x85\x06\xc3\xbf\x89\x2d\xf2\x30\xbd\xda\xbd\x1b\x99\xf7\xc8\xde\x42\xea\x25\x39\xce\x71\x48\x95\xe4\xe3\x85\xf1\x4f\x3e\xfd\x6c\x61\xc6\xa7\x1f\x7f\xb2\x91\xb7\x81\xa7\xd3\x67\xe3\x27\xc3\xdf\xfd\x5f\x83\xb3\xba\xa7\x98\x28\x68\x7e\x92\x03\x91\x94\x0c\x32\x71\xf8\xdd\x84\x4a\x5a\x36\x7f\x44\x4a\xb3\xd8\x7f\x4b\x91\x52\xd4\x13\xbf\x25\x11\xf3\xde\x77\xce\x02\xcd\x78\xdc\x2d\xbe\x76\x8b\x97\x5d\xf2\xaf\xab\x3d\xeb\x5a\x9f\xba\xc2\x9b\x6e\xf3\xa3\x5b\x3c\xe8\x4a\xdf\xb9\xda\x6b\x2e\xfa\xcb\xb1\x35\x0f\xc4\xeb\x71\xef\x78\x19\x39\x8c\x7a\xc4\x24\xc7\x82\x34\x4c\xdb\x5b\xcc\xa0\xd3\x9b\x95\xd5\x98\x9f\x8c\x7b\xc8\x39\xdf\x18\xf5\x8a\xcb\x1c\xec\x3c\xca\x2c\x0f\xa3\xd9\xc7\x89\x87\xff\xf0\x80\x20\xc7\x82\x72\x3a\xb9\x27\x69\x37\x3e\x9f\x84\x24\x4c\x64\xd3\x2b\xab\x6e\x34\x64\x27\x83\x09\xc8\xc6\xf4\x63\x39\xf9\x88\x9b\x7e\x58\x1d\x84\x9d\x98\xf5\x15\xa9\x10\x44\x61\xaf\xba\xc3\x3e\xdd\xfd\x05\xa3\xc2\x13\x8f\x2e\x45\xce\x33\x0f\x70\x42\x52\x64\xe1\x42\x1c\x98\x1c\x29\xcf\x45\x3c\x10\x4c\x32\x21\xf6\x74\x26\xbb\xca\x89\x26\xcf\xc8\x5d\x2c\x86\x0e\x45\x79\x61\x4e\xbd\x3e\xc6\x43\xe7\x35\xa9\x75\x9f\x49\x5f\xbe\x7c\x01\x39\x6a\x42\x59\x28\x8b\x87\x55\x19\xf6\x92\x80\xdb\x19\x7b\xbc\x8b\xec\x3b\x82\x76\x6b\xaa\xbd\x2e\xd9\x5e\x23\x68\xb0\x21\x01\xe9\xf3\xb2\x05\x0c\x5a\x40\x41\x79\x3e\x90\x3a\x38\x52\x5d\x52\x57\x07\xfa\xf2\xe5\x8b\x39\x80\x8b\x09\x09\x40\x52\x22\xc9\x23\x57\x22\xdd\x9c\x8c\x11\x5a\xa9\x58\x56\x11\xcb\x2b\xa2\x59\x9b\x3f\xc4\x4b\x73\x6d\x8f\x77\x63\x0d\x1d\xf3\x2a\x46\xe7\xbb\xc9\x8b\xba\x7f\x47\x8a\x4b\xa5\x90\x3a\x0d\x47\xb1\xcb\xb5\x5c\xbb\xba\x1f\xa4\x82\x2e\x89\x06\x93\x5a\x10\xa9\x80\x72\x50\x48\x64\x56\x82\x44\xd5\x30\xad\x80\xf0\x1c\x76\xc4\x04\x7d\x46\xcc\x07\x94\x38\x3d\xc6\xfc\x6c\x62\x5a\x00\x71\x7a\xc4\xa9\x90\xe9\xad\x06\xa8\x4c\x62\x5b\xbf\xea\xaa\x55\x28\x2b\x6a\x8b\x9f\x29\x17\x7a\x7b\x93\xc1\x69\x3d\x98\xf5\xa0\x4a\x71\xb4\x6a\x65\x90\x37\x0a\xa5\xab\xa9\x12\xb5\xa7\x7c\x67\xc2\x19\x20\x8d\x2e\x85\x6c\x2b\x43\x11\x62\xb6\x57\xcf\x7a\x4b\xcf\xab\xcd\x74\xe0\xbe\xe9\x40\x25\x61\x31\x42\xdd\xd4\xb6\xab\x63\x05\xb3\xba\x08\x31\x69\x24\x8d\xb6\x57\xe8\xa6\x86\xef\x9e\x3f\x1b\x72\xa3\x14\x15\xd6\x64\x87\x97\x44\xd5\xc2\x9c\x62\xeb\xf2\x12\x5f\x3f\xbd\x24\xd6\x16\x76\x5b\x9b\x9d\x62\xf7\xad\x0e\x69\x2d\x18\xcd\xee\x2e\x89\xdb\x43\x06\x07\x79\x8a\x59\x69\xa2\x1b\x75\xd1\xe3\xb4\x10\xa7\x98\xb4\xb8\x28\x1a\x8d\xb2\x52\xc6\x1e\xfb\xda\xee\x14\x61\x2e\xb2\x4b\x22\xcc\x45\xd6\x54\xc8\xb5\xf3\x9c\x13\x6c\x4c\xec\xc4\xa6\xf6\x93\x71\x73\x8c\x05\xd0\x4d\x0b\xc6\x32\x09\xa3\x7c\xdf\xb5\xbf\x74\x73\x57\x75\xad\xb4\x5d\x5c\xfa\xf9\x09\x72\xcf\x30\x1c\x69\xee\x5b\xb8\x4a\xa4\xbb\x52\x27\xbd\x68\xa7\x7d\x64\x46\xdd\xbc\xce\xc1\x74\xe0\x63\x4d\x31\xed\x76\xb7\x37\xa7\x18\x7e\x80\xfb\xd5\x8d\xf7\x1b\x5f\x2c\x2f\xce\x01\x5c\x50\x86\xc3\x4c\xa6\x0f\xb6\x65\x44\x10\x2e\xe5\x1a\x77\xa3\x68\x66\x44\xb1\x5b\x1f\x04\xdd\xb1\xf1\x5c\xd8\x1e\xc0\x09\x78\xd0\x40\xd7\x12\x0f\x14\x8f\x9b\x7c\xc8\xb4\xa5\xcc\xc3\x58\xe3\x4c\x66\x8a\xdc\x4f\x2b\xb2\x1b\xd4\xb5\x23\x31\xfa\x40\xb2\x07\xa1\xf6\xca\xf0\x7a\x41\xbe\x17\x24\x7c\x4e\xc6\x87\x67\x18\x8d\xdc\x83\x92\xbe\x14\x68\x8e\x18\x35\x16\xf7\x51\x84\x1b\x12\xf9\xad\x18\xa6\xc2\x3f\x46\x12\x52\x80\x05\x31\x9d\xa2\x19\x69\xc1\x18\x47\x50\x13\x36\x23\x19\xab\x43\x3f\x04\x8e\xf4\xa8\x09\xae\x49\xb6\xbd\xeb\xa5\x5b\x77\x9e\x3a\xc4\x84\x7e\x72\xcd\xea\x2f\x51\xdf\x46\x0f\x66\x04\x34\x74\x67\xbc\x56\x7a\x7a\x5c\x08\xdd\x0e\xc7\x52\xc1\x44\x63\x56\x72\x9a\x91\xe9\xcd\x70\x52\x59\x9b\x13\xca\xbe\x92\x82\x72\xc2\xb3\x40\x05\x46\x61\xd6\xc8\x41\xab\x0f\x8c\xf2\xc3\x37\x01\x7e\x5e\x62\xd3\xa1\xeb\xed\x5e\xdc\x30\x3a\xb8\x65\x51\xc4\xdb\x9a\x4a\x74\xed\xd3\x5a\xec\x31\x1c\xf3\x8f\x0b\x41\x27\xda\xbe\xb0\xeb\x5d\x8e\xe1\xd7\xf7\x7c\x7d\x7b\x39\x6a\xa5\x63\x80\x57\x62\x21\x51\x95\xa9\x51\x31\x79\x20\xab\xc2\xa3\x61\x07\x98\x03\x00\x1d\x80\x53\x0c\x70\xaa\x26\x7d\xf0\xfd\xc7\x0f\x3f\x7f\x65\x7b\x9f\xff\xe7\xc3\x32\x19\x51\x30\xed\x1c\xdf\xb0\xf1\xe7\x6e\xb9\xdb\xb9\x5d\xbe\x6a\xdf\x91\xce\xf4\x0b\x05\x87\x5f\x3f\x69\x74\x09\x2d\xe4\x69\x74\x28\x31\xa7\x12\x33\x9d\x0a\x9e\x36\x75\x4e\xc2\xa9\xe6\xdc\xa6\xdd\x7a\x93\xd7\xfa\xf5\xab\x76\x7d\xc4\x9b\x52\x88\xfd\xe6\xbe\xe8\x76\xdd\x42\x3c\x6a\x38\xd8\xb3\x3d\x0a\x33\x89\x03\xcb\x87\x07\xe4\x5a\x9d\x19\xb2\xc6\x62\xca\xe1\xb9\xcd\x9d\xdd\xcc\xf9\x0d\xf7\xfc\xd2\xed\x17\xbe\x7b\xfe\x34\x1c\xbb\xf9\xad\x9d\x13\x6f\xfe\x99\x28\xfc\xec\xff\x1e\x22\xcf\x44\x8e\x79\xcb\x5a\x70\x10\x8d\x18\xe7\xa0\x05\x28\xba\xe3\xe0\xd9\x35\x80\x63\x0c\x10\x72\xfd\x85\x59\x6e\x90\x18\x39\xb1\x10\xc3\x84\x0e\xef\x17\xce\xa1\xb7\xe5\xc5\x00\x12\xb8\x7b\xbc\x8e\x5c\x33\x88\x5c\xd3\x8c\x68\x6c\xef\x3b\x5a\xa1\x09\xd2\xe5\xb7\x16\x21\x68\xda\xd4\x35\xa5\x27\xc4\x9c\x70\xf3\xd6\x82\x7d\x8f\xf9\xaa\x3a\xe8\x8b\x6c\xc7\xeb\x53\x7e\xf0\x77\xa6\xd7\x99\x44\xa2\x03\xe5\xf4\xc9\xc4\xa2\x61\x05\xb5\x9d\xf3\x93\xa9\xa4\xae\xaf\x4f\x8d\xf5\xc1\x61\x6f\x66\xc3\x83\x0d\x9f\x59\xed\x5a\xd6\xe3\x74\xfa\x71\xd7\x78\x9b\xcf\x78\xd2\x05\x0f\x76\x14\x72\x5f\x30\x71\xdc\x12\x4c\x9d\xaa\x53\x26\x75\x6f\x21\x80\xb3\x45\x97\x0e\xaf\x26\x0d\x1f\xd3\x66\x8f\x84\x66\xe3\x86\xe2\x82\xdf\x53\xfc\x15\xec\x9d\x58\x1b\x8a\x94\x4d\x45\xf8\x43\x89\x24\xb7\xf7\xce\xae\x5c\x5a\x50\x57\x23\xb5\xda\xe7\xf9\x12\x0d\x85\x82\x15\xb4\xb5\xe8\x79\xaf\x62\xf6\x24\xd3\xf4\x40\xf5\x1d\x10\x35\xbd\xef\x8c\xe3\xb7\x9c\x3e\x17\x7f\x9b\xb6\xb4\x34\x18\x60\xd6\x6a\x96\xe2\x18\x47\xf9\x56\x11\xaf\x99\xd6\xa2\x0b\xd6\xa8\xfa\x35\x68\xe2\x79\xb2\xd6\xd4\x44\xe6\xf7\xb5\x6a\x65\x84\x5b\x9c\xcf\x54\xb3\xb3\xa2\xe1\x59\x5b\x0a\xba\x41\xc0\x5b\xcc\x9a\x91\x55\x18\xe2\x13\xf6\xb2\x7d\xc6\xe6\x86\x79\x35\x40\xea\x61\x74\xa2\x3b\xb2\x03\xe3\xb5\xeb\x0b\x6c\x0b\xbd\x57\x9a\xa8\x7d\xfa\x63\x83\xcd\xba\xde\x99\xd1\x84\x69\xf5\xbe\xa5\x3b\x75\x6c\xa3\x82\xa7\x9a\x56\x28\x9a\x85\x9e\x88\x70\x7a\x0b\xc3\x60\x85\x72\xdd\xf7\xf1\x8b\x34\xc8\xe6\xd7\xc4\x6e\x59\xfb\xee\xd1\x13\xaa\xd3\x42\xc8\x34\x33\xe9\x22\x63\xf1\x72\xe9\x24\xc6\x5e\x84\xad\xb2\x12\xf3\x86\x61\xaa\x45\x9a\x31\xa1\xf0\xdd\x6f\xaf\x4f\x82\xd2\x44\xea\x5f\x81\x04\x87\xf6\x57\x63\x41\x89\x44\xea\x1b\x24\xf7\xbf\xf5\xab\xd8\xaf\xa1\xfd\xab\x89\x24\x73\x21\x67\xe8\xf5\x84\x93\xf5\xb3\xab\x31\xf0\x2a\x42\xf4\x35\x84\xa5\x3e\x89\xf9\xae\x87\x70\xd3\x6b\xac\xed\xb5\xc5\x36\x7a\x3c\x69\x7c\xd8\xd4\xf2\xb0\xd4\xec\x10\xef\x29\x5d\x57\xa6\x8f\xc6\x48\xae\xbf\xad\x1f\x2a\x79\x6f\xde\x1d\xc2\xb4\x5e\x1f\xe8\x28\x98\x6b\x3d\xda\x46\x9f\x89\x8f\x1e\x16\x92\x22\xcf\xd9\x1d\xf4\xc3\x99\x8d\x14\xcd\xbc\x87\xb1\x8d\xa2\x7e\x8c\xb3\x91\x86\x53\xf0\xf3\xf6\x64\x78\x58\x70\x20\xac\x59\x45\xcf\x99\xba\x2b\x1a\x5d\x37\x93\x24\x74\xb5\xf2\xba\xe5\x8e\xca\x3f\xf4\x77\x48\xe2\xbb\xd4\x5f\x77\x0e\xbf\x19\xe5\xdd\x42\xce\xbd\x68\xee\x16\x02\xee\x5d\x6d\xa3\xc4\x9c\xa9\xb3\x99\xe0\x05\xdd\x6d\x4d\x37\x22\x02\xae\x65\x83\x57\x21\xac\xe1\x1b\x0e\x13\x32\xac\xb8\xdd\xb8\xc8\x65\xc5\x1e\xc7\xf7\x5f\x03\x4d\xbe\xe8\x4d\x44\xa8\x3b\x6e\x21\x69\x1c\x76\x6a\x25\x2f\x4a\x84\x3d\xde\x41\x41\x91\xe5\x40\x15\x1c\x4b\x94\x68\x05\x20\x27\x9a\xc0\x91\x32\x66\xf2\x49\x45\x0e\xf6\xbe\xf0\x1a\x5e\x94\x54\x41\xd5\x28\x6d\x1e\x7b\xd5\xae\x51\x3a\x08\xd7\x3f\x70\xf8\xab\x90\x80\xb7\xa4\xaa\x19\x3e\x00\x5a\x58\xf0\x7f\x82\xf7\xdb\xe6\x19\xf5\xbe\x81\xce\x7d\xfb\x5d\x4f\xe0\x1c\x09\x43\x84\x94\x5b\x32\xae\xbb\xc5\x33\x35\x55\x72\x83\x9b\x2b\x44\x01\x6e\x38\x8b\x20\x5d\x09\xd7\x67\xb6\x54\x41\x26\xaa\x5a\x70\xe4\x33\x17\x33\xe7\xdc\x52\x04\x08\xb0\x16\xc1\x9f\xf9\x5d\xc7\x8f\xee\x7a\x19\x19\x66\x1a\x8e\x25\xcd\xca\x13\x51\x66\x44\x22\xcf\x8d\x6d\x75\xac\x2d\xa4\xbd\x6e\xce\xaf\xe1\xa9\x86\x8c\x70\x2e\xec\x81\x11\x0e\x78\x4b\x95\xb6\x5d\x6c\x96\xe1\x5b\x8a\x80\x0e\xf9\xd4\xf5\x69\xbc\xd5\xa9\x05\xb7\xf6\xb6\x43\x86\x8b\xfb\x33\x35\x94\x30\xc3\x9e\x16\xd6\x16\x3c\x08\x48\x50\x8b\xc2\xf0\xa6\x24\x07\x04\xe2\xe4\x2d\x7e\x80\x15\xe5\xcf\x90\xef\xce\xa8\x9a\xcf\xe4\x24\x23\x14\xe4\xf6\xbe\x51\x9c\xaa\x77\xf3\x92\x18\x97\xe3\xd3\x69\x6e\xb4\xd6\xa3\xc3\x39\x19\x2e\x90\xc8\x88\x76\x67\x61\xc0\xbb\xa3\x9a\xc4\x5e\x17\xbb\x20\xb2\x0d\x30\xa5\x60\x39\xca\x73\xdf\x6a\x09\x68\x66\x0f\xaa\xdb\x85\xed\x54\xb5\xf2\xe6\xda\x55\xdb\x0f\xef\x50\x75\x32\xa8\x58\xd5\xe3\x32\x77\xf8\xa5\xb4\xb8\x3f\xdf\x4e\xed\x5f\x06\x1e\xbd\xd5\x88\x93\xc9\xed\xcc\x9a\x25\xf3\x01\xdc\x60\x21\xda\x22\xb4\xad\x07\x13\x7b\x99\x78\x0d\x7f\x23\x07\x63\x2a\x08\xe4\x53\x88\xe2\x80\x52\xd2\xdc\xc1\x1d\xf3\x66\xc5\x8d\x44\x8d\x8c\x65\x25\x66\xd3\x56\x18\x58\x36\x04\xe1\x33\xa2\x0a\x14\x6a\x6b\xdd\x2c\x89\xc8\x6d\x04\x6a\x51\x81\xc5\xd5\xd9\x47\xeb\xae\xce\xbd\x3c\xf0\x86\xf0\x3e\xd4\xc3\x1b\xf8\x5c\x8a\x3a\x17\x47\xfe\xfb\xd3\x11\x2f\x6b\x84\xfb\xeb\x63\xb0\x87\x66\x36\x3d\x2e\x62\xfd\xa1\x27\xd6\x65\x34\x4c\xd3\x7a\xe9\xd5\xb2\xf5\x5a\xd2\xb9\xcc\x16\xb0\x4f\x84\xdb\x0f\x85\x91\x3c\x77\x91\xd7\x69\xe3\x26\xac\x7b\x51\x76\x13\xfb\xa7\x49\x94\x39\x49\x1b\x48\x83\x7f\x81\xe2\xc9\x37\x4f\xed\x4b\x03\x84\xc3\x2f\x3f\xff\xfb\x49\x9e\xc3\x13\x2e\x74\x89\xf2\x97\x9f\xff\x03\x37\x8d\xd6\x82\x77\xac\xf6\x9f\x44\x1b\x68\x25\x10\xc6\xc4\xd1\xb0\xd3\x3c\xb2\xe5\x4f\x5f\x67\x3c\xc9\xbe\x77\x20\x0b\xf1\x59\x44\x84\x88\x26\xe7\xbe\xa7\xb7\xfc\x82\x5b\xfb\xc1\x9f\xc8\xdb\x52\xfe\xd2\x61\xc5\x87\x08\x62\xdf\x47\x09\x9f\xea\x8b\x12\x15\x02\x91\x3d\xe9\x55\x3d\xdd\x33\x11\xb5\xd7\x31\xc7\xeb\xf6\x68\xe3\x08\xe6\xbe\xa7\xb2\x96\x5f\xdd\xcc\x15\xaf\x74\xc1\x29\x8a\x8f\x03\x6a\x39\x38\xf3\x8e\xd1\x0c\x15\xdb\xdf\xf0\x82\x55\x87\x3e\xa2\x6d\x7e\xd2\x62\x7d\xaa\xff\x17\x7d\x33\x0a\xe2\x39\xcf\xdb\xa0\x8b\x8e\xc5\x46\x22\xaf\x44\x85\xc9\x4e\x5e\xab\xd9\xb7\xe0\x56\x7f\x84\x63\x24\xfc\x5f\x18\x53\x0c\x04\xbe\xfc\xf6\xeb\xaf\xe0\x89\xb5\x45\x5a\x18\x2b\x6d\xb3\x1f\x55\x8a\x86\xe5\x46\x05\x5c\x0c\x6d\x74\xa0\x6f\xb6\x44\xd1\xf6\x2d\xd8\xd7\xc0\x6c\x06\x98\x43\xef\xd0\x37\x6d\x71\xda\xd4\x74\xc9\x1d\x36\x92\x39\x22\x89\xcb\xcf\x95\x68\x64\x86\xc6\xf2\xf6\xf6\xee\xb6\xe9\x53\x75\x6f\xd5\xdb\xfc\xb1\x16\x75\x63\x62\x0d\x20\xf0\xad\x8b\x34\x18\x55\xda\xc1\xc4\x5b\x93\x38\x10\xe6\x60\x05\xaf\x47\x7b\x14\x0e\xdb\xb1\xc2\x3c\x0a\x3c\xbd\xcc\x9b\x71\xa3\x7b\x9e\x2b\xf3\xdf\x9b\xab\xff\x06\x00\x00\xff\xff\x72\x7f\x75\x80\x86\x57\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas"].(os.FileInfo),
	}
	fs["/schemas"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas/manifest.json"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
