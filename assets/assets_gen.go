// Code generated by vfsgen; DO NOT EDIT.

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets statically implements the virtual filesystem provided to vfsgen.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2021, 1, 7, 9, 12, 56, 181885475, time.UTC),
		},
		"/schemas": &vfsgen۰DirInfo{
			name:    "schemas",
			modTime: time.Date(2021, 1, 15, 23, 57, 0, 149102412, time.UTC),
		},
		"/schemas/manifest.json": &vfsgen۰CompressedFileInfo{
			name:             "manifest.json",
			modTime:          time.Date(2021, 1, 15, 23, 57, 0, 148872023, time.UTC),
			uncompressedSize: 23390,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\xeb\x8e\x1c\xb7\xb1\xfe\xaf\xa7\x20\x1a\x06\x6c\x9f\x23\xad\x24\x9f\x63\x07\x16\x90\x1f\x8a\xad\x20\x6b\x28\x96\x22\xad\xac\x1f\xf2\x66\xc0\x61\xd7\x4c\x53\xcb\x26\xdb\x24\x7b\x66\x37\x86\x00\x3f\x48\xf2\x72\x7e\x92\x80\x97\xbe\x93\x7d\xdb\x91\xac\x04\x5e\x40\xd0\x6e\x37\x59\x2c\x16\xeb\xf2\x15\x59\xec\x9f\xef\x20\x94\x7c\xa2\x48\x06\x39\x4e\x1e\xa1\x24\xd3\xba\x78\x74\xff\xfe\x5b\x25\xf8\x3d\xf7\xf4\x4c\xc8\xfd\xfd\x54\xe2\x9d\xbe\xf7\xe0\x0f\xf7\x7d\xcb\xbb\xa6\x9b\xbe\x29\xc0\xf4\x11\xdb\xb7\x40\xb4\x7f\x46\x35\xb3\x0f\xff\x8a\xe5\x15\xe8\x82\x61\x02\x08\x17\x05\x6a\x77\x94\xf0\x53\x49\x25\xa4\xc9\x23\xf4\xe6\x0e\x42\x08\x25\x1c\xe7\x60\xdf\x21\x94\x1c\x40\x2a\x2a\x78\x72\x07\xa1\x4b\xdb\x3c\x85\x02\x78\x0a\x9c\x50\x50\xc9\x23\xf4\xb3\x6b\x66\x88\x80\xd2\xaf\x14\xc8\xc7\xa5\xce\x0c\xad\xa4\x54\x20\x37\xb8\xd4\xd9\x86\x60\xc6\xb6\x98\x5c\x6d\x4a\xc9\x92\xcb\x3b\x08\xbd\xb3\xa4\x70\x9a\x52\x4d\x05\xc7\xec\xb9\x14\x05\x48\xed\x48\xee\x30\x53\x60\x1b\x14\xed\xc7\x7e\x24\x9a\xd6\xbf\xb7\x66\xad\xb4\xa4\x7c\xef\x99\x6e\xcf\xfc\x71\x51\xa0\xf3\x6f\x9b\x17\x29\xec\x70\xc9\xb4\x79\x95\xd8\x67\xef\xfc\x44\x85\xdc\x2f\x22\xfc\x4c\xee\x31\xa7\xff\xc0\x66\x02\x33\xc8\x5b\x99\x2e\x65\xdc\x76\xea\x90\xa9\x96\x63\x29\x25\x05\x39\xe6\x9a\x12\x54\x11\xa8\x9b\x15\x58\x6b\x90\x86\x62\xf2\xf7\xcf\xde\x3c\xb8\xf7\xf5\xe5\xff\x7e\xfe\xe3\x8f\x67\x81\x5f\x3f\xe9\xb2\x52\x48\x9a\x63\x79\xf3\x0d\xd6\xb0\x17\xf2\x26\xc0\xd2\x9b\x9a\x27\x94\xf0\x92\xb1\xe4\x72\xc8\x5c\x5b\x33\x0d\xa3\x9e\x2a\x22\x15\xd9\xba\x0b\xf0\x32\xaf\x75\xb4\xe2\xe0\x80\x49\xd3\xc4\xa8\x94\x52\xa0\x13\xff\xf7\x65\x87\x5f\x05\x44\xf0\xf4\xf4\x1c\xd7\x74\xdf\x03\xcf\xb2\x64\x2d\xdd\x6f\xf3\x59\x99\x79\x9c\x4f\xc3\x9b\xeb\x5f\xbf\x9b\x32\x38\xcf\xe1\xc0\xe8\x9c\xea\x51\x38\x76\x9e\xc4\x75\xaf\xcb\x88\x61\x02\xc1\x75\x21\x41\x29\xca\xf7\xe8\x98\x01\x47\x3a\x73\x9e\x88\x2a\x74\xa0\x8a\x6e\x19\x74\x7b\x0f\x0c\xa9\x25\x16\xdb\x80\x72\xa5\x31\x63\xb7\xe7\x48\xf0\x2e\x47\x04\x73\xb4\x05\xe4\xe9\x43\x3a\x87\xaf\x3b\xed\xff\xab\xc5\x23\xb8\xc0\x5b\xca\x68\x4f\x94\x35\x8b\x58\x4a\x7c\x13\xb1\xd7\x4e\xdf\xba\x09\xd5\x90\xf7\x56\x25\x3a\xdf\x08\xbd\x8e\xe6\x0d\xd4\xd3\x2c\x3f\xc8\x9c\x6a\xa3\x1f\x78\xdf\x75\x6e\xad\xd7\xe7\x7c\x0f\x6a\xf8\x52\xd2\x7d\x16\xef\x6a\xdf\x36\x3d\xeb\x57\x97\x41\xe9\xa9\xb2\x28\x84\xd4\x90\x3e\xc5\x7c\x5f\xe2\x7d\xc4\x0e\xbc\x10\xc7\xcd\xa0\xa6\x85\x58\x4d\x6c\x9d\x50\x43\x12\x83\xc9\xb9\x14\xa5\x2c\x84\xba\xcd\x0c\x6a\x0a\x27\x64\x5b\x29\xe0\x9a\x62\xb6\x51\x20\x0f\x94\xb4\x88\x23\xef\x07\xd2\x0d\xf0\x0c\x73\x02\x39\x70\xdd\x7d\x8b\x39\x66\x37\x9a\x92\x5e\xa7\x2d\x64\xf8\x40\x85\xc4\x6c\x83\xd3\x83\x71\x23\x6a\x60\x86\x05\x48\x65\x7c\x50\x3f\x78\xba\x39\x00\x83\x4d\x7e\xa5\x7b\x7d\x54\xae\x02\x4f\x21\xc7\x94\x05\x9e\x47\x1e\xa7\x58\xe3\xcd\x56\x8a\x2b\xc3\xd2\xc4\x92\x59\x65\xbd\xc5\x82\xf9\xfe\xa7\x5b\xae\x14\x18\xe8\x9e\x93\xc4\x84\x80\xea\xad\x00\x11\x52\x02\x09\x18\xae\x90\xba\x72\x01\x13\x73\xa7\xa9\x51\x0c\x7d\xf3\xb2\xc0\xe4\x36\x4a\x5b\xd1\x41\xca\x11\x9a\x23\x8c\x16\x7c\x9d\x26\xd9\x6e\x26\x38\x3c\xdb\xf5\x84\xd6\x8e\x0c\x21\xa4\xdb\x11\x5b\xda\x15\x2e\xea\x21\xe1\xd6\xd3\x1d\x65\x1a\xa4\x4a\x3a\xcf\x2f\xbb\xcd\x62\x61\xd4\xbf\xcd\x31\xc7\x7b\x48\x03\xaf\x5a\xb2\xd8\x0a\xc1\x00\xf3\x01\x03\x6d\xa1\xbc\xce\x40\x67\x20\x91\xce\xa8\xea\x49\xc7\xc4\x56\x3f\x0e\x12\x12\xe5\xb8\x28\x7a\xd1\xac\x62\xb5\x81\x80\x16\x0a\x24\xbd\x26\xef\x06\x12\xb0\xd2\x1a\xe5\x3d\x10\x7f\xfb\xac\x0f\xd7\x13\x59\xba\x93\xa3\xf7\xb0\xf4\xc9\x46\x6f\xe0\xf6\xd8\xe8\x29\x28\x22\x69\xa1\xbb\x30\xfc\x64\x4c\xb4\xc9\x07\xba\x06\xf1\x47\x8c\xd5\x4a\x51\x47\xd9\xec\xc2\x90\x99\x5c\x56\x94\x03\xdd\x86\xc6\x1d\x18\x74\x60\xe6\xc1\x71\xfd\x30\xe1\x66\x23\xd6\xdc\x1e\x2c\xd4\xd7\x88\x46\xc8\x1c\xeb\xbe\x08\xd1\xd0\x90\x7d\xfb\x39\xd0\xb9\xd3\x61\xd4\xfe\xbb\xd2\x08\xbf\x9d\xa3\x49\x55\xbb\xc9\x95\x42\x23\xb2\x08\x07\x9c\x7e\x0b\x13\x53\xa3\x04\xac\x4b\xe0\x5a\x0a\xc6\x40\x6e\x48\xa9\xb4\xc8\x41\x6e\x68\xc8\xdd\xd4\x3d\x30\x4f\xa5\xa0\x69\x1b\x28\xcc\xec\x31\xde\x6a\x47\x25\x2c\x20\x4a\x85\x5a\xd8\xfa\x00\x3c\x15\x53\xb3\xcb\x29\x91\x42\x89\x9d\x5e\x40\xbc\xe9\x53\x94\x5b\x46\x55\x36\x29\x43\x29\xae\xca\x65\x8d\xe7\x73\x53\x72\xfa\x53\x09\x06\x30\x1d\x55\xc4\x08\x7d\x4b\x03\xda\x8a\x4c\xf0\x81\xf7\xac\x7e\x2e\x83\xcf\x07\x0e\xcb\x93\xf3\xb6\xf9\x61\x0c\xc3\x0f\x76\x0b\xd3\x90\xf8\x38\x26\x1c\x95\xe1\x87\x13\xef\xbf\xf8\xf2\xab\x89\x16\x5f\x3e\xfc\x62\xa1\x6c\x03\x4f\x87\xcf\xfa\x4f\xba\x7f\xb7\xff\xea\xac\xd5\x7b\xc2\x55\x41\x1f\x95\x1c\xb0\xa4\x78\xcb\xe0\xbf\x11\x6e\x69\x59\xfe\x8e\xb6\x46\x47\xff\x0f\x42\x5b\xd1\x68\x7e\x4b\x1e\xc7\x23\xf8\x98\x83\x1a\x89\xda\x4b\xe2\xf5\x92\x48\x3d\x15\xa3\x67\x47\xe7\xb9\x71\x79\x46\x44\x5e\x16\x8b\x97\x44\xe1\x99\xf1\x77\x76\xe4\x9d\x13\x73\xc7\xa2\x6d\x3f\x16\x04\x52\x82\x78\x6c\x3d\x8d\x9a\x46\xe3\x69\xdb\x98\xc2\x21\x73\x54\x95\x63\x51\x36\x1e\x5f\xc7\x22\x6b\x34\xa6\x4e\x4b\xb0\x8e\x47\xa3\x32\x8c\x26\x38\x8d\x0c\x7f\xf0\x84\x50\x0a\x3b\xca\x69\xcc\x07\x4d\xe4\x39\x09\x13\x64\xb8\x8f\x56\xbf\x0d\x79\xd9\x60\x8e\xb3\x30\xc3\x99\xce\x6f\xe2\x81\x03\xcd\x86\x70\x8d\xb0\xbe\xc7\x39\x20\xb1\xb3\xbb\xf4\x61\x44\xe0\x7e\x82\x98\xb2\x91\xd1\xa9\xd8\x79\xea\x09\x0e\x58\x8a\x74\x9c\x40\x91\xc9\x91\xf2\x54\xc4\x61\x64\x42\x84\xb8\xa2\x23\x09\x5c\x8a\x35\x7e\x8a\x6f\x40\x86\x51\x62\x08\x23\x86\x25\xf5\xf6\x18\x07\xde\xd3\xa7\x4f\xfd\xf6\x95\xb8\xbe\x7b\x7d\x81\x52\xd0\x98\xb2\xd0\x96\x01\x9a\x95\xce\x4f\xa9\xba\x6d\x71\x05\x37\x11\x09\x44\x86\x5d\x9a\xd7\xcf\xcb\xec\xe7\xa8\x1c\x5a\x90\xc8\xb4\x65\x59\x11\x46\x5a\xa0\x1d\xe5\x69\x47\xff\xd0\x91\xea\x8c\xba\xc3\xac\xef\x5e\x5f\x8c\x11\x9c\x4c\x6c\x10\x4a\x32\xc0\xe9\x68\xea\x67\x54\x93\x61\x9a\xab\x58\x76\x12\xcb\x4f\xa2\xd9\x9f\x5f\xc4\x53\x4b\xed\x0a\x6e\xfa\xb6\xda\x97\x55\x8c\xcf\x0f\x93\x5f\xd5\xbf\x47\x8e\xc3\x32\x21\xf5\xb7\x41\x30\x3c\x5d\x01\x60\x3b\xb7\xb1\x2e\xd2\x19\xd6\xc8\x64\x28\x58\x2a\x44\x39\x52\x80\x25\xc9\x90\x04\x55\x32\xad\x10\xe6\x29\xda\x63\x03\x0e\x3b\xe7\x8f\xd1\xea\x06\x67\xdb\x90\xae\x65\xb0\xea\x1f\xe7\x51\x34\x07\xb4\xde\x91\x20\x45\x24\xc0\x9c\xda\x0b\x7b\x66\x69\x4f\x7a\xbf\x17\x7a\x79\x15\x46\xd3\x1d\x71\xa1\x01\xa9\x4c\x1c\xad\xf5\x19\x86\x4a\x05\xd2\x9d\x1f\x63\x75\x45\xf9\xde\xe0\x1f\x84\x4b\x9d\x09\x39\xbf\x38\xa4\x19\xe1\x36\x47\x84\x2d\x22\xeb\x8e\x9d\x6a\x72\xcf\x6b\x52\x49\x58\x19\x41\x97\xc5\xab\x17\x4f\x57\x94\xa1\xe8\xb2\x40\xa6\x67\x87\x5e\x26\x72\x28\xf0\x1e\xd6\x90\xac\xfa\x0e\xa9\x56\x69\xcd\x4b\x77\xfa\xbb\x86\x78\x45\xa2\x3a\x41\x1e\x0e\xe2\xeb\x39\x9e\x0b\x46\xc9\xcd\x9a\x21\x3c\x01\x54\x58\x0a\xc3\x01\x94\xc6\xba\x54\xab\x84\x6d\x7b\x0e\x29\x6a\xb1\x8a\x9c\x06\x99\x2b\xe3\x43\xfd\x71\xf1\x90\x70\x2a\xc8\x1a\xc2\xa9\x20\x65\x0e\x5c\xbb\xa8\x36\xa0\xca\xc4\x5e\xac\x2c\x81\xe9\x97\xea\x58\x52\x75\xb3\x20\xe2\x48\x18\xe5\x57\x75\x31\x4e\xdd\x76\x56\xe5\x4c\x55\x1a\xa7\x5f\x34\x94\x5b\x86\x77\xa4\xa9\xaf\x8c\xcb\x80\xee\x33\xdd\x86\x4d\xd5\x23\xf3\xd6\xb5\xab\xc3\x40\x4d\x3e\x56\x98\x53\x4d\x77\x79\x1d\x8c\x91\x07\x72\x7f\x75\x1a\x4c\x16\xdf\x58\x21\xad\x19\x71\x47\x19\x74\x53\x92\x36\xd9\x4a\x42\x41\xba\x94\x6b\xd8\xf7\xc0\x48\x6f\x2a\xae\x7f\x64\x2a\x0f\x82\x43\xd6\x72\x5f\x3b\xa6\x27\x30\x3d\x68\xd0\x93\x16\x12\x0e\x14\x8e\x2b\xdd\xfe\xb0\x78\xce\x53\x9b\xe3\xff\x47\x4e\xda\xcf\x73\xbc\xef\x1c\xae\x47\xc0\x79\xc7\x58\x3a\x18\x7b\x26\xae\x9e\x30\x99\x09\xa3\x19\x33\x9b\xee\x2a\x47\x21\x7b\xd0\x78\xa6\x10\x66\x4f\x50\x01\x0b\x8a\x6f\x1d\x76\x50\x6f\xc8\x8e\x96\x0e\x3e\xb4\xa8\xfe\x20\x21\xab\x9a\xd0\xf1\xe1\x30\x43\xd3\x8a\xe8\x79\x7f\xf4\xa0\x81\x2d\x1e\x3e\x60\x65\xf1\xf1\x27\x6c\x8e\x08\xae\x31\xb9\x4d\x71\x4f\x4d\x61\x9d\x9d\xc5\xac\x69\xb0\xc3\xeb\xf7\x6f\x6f\x63\x60\x23\x9a\x1f\xda\xae\x9e\xab\x7b\x2d\x29\x84\x36\xa6\x63\xc9\x65\xa2\x81\x64\x9c\x12\x3c\xdc\x94\x4e\x72\xeb\xcc\x42\xf9\x5c\xb2\xa3\x1c\x73\x12\x38\x1b\x52\x40\x4a\xd9\xa9\x68\x42\xbd\x8c\xf3\x5d\x40\x9e\xa7\x98\x74\x68\x67\xbd\xd9\x5c\xed\x2f\xdc\xb4\x52\xc2\x75\x41\x25\xbc\x52\x20\x2f\xc4\x15\x04\xf3\x80\xc1\x01\x55\xc3\xd9\x13\xdb\xdb\x25\x23\xda\xf5\x0f\x64\x1d\x56\x37\x3a\xa3\x4a\xd8\x49\x50\xd9\x39\xd7\x20\x0f\x98\x2d\x86\x6e\xbe\x3f\xa2\x15\x81\x06\xac\x34\x87\x5c\x9f\xbd\x79\x78\xef\xeb\x4b\x5b\x44\xfe\x3f\x9f\x67\x33\xd2\xa1\xe1\x65\x82\x05\xa2\x78\xe1\x3a\x3b\x59\x98\x44\x6c\x9e\x24\x4a\x3f\xd8\x37\xfe\xaa\xc2\x4c\x20\xdb\xac\x78\x29\x69\x44\x48\xcf\x0c\x5d\x54\xdd\x81\xb0\x00\x77\x8e\x0c\x52\x2a\x81\xe8\x67\xfc\x55\x91\xe2\x70\xd6\x3a\x26\x04\xd7\xdb\xa4\xcd\xa5\xeb\x3f\x4b\x0a\x47\xd8\x66\x42\x5c\xdd\xa2\xe2\xbc\xa2\x30\x81\xb2\x4b\xd9\x36\x9e\x04\x0e\xc0\xb5\x5a\x09\xbb\x63\xb8\xd8\x8c\xb1\x00\xa3\x86\x97\xb2\x3b\xc3\xd7\x6e\x76\xe8\xd5\x8b\xf3\x30\x82\x55\x40\x24\x44\xe1\xe4\x28\x34\xfe\x13\x56\xf0\xd5\xff\xdf\x03\x4e\x44\x0a\x69\x25\x48\xe4\x28\x1a\x75\x4e\x91\x16\x48\xd1\x3d\x47\x5e\x5c\x1d\x3a\xc6\x31\x01\xd7\x4f\x4c\x77\x33\x88\xd1\x0f\x4b\x71\x21\xb4\xef\xee\x5d\xac\x99\x48\x25\xa4\x0e\x25\xe4\xb6\x12\xeb\x79\x98\x97\xc0\x35\x25\x58\x43\xb5\x97\xd2\xd7\x9d\x79\x0c\x7b\x61\x84\x39\x8d\x06\xf4\x30\xcb\x21\xc1\x86\xeb\xd9\x26\x62\x46\x2c\xfe\x15\xc1\xf8\xe6\x2b\xe3\x0f\x7e\x67\xf7\x8c\x48\xc0\x3a\x50\x3c\x30\x68\xb8\x2b\xd9\x8e\x0e\x2e\x29\xb8\x75\x2c\x8a\xb3\xf0\x1d\x86\xfa\xb5\xf7\xde\xe1\x97\x25\x1f\xe9\xed\x6e\x01\xc4\xf9\x24\x82\x2b\xe0\xfa\xac\xf0\x77\x01\x20\x1d\x89\xd0\xc1\x55\xcd\xf1\xf5\xdf\x9e\xbf\x5c\x94\x97\x35\x06\x4c\xb9\xfe\xbf\x2f\x62\x6a\xf4\xf0\x41\x38\x13\xd4\x2c\xae\x44\x63\xe7\x1d\x8d\x16\x5d\x3c\x7d\x69\xf0\xc1\x8e\xee\x4b\x19\xba\x3a\x11\x3f\x37\x48\x28\xb7\x50\x26\x74\x5e\x36\x70\xf7\x9d\xf7\xe1\x3d\xe4\x30\xc6\x38\x0a\x79\xb5\x63\xe2\xb8\x0e\xf8\x36\xa7\x94\x48\xec\x50\x45\x0b\x39\xd1\x9c\x1a\x0a\x0f\xca\x86\x86\x25\x43\x09\x25\x7d\x09\xef\xf8\x7b\xc2\xca\xc1\x0a\x9c\xb9\xb0\x31\x2b\x73\xcc\xef\x49\xc0\xa9\x3d\x75\x70\xc7\xe6\x3b\xea\xce\xca\xad\xe3\xf3\x72\x89\xc2\xd6\xe0\x49\xea\xdc\xe1\x79\xeb\xe4\xf4\x31\xd1\xf4\x40\xf5\x0d\xc2\x6a\xb8\x8d\x1d\x1f\xdf\x4a\x7a\xed\xf8\x55\x82\x5a\xf1\x60\x88\xd9\x48\x96\x89\x63\x7c\xc8\x5b\x65\x27\xa6\x59\x35\x5c\xf0\x20\xbe\x1d\x55\xb0\x97\xc9\x5c\x17\x1e\x69\xdf\xb6\xaf\x99\xd9\xc8\x6e\xbd\x50\xcd\xcc\x76\x25\x27\xd5\x41\xe0\x16\x10\x5c\x03\x29\x7b\x9e\xb6\x3b\x9e\xb0\xe7\x2a\xf1\x58\x36\x75\xae\xdb\x1d\xde\x53\xab\x95\xb8\xe7\x11\xfa\xac\xcf\x3f\x68\x9d\xa8\xe5\xd3\x58\x5d\x6d\x7e\x2a\xa1\x5c\x5d\x6c\xb5\xa8\xaa\xab\x9a\xd6\xc6\xc9\x97\x0a\xbe\xd1\x34\x07\x51\x4e\x14\xd1\x84\xf7\x35\xd0\x20\x50\xf5\x00\xda\x80\xc5\x07\xf3\x39\x94\xe5\xc7\xcb\x9b\x5d\xb5\x8f\x8d\x39\x4c\xf5\x66\x27\xe4\x86\x60\x4e\x80\xb1\xf8\x79\xfd\x9c\x1a\xd1\x50\x5e\x35\x36\xba\x22\x19\xa4\x25\x83\x8d\x16\x1b\xc2\x84\x82\x8f\x4d\x3c\x6d\x06\x95\xc6\x52\x7f\x74\x0c\x3a\xa6\x3e\x52\xf1\x65\x80\xa5\xde\x02\xfe\xad\xc5\x16\x87\x8b\x5d\x74\x8a\x25\x1e\xc9\x73\x46\x13\xa9\x76\x68\xb0\x74\x20\x70\x39\x28\x7a\x31\x68\xaa\x66\x6e\xbc\x34\x28\x5c\x61\x1e\xab\x31\xaf\x46\xeb\x3d\x1e\x54\x07\x2d\xaa\x0b\x9a\xaa\x08\x8a\x17\x70\xcf\xab\x65\x89\x42\x49\x57\x2d\xda\x46\x94\x1e\xf4\xd4\x8b\x30\x2c\x6a\x09\x94\xdd\x8c\x55\xea\x2d\xe3\xcf\xc0\xc8\x7b\x3b\x49\x81\xa7\xec\x06\xb5\x51\xdf\x42\x8e\x46\x6e\x46\x2d\xe3\xa8\x0d\x05\x17\xf2\xd0\xd8\xd4\xed\xd9\xf0\xb4\xd0\x01\xb3\x72\x16\x3f\x2b\xad\x58\x94\xba\x28\x07\xbb\x21\x2b\xcc\xd8\x11\x72\xfc\xfe\x6e\xc9\x5d\x16\x3f\xa4\x25\xbb\x75\xf8\x68\xcc\x78\x09\x3b\xef\xc5\x86\x97\x30\xf0\xde\x0d\x38\xca\xcc\x4a\xeb\x75\x9b\x47\xf1\xa4\x70\x51\x66\xa5\x65\xd9\x06\xa1\x53\x9b\x43\x06\x64\x2c\xda\x18\x3a\xc9\x3e\xcf\x70\x57\xa7\x6b\xd4\x27\xdd\xc5\x59\xb3\x8d\xd2\xbd\x7f\x94\x5c\x64\x80\xae\xe0\x06\xed\x28\xb0\x14\x51\x85\x8e\x19\x48\xb0\xca\x90\x62\x8d\xd1\x91\x32\x66\x92\x71\x85\x0f\x76\x9f\xfb\x0c\x5d\x64\x54\xa1\xbc\x54\xda\x3c\xf6\x66\x5e\x80\x74\x14\xce\x7e\xe4\xe8\xcf\x42\x22\xb8\xc6\x79\xc1\xe0\x2e\xa2\x3b\x4b\xfe\x8f\xe8\xd3\xaa\xf4\x4c\x7d\x6a\xa8\x73\x5f\xb9\xda\x52\x3e\xc7\x42\x77\x40\xca\x2d\x1b\x67\x75\xe7\x91\x0d\x96\x35\x85\x0f\x01\x69\x38\xef\x20\x5d\x11\x84\xdf\x0c\xa0\x0a\x11\x91\x17\x82\x03\x1f\xd9\xd5\x5a\xb3\xc5\x13\x60\xc0\x7a\x07\xbf\xe8\x37\xb5\x3c\xea\xf3\x12\x60\x40\x34\x3a\x66\x94\x64\x0d\x53\xe6\x8d\x04\x9e\x1a\x3f\xeb\x44\xbb\x93\xf6\xfc\x24\x3d\x43\xe7\x1a\x11\xcc\xb9\xb0\x0b\x86\x39\x82\x6b\xaa\xb4\xad\xec\xb4\x02\x5f\x72\xda\x1d\xbe\x5a\x5f\x4d\xad\xf3\x38\xbe\x4b\xa4\x32\x71\x7c\xc6\x7f\x18\x7e\x7d\x69\x32\x2d\xed\x4b\xeb\x7c\x67\x9d\xc2\xdd\xbe\xfa\xb8\x1a\xdb\x4a\x12\x44\x70\xee\x3e\x20\x82\xc4\x01\xa4\xfd\xec\x53\x74\xf7\xac\x9f\xea\x0e\x59\xff\xc1\xe8\xec\x33\xfe\x24\xa5\x23\x45\x20\xb3\xf9\x77\xc6\xde\x9a\x80\x33\x09\x3b\x0d\xbf\x64\x6e\x5f\xd3\x4f\x06\x52\xaa\xfb\x85\xc2\x83\x49\xf4\x3d\x65\x67\x0e\x86\x42\xf0\xba\xcf\x09\x98\x6f\xf4\x8c\x64\x98\xef\x07\x27\x29\x73\x79\x94\xe1\xe2\xa9\x93\x29\xc8\x16\x50\x35\x84\xb1\x9c\x0c\x1f\x00\x61\x27\xfa\xb8\x79\xe7\x94\x3f\x05\xbe\x5f\x51\x7a\x34\x9e\xef\xce\xaa\x3a\xca\xf1\xf5\x6f\x37\x78\x53\xfb\xb0\xd0\xb7\xcd\xa8\x18\xb3\xc5\x7e\x99\x60\x29\xc8\x13\xf8\xce\x16\x35\xa4\xe1\x5a\xbb\x9a\xfb\xb6\x53\xf0\x9f\x46\xa3\xaa\x09\x79\x90\x17\xc3\xdd\xf2\x59\xcc\xc7\x00\x59\x03\x36\x62\x9f\xdf\x0b\x4f\xe1\xdb\x0e\x28\xab\x54\xb5\x89\x94\x75\x34\xb2\xbc\xdf\x45\x5b\xd8\x89\xaa\x4c\xc6\x96\xac\x60\xeb\xe7\xce\xd0\x5f\xf0\xc1\x78\x78\x8c\xd2\x21\x45\xe3\x04\x25\x4d\x1d\xdd\xbe\xc0\xe2\x73\x55\x05\x30\x46\x32\x20\x23\x05\x7e\xf3\xac\xd2\x22\x08\x05\xda\x06\x21\xcb\x12\x70\x9b\x34\xd8\x21\x90\x1d\xa3\x0e\x63\x16\x55\xac\x74\x23\x79\xc9\x34\x2d\x4e\xe2\xea\x9c\x1b\xa9\x08\xfa\x34\xb2\xfa\xb4\x1e\x4e\x53\x87\x55\x9a\xb5\x31\x40\xe8\x22\xab\x1b\xb6\x35\x10\x2b\x13\x85\x6d\x28\x45\xfe\xb6\xce\xe3\xe7\xe7\xf6\x8a\x0a\xe6\xe8\xd7\x5f\xfe\xf9\x38\x4d\xd1\x63\x2e\x74\x06\xf2\xd7\x5f\xfe\x85\xb6\xa5\xd6\x82\xd7\xda\xe0\xbf\x2e\xd8\x11\x10\xc2\x8c\x89\xa3\x11\xa7\x0d\x78\x12\xea\xbb\x7c\x0d\xc6\x74\x2d\x55\x08\xd1\xac\x8c\x86\x06\x99\x2d\xc5\xf6\xe3\x47\x21\xd5\x37\xaf\x02\x89\xaa\x4f\xdc\xc7\x53\x9f\x89\xdd\x80\xf0\xea\x5e\x64\xa0\x00\x61\xd9\x32\x34\xd5\xf2\x1b\x26\x02\x5b\xcc\x05\xa9\x93\x79\xb5\xc4\xe1\x04\x6b\xec\x6b\x41\xd3\x1b\x0a\xbe\xd5\xac\xbb\x83\x78\x0b\xf1\x0f\xd8\x24\x83\x60\xd6\xfc\x7c\xf0\xab\x83\x8e\x97\x25\x37\xe0\x22\x0d\xe3\x57\xec\x9c\x34\x4e\x31\x44\xf0\xf9\xcc\xdb\x71\x81\x9c\xfd\xad\x8a\x5e\x99\x9c\x95\xb0\xf7\x94\xf5\x89\xf1\xf2\x08\xa3\xef\x5e\x3e\xfb\x1e\x3d\xb6\x3e\x44\x0b\x13\x00\x2c\xce\x57\x99\x28\x59\x6a\x54\xd6\x45\x7d\xa3\xb3\x6d\x77\x23\x76\x55\x79\x83\xbd\x2b\x68\x73\x9d\x14\xb5\x16\x31\xc2\x42\xf4\x78\x31\x3c\xe7\x61\xa1\xda\x29\xa6\x5c\x4a\xe6\xb8\xc6\x2e\x35\x55\xa2\x94\x04\x8c\x0b\x6d\x09\xc3\xcd\xdb\x67\xa9\xde\x3d\x57\xa9\x53\x21\x8a\x92\x61\x6d\xa0\xde\x4b\x97\x45\x31\xaa\xb4\xa3\x09\xd7\x06\xe1\x60\xe6\x68\x05\x77\x09\x3d\x77\xf1\xb2\xba\x99\x02\x9b\xbf\x97\x12\xdb\xe1\xb8\x63\xfe\xbd\xbb\xf3\xef\x00\x00\x00\xff\xff\x72\x8a\xb4\x6f\x5e\x5b\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas"].(os.FileInfo),
	}
	fs["/schemas"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas/manifest.json"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
