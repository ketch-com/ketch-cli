// Code generated by vfsgen; DO NOT EDIT.

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets statically implements the virtual filesystem provided to vfsgen.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2020, 12, 17, 3, 11, 48, 312988850, time.UTC),
		},
		"/schemas": &vfsgen۰DirInfo{
			name:    "schemas",
			modTime: time.Date(2020, 12, 17, 22, 38, 14, 311181149, time.UTC),
		},
		"/schemas/manifest.json": &vfsgen۰CompressedFileInfo{
			name:             "manifest.json",
			modTime:          time.Date(2020, 12, 17, 22, 38, 14, 311118411, time.UTC),
			uncompressedSize: 23617,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xec\x5c\xdd\x8e\x24\x35\x96\xbe\xaf\xa7\xb0\x42\x48\xc0\x6e\x75\x35\xa0\x85\x15\x2d\xed\x45\xaf\x60\x34\x8d\x7a\x00\x35\xcd\x70\xd1\xd4\x84\x9c\xe1\x13\x19\xee\x74\xd8\x81\xed\xc8\xac\x1c\x54\x12\x0f\x32\xf3\x72\x3c\xc9\xc8\x3f\x11\x19\x3f\x76\xfc\x64\x65\x41\x0b\x71\x81\xe8\x0a\xdb\xc7\xc7\x9f\xcf\xaf\x7d\x9c\x3f\x5f\x21\x94\xbc\xa7\xb2\x02\x4a\x9c\x3c\x43\x49\xa1\x75\xf5\xec\xe9\xd3\xb7\x4a\xf0\x27\xee\xeb\x8d\x90\xdb\xa7\x44\xe2\x5c\x3f\xf9\xe8\x7f\x9f\xfa\x9e\xd7\x66\x98\x3e\x56\x60\xc6\x88\xcd\x5b\xc8\xb4\xff\x46\x35\xb3\x1f\xff\x86\xe5\x0e\x74\xc5\x70\x06\x08\x57\x15\xea\x0e\x94\xf0\x53\x4d\x25\x90\xe4\x19\x7a\x73\x85\x10\x42\x09\xc7\x25\xd8\x36\x84\x92\x3d\x48\x45\x05\x4f\xae\x10\xba\xb5\xdd\x09\x54\xc0\x09\xf0\x8c\x82\x4a\x9e\xa1\x9f\x5d\x37\x43\x04\x94\x4e\x6b\x05\x32\xc5\xb5\x2e\x0c\xb5\xa4\xfd\x2b\xcd\x30\x63\x1b\x9c\xed\xd2\x5a\xb2\xe4\xf6\x0a\xa1\x7b\x4b\x0c\x13\x42\x35\x15\x1c\xb3\x6f\xa5\xa8\x40\x6a\x47\x34\xc7\x4c\x81\xed\x50\x75\x3f\xfb\xb9\x28\x69\xff\xdd\x59\xb7\xd2\x92\xf2\xad\x67\xbb\xbb\xf6\xe7\x55\x85\x5e\x7c\x71\x6a\x20\x90\xe3\x9a\x69\xd3\x94\xd8\x6f\xf7\xd7\x9d\x65\xaf\xa5\x6c\x07\xf5\xc8\x34\x88\xad\xa5\xa4\xa0\xc4\x5c\xd3\x0c\x35\x04\xda\x6e\x15\xd6\x1a\xa4\xa1\x98\xfc\xe3\x83\x37\x1f\x3d\xf9\xfc\xf6\xbf\x3f\xfc\xf1\xc7\x9b\xc0\x3f\xdf\xeb\xb3\x52\x49\x5a\x62\x79\x4c\x33\xac\x61\x2b\xe4\x31\xc0\xd3\x9b\x96\x29\x94\xf0\x9a\xb1\xe4\x76\xcc\x5d\x57\x7a\x0c\xa7\x9e\x2c\x6a\xc9\xb6\x43\x80\xd7\x65\x2b\x47\x0d\x0b\x7b\x9c\x9d\xba\x98\x4d\x57\x0a\x74\xe2\xff\xbe\xed\x31\xac\x20\x13\x9c\x3c\x02\xcb\x2d\xe1\x47\x60\x5a\xd6\xac\x23\x9e\x5d\x3e\x1b\x5d\x8c\xf3\x69\x78\x73\xe3\xdb\xb6\x39\x9d\xf0\x1c\x8e\xf4\xc2\x09\x1f\x85\x43\xef\x4b\x5c\xfa\xfa\x8c\x18\x26\x10\xdc\x55\x12\x94\xa2\x7c\x8b\x0e\x05\x70\xa4\x0b\x67\x2e\xa8\x42\x7b\xaa\xe8\x86\x41\x7f\xf4\x48\x95\x3a\xb0\x38\x55\xe5\x4a\x63\xc6\x1e\xce\x91\xe0\x7d\x8e\x32\xcc\xd1\x06\x90\xa7\x0f\x64\x09\x5f\x57\xdd\xff\x37\x9b\x97\xe1\x0a\x6f\x28\xa3\x03\x28\x5b\x16\xb1\x94\xf8\x18\xd1\xd8\xde\xd8\xb6\x0b\xd5\x50\x0e\x76\x25\xba\xde\x08\xbd\x9e\xe4\x8d\xc4\xd3\x6c\x3f\xc8\x92\xea\xd4\x48\x01\xde\x62\xdd\xb5\x16\xdd\x76\xca\xb7\xa0\xc6\xad\x92\x6e\x0b\xad\xe2\xa3\x7d\xfb\x69\x74\xdb\x78\x1b\xc4\x50\xd5\x55\x25\xa4\x06\x92\x32\xcc\xb7\x35\xde\x46\xd4\xc1\x63\x39\xad\x0d\x2d\x31\x74\x22\x76\x1e\xb6\x21\xe0\x60\x76\x31\x55\x2d\x2b\xa1\x1e\xb2\x82\x96\xc2\x05\xd9\x56\x0a\xb8\xa6\x98\xa5\x0a\xe4\x9e\x66\x1d\xe2\x8d\x39\x20\x29\xf0\x02\xf3\x0c\x4a\xe0\xba\xdf\x8a\x39\x66\x47\x4d\xb3\xc1\xa0\x0d\x14\x78\x4f\x85\xc4\x2c\xc5\x64\x6f\xac\x89\x1a\x69\x63\x05\x52\x19\x53\x44\xff\x19\x90\x13\x0d\x0c\xd2\x72\xa7\x07\x63\x54\xa9\x02\x5f\xa1\xc4\x94\x05\xbe\x47\x3e\x13\xac\x71\xba\x91\x62\x67\x58\x9a\xd9\x32\x27\xaf\xe7\x6f\x98\x1f\x7f\xb9\xed\x22\xc0\x40\x0f\x6c\x25\xce\x32\x50\x83\x1d\xc8\x84\x94\x90\x05\xd4\x57\x48\xdd\x58\x82\x99\xb5\x53\x62\x04\x43\x1f\x53\x55\xe1\xec\x21\x52\xdb\x10\x42\x9e\xd0\x12\x34\x3a\xb1\xe6\x3c\xc9\x6e\x37\xc1\xe1\x9b\x7c\x80\x5a\xd7\x43\x84\xc2\xd2\x1e\x6e\xa4\x8f\xee\x30\x6c\xed\x7c\xcd\x29\xd3\x20\x55\xd2\xfb\x7e\xdb\xef\x16\x73\xa7\xad\x88\x72\xbc\x05\x12\x68\xea\x60\xb1\x11\x82\x01\xe6\x23\x06\xba\xa0\xfc\x50\x80\x2e\x40\x22\x5d\x50\x35\x40\xc7\xf8\x58\x3f\x0f\x12\x12\x95\xb8\xaa\x06\x5e\x6d\x1c\x0c\xda\x90\x20\x19\x74\xb9\xbf\x0e\xa2\x35\xc9\x7b\xc0\x0f\xcf\xef\x27\xb2\x74\x67\x67\x1f\x44\xd5\x17\x9b\xfd\x14\x78\x4f\xcd\x4e\x40\x65\x92\x56\xba\x1f\x90\x5f\x8c\x89\x2e\xf9\xc0\xd0\x60\x1c\x12\x63\xb5\x11\xd4\x49\x36\xfb\xe1\xc8\x42\x2e\x1b\xca\x81\x61\x63\xe5\x0e\x4c\x3a\x52\xf3\xe0\xbc\x7e\x9a\x70\xb7\x09\x6d\xee\x4e\x76\x1d\x6e\xcb\x85\x2c\xb1\x4e\x02\x8d\xb7\xc1\xd9\x96\x84\xd0\xcb\xf5\xbf\x8f\x46\xb8\x75\x89\x24\x2d\xde\x29\x34\x81\x45\xd8\xe3\x0c\x7b\x18\xa7\x1a\x25\x60\x4d\x02\xd7\x52\x30\x06\x32\xcd\x6a\xa5\x45\x09\x32\xa5\x64\x6a\x04\xe6\x44\x0a\x4a\xba\x91\xc2\xc2\x11\xd3\xbd\x72\x2a\x61\x05\x51\x2a\xd4\xca\xde\x7b\xe0\x44\xcc\xad\xae\xa4\x99\x14\x4a\xe4\x7a\x05\xf1\xd3\x98\xaa\xde\x30\xaa\x8a\x59\x0c\xa5\xd8\xd5\xeb\x3a\x2f\xe7\xa6\xe6\xf4\xa7\x1a\x4c\xc4\x74\x50\x11\x25\xec\x44\x6d\x55\x21\x38\x24\x91\x3e\xb7\xc1\xef\xf7\xd3\xba\xf9\xdb\x28\x86\x9f\xec\x01\xaa\x21\xf1\x61\x0a\x1c\x55\xe0\x8f\x67\xda\x3f\xf9\xf4\xb3\x99\x1e\x9f\x7e\xfc\xc9\x4a\x6c\xaf\x96\x7c\x1b\x7e\xe9\xff\xdd\xfd\xab\xb7\x57\x8f\x14\x57\x05\x6d\x54\xb2\xc7\x92\xe2\x0d\x83\x3f\x62\xb8\xa5\x65\xfd\x67\xb4\xf5\x47\x89\xb6\xa2\xde\xfc\x81\x3c\x4e\x7b\xf0\x29\x03\x35\xe1\xb5\xd7\xf8\xeb\x35\x9e\x7a\xce\x47\x2f\xf6\xce\x4b\xfd\xf2\x02\x8f\xbc\xce\x17\xaf\xf1\xc2\x0b\xfd\xef\x62\xcf\xbb\xc4\xe7\x4e\x79\xdb\xdb\xf9\x94\x20\xee\x5b\x2f\x23\xa6\x51\x7f\xda\x55\xa6\xb0\xcb\x9c\x14\xe5\x98\x97\x8d\xfb\xd7\x29\xcf\x1a\xf5\xa9\xf3\x08\xb6\xfe\x68\x12\xc3\x68\x82\x73\xc2\xf0\xef\x9e\x10\x22\x90\x53\x4e\x63\x36\x68\x26\xcf\x49\x98\xc8\x70\x64\x6c\x63\xbd\xaf\x16\xe4\x38\x2b\x33\x9c\xf9\xfc\x26\xee\x38\x96\x87\x70\x27\xb0\xbe\xc6\x25\x20\x91\xdb\xd3\xfa\x70\x44\x30\x11\x53\x9e\x30\xba\x14\x3b\x2f\x3d\xc1\x11\x4b\x91\x81\x33\x51\x64\x72\xa0\x9c\x88\x78\x18\x99\x64\x42\xec\xe8\x44\x02\x47\xb0\xc6\x2f\xf1\x11\x64\x38\x4a\xbc\x5d\x8c\xd4\xdb\x83\x9e\x05\x29\x7e\x0b\x15\x83\xeb\xab\x1f\x5e\x23\x02\x1a\x53\xa6\x62\x08\xcd\xa6\xf3\x73\xa2\x6e\x7b\xec\xe0\x18\x41\x20\x32\xed\xda\xbc\x7e\x59\x66\xbf\x44\xe4\xd6\x24\x32\x5d\x2c\x1b\xc2\x48\x0b\x94\x53\x4e\x7a\xf2\x87\x0e\x54\x17\xd4\x5d\x6a\x7d\xf5\xc3\xeb\x29\x82\xb3\x89\x0d\x42\x49\x01\x98\x4c\xa6\x7e\x46\x34\x19\xa6\xa5\x4a\xa2\x5d\x6e\x23\x2d\xf7\x93\x9b\x78\x69\xd4\x76\x70\x1c\xea\xea\x10\xab\x18\x9f\xbf\x4d\x7e\x35\x77\x21\x56\x08\xa9\xd3\x70\x34\x3c\x5f\x0c\x60\x47\x77\x83\x5d\xa4\x0b\xac\x91\x49\x51\xb0\x54\x88\x72\xa4\x00\xcb\xac\x40\x12\x54\xcd\xb4\x42\x98\x13\xb4\xc5\x26\x3a\xec\x5d\x44\x46\x0b\x1d\x9c\x72\x03\x39\x9b\xc3\x86\x40\x9c\x49\x71\xba\xaa\xf5\xa6\x04\xa9\x4c\x02\xf0\x05\xec\xd9\xcb\x4b\x7b\xe7\x9b\x72\xa1\xd7\x97\x64\x9c\xc6\x23\x33\x1e\xa9\x42\x1c\xac\x02\x1a\x8e\x6a\x05\xd2\x5d\x25\x63\xb5\xa3\x7c\x6b\x42\x20\x84\x6b\x5d\x08\x39\xbc\xe3\x5a\xc2\xe1\x43\xae\x09\x3b\x44\x1e\x78\x79\xfc\x6d\x4b\x2a\x09\xcb\x23\xe8\xba\xb2\xa5\x37\xeb\x8b\x52\x74\x5d\xa1\xef\x5f\xbd\xec\x03\x50\x88\x12\x2a\xbc\x85\xb3\x68\x36\x83\xc7\x64\xdb\xdc\xc6\x5f\x02\x9f\x45\xbe\x21\xd2\xdc\x24\x8f\xa7\xf1\xe5\x1d\x69\x25\x18\xcd\x8e\x67\x4d\xe2\x49\x20\x47\x62\x3c\x85\xd2\x58\xd7\xea\x3c\xc8\xed\xd0\x31\x49\x2d\xce\xa3\xa7\x41\x96\xca\x98\x53\x7f\x75\x3c\xa6\x4c\x44\x76\x16\x65\x22\xb2\xba\x04\xae\x9d\x87\x1b\x91\x65\x62\x2b\xce\x2c\x8b\x19\x96\xef\x58\x52\x6d\xb7\x60\xf4\x91\x30\xca\x77\x6d\x81\xce\xba\x6a\x9a\xa6\xa6\x4d\xbf\x3a\x51\xee\x68\xe0\x81\x12\x5f\xd0\x56\x00\xdd\x16\xba\x1b\x42\x35\x9f\x4c\xab\xeb\xd7\xba\x84\xd9\x62\x9d\x66\xb9\xeb\x6b\x63\x0c\x1e\xc8\xfd\xb5\xae\x20\xc7\x82\x74\xce\x8c\x39\x65\xd0\x4f\x4f\xba\x64\x1b\x84\x82\x74\x29\xd7\xb0\x1d\x04\x26\x83\xa5\xb8\xf1\x91\xa5\x7c\x14\x9c\xb2\xc5\xfd\xdc\x39\x3d\x81\xf9\x49\xc3\x65\x22\x12\xf6\x14\x0e\x67\xda\xff\x71\x45\x9d\xa7\xf6\xc0\x5b\xf7\x17\x25\xde\xf6\x2e\xda\x23\x81\x7a\x4f\x59\x7a\xf1\xf6\xc2\x18\x7b\x46\x65\x66\x94\x66\x4a\x6d\xfa\xbb\x1c\x0d\xdf\x83\xca\x33\x17\x6d\x0e\x80\x0a\x68\x50\xfc\x18\xb1\x17\x01\x87\xf4\x68\xed\xe4\x63\x8d\x1a\x4e\x12\xd2\xaa\x19\x19\x1f\x4f\x33\x56\xad\x88\x9c\x0f\x67\x0f\x2a\xd8\xea\xe9\x03\x5a\x16\x9f\x7f\xae\x56\x4f\x70\x8d\xb3\x87\x54\xfa\xb4\x14\xce\xd3\xb3\x98\x36\x8d\x4e\x7b\xfd\x59\xee\x43\x14\x6c\x42\xf2\x43\x47\xd7\x4b\x65\xaf\x83\x42\xe8\x90\x3a\x96\x68\x26\x1a\xb2\x82\xd3\x0c\x8f\x0f\xa8\x93\xd2\x1a\xb3\x50\x6e\x97\xe4\x94\x63\x9e\x05\xee\x89\x14\x64\xb5\xec\x95\x37\x0d\xb3\xcf\xfb\x00\x9e\x97\x58\x74\xe8\x94\xfd\x74\xd0\x3a\xdc\xb8\x79\xa1\x84\xbb\x8a\x4a\x70\x85\xef\x5a\xec\x20\x98\x12\x8c\xae\xab\x4e\xbc\x7d\x69\xc7\xbb\xbc\xc4\x8f\x0f\x24\x20\x56\x3a\xfa\x45\x6f\x90\x4b\x50\x45\x6a\xd4\x50\xee\xf1\xfa\xe8\xcd\x13\x40\x2d\x81\x50\xbd\xf9\x07\x6f\x3e\x7e\xf2\xf9\xad\xad\x2e\xff\xaf\x0f\x8b\x05\xa9\x51\xe8\x21\xc0\x0a\x34\x5e\xb9\xe1\x0e\x0e\x3b\x7c\x11\x18\x91\x87\x06\x0b\x20\x39\xed\x7c\x2d\x69\x04\xa9\x6f\x9e\xd7\xba\x40\x0d\x65\x1b\xe8\x2e\x01\x82\x50\x09\x99\x4e\x05\x4f\xeb\x8a\xe0\x70\x22\x3b\x85\x84\x1b\x6f\x52\x69\x3f\x7e\x11\x14\x07\xd8\x14\x42\xec\x1e\x50\x8f\xde\x50\x98\x89\xb7\x0d\xc0\x1d\x7b\xa5\x20\x93\xd0\xb3\x96\xb0\x07\xae\xd5\x99\x21\x79\x2c\x66\xee\x6f\xeb\x6c\xfc\x1a\xde\xde\xc1\x35\xb1\x5b\x2f\xfa\xfe\xd5\x8b\x70\x74\xeb\x97\x76\x4e\xd8\xfc\xff\x58\xc1\x67\xff\xf3\x04\x78\x26\x08\x90\x06\x5a\xe4\x28\x1a\x29\x27\x48\x0b\xa4\xe8\x96\x23\x0f\xd7\xa0\x40\x94\x6b\xe0\xfa\x4b\x33\xdc\x4c\x62\x24\xc6\x52\x5c\x19\xf6\xf7\x0f\x38\xce\x59\x48\x03\x52\x8f\x12\x72\x47\x8e\xed\x3a\x4c\x23\x70\x4d\x33\xac\xa1\x39\x70\x19\x4a\xd3\x32\x86\x3d\x18\x61\x4e\xa3\xce\x3e\xcc\x72\x08\xd8\x70\xdd\xdb\x8c\x3f\x89\xf9\xc6\x2a\xe8\xfb\x6c\x55\xf1\x0b\xbe\xf7\x27\xc0\x37\x99\x04\xac\x03\x45\x06\xa3\x8e\x79\xcd\x72\x3a\x7a\xd4\xe0\xf6\xb1\xaa\x6e\xc2\x6f\x1e\xda\x66\x6f\xd6\xc3\x8d\x35\x9f\x18\xed\x1e\x0d\xc4\xf9\xf4\xed\xae\xb8\x99\x4c\x78\xee\x19\x8f\x79\x10\x72\x97\x33\x71\x38\x2f\x8c\x3b\xdd\xbf\x21\x91\xa3\x86\x16\x72\xa6\xed\xd2\x81\xdd\xa8\x20\x66\x5c\x0c\x93\xd0\x6c\x58\xbe\x9d\xf3\x47\x8a\xfc\x82\xb5\x25\x4b\x83\xa0\xa2\x2e\x31\x7f\x22\x01\x13\x7b\x9e\xee\x2e\x84\x73\xea\x6e\x81\xad\xaa\x7a\x5c\xa2\x41\x58\xf0\x8e\x70\xe9\xf4\xbc\x73\x27\xf8\x3c\xd3\x74\x4f\xf5\x11\x61\x35\x3e\x9d\x8d\xcf\x6f\x91\x3e\x77\xfe\x26\xdd\x6a\x78\x30\xc4\xac\xed\x2d\xc4\x21\x3e\xe5\x83\x62\x6d\xd3\xad\x99\x2e\x78\xc5\xdc\xb5\x83\xd8\x63\xb2\xd4\xe8\x44\xfa\x77\xf5\x6b\x61\x6c\x9d\x9f\x0f\xaa\x59\x59\x5e\xf3\xac\xb9\xe2\xda\x00\x82\x3b\xc8\xea\x81\x7d\xe8\xcf\x27\xec\x7d\x41\xdc\xfa\xce\xdd\x58\xf6\xa7\xf7\xd4\x5a\x21\x1e\x58\x84\x21\xeb\xcb\xaf\x10\x67\xaa\xd4\x34\x56\xbb\xf4\xa7\x1a\xea\xb3\xcb\x88\x56\xd5\x2b\x35\xcb\x4a\x1d\xbe\x54\xf0\x54\xd3\x12\x44\x3d\x53\x1e\x12\xce\xd2\x07\xb1\x11\xe5\x7a\x10\x52\x4c\xe6\xe9\x33\x1c\xca\xfa\xdd\xe5\xcd\xee\xda\xbb\xc6\x1c\xa6\x3a\xcd\x85\x4c\x33\x93\x2b\x33\x86\xe7\xeb\xe7\x26\xaa\x1f\x43\xb9\xc1\xd4\xec\x2a\x2b\x80\xd4\x0c\x52\x2d\xd2\x8c\x09\x05\xef\x1a\x3c\x5d\x06\x95\xc6\x52\xbf\x73\x0c\x3a\xa6\xde\x51\xf8\x0a\xc0\x52\x6f\x00\xff\xde\xb0\x2d\x2b\x56\x4e\x2a\x2c\x71\x39\xe5\x1b\x26\x42\xff\xae\x6b\xb0\x74\x20\xf0\xec\x25\xfa\xe4\x65\xae\x1a\x6c\xba\xe8\x25\x5c\x3b\x1d\xab\x9e\x6e\x66\xbb\x9a\xa9\x7b\x59\x55\xf1\x32\x57\xeb\x12\x2f\x4d\x5e\x56\xa5\x11\x0d\x25\x5d\x1d\x64\x37\xa2\xf4\x41\x4f\xbb\x09\xe3\x72\x8d\xfb\x18\x54\x97\xe0\xcf\x84\x91\x4f\x72\x49\x81\x13\x76\x44\xdd\xa8\x6f\x25\x47\x13\x6f\x7e\xd6\x71\xd4\x0d\x05\x57\xf2\x70\xd2\xa9\x87\xb3\xe1\x69\xa1\x3d\x66\xf5\x22\x7e\xce\xd4\x62\x51\xeb\xaa\xd6\x17\x50\x63\x47\xc8\xf1\xfb\xa7\x26\xff\x7e\x9a\xec\xf6\xe1\x9d\x51\xe3\x35\xec\x3c\x8a\x0e\xaf\x61\xe0\xd1\x15\x38\xca\xcc\x99\xda\x9b\x09\x9e\xd3\x6d\x3c\x29\x5c\x95\x59\x69\x59\xc3\x8a\xc3\x21\x13\x64\xac\x3a\x18\xba\xc8\x39\xcf\x0e\x8e\xc9\x38\xef\x7f\x9c\x43\x9c\x50\xc1\xe4\x4c\xbe\xdd\xaf\xd3\x4b\x5e\x17\x80\x76\x70\x44\x39\x05\x46\x10\x55\xe8\x50\x80\x04\x2b\x0a\x04\x6b\x8c\x0e\x94\x31\x93\x8a\x2b\xbc\xb7\xe7\xb2\x37\xe8\x75\x41\x15\x2a\x6b\xa5\xcd\x67\xaf\xe4\x15\x48\x47\xe1\xe6\x47\x8e\xfe\x22\x24\x82\x3b\x5c\x56\x0c\xae\x11\xcd\x2d\xf9\xff\x43\xef\x37\xb5\x54\xea\x7d\x43\x9d\xfb\x8a\xcc\x8e\xe8\x39\x16\xfa\x13\x52\x6e\xd9\xb8\x69\x07\x4f\x5c\xa3\xe3\x0d\xb0\x0b\xa0\xe1\x6c\x83\x74\x17\xfa\xfe\x28\x80\x2a\x94\x89\xb2\x12\x1c\xb8\xbe\xec\x01\x4f\x80\x01\x6b\x1b\xfc\x9e\x1f\x5b\x3c\xda\xf3\x7d\x60\x90\x69\x74\x28\x68\x56\x9c\x98\x32\x2d\x12\x38\x31\x56\xd6\x41\x9b\x4b\x7b\xde\x4f\x6e\xd0\x0b\x8d\x32\xcc\xb9\xb0\x1b\x86\x39\x82\x3b\xaa\xb4\x2d\x57\xb4\x80\xaf\xb9\xb9\x75\x93\x07\x1e\xf0\xc1\x9d\x4e\x2d\xb9\xa5\x07\x45\x32\x5c\xea\x31\x9b\x97\x0e\x01\x7b\x91\x5b\xab\x70\x1d\x90\xa0\x66\x0a\x83\x4d\x81\xf7\x80\xb0\x93\xb7\xf8\x06\x96\x94\xbf\x04\xbe\x3d\xa3\x50\x62\x3a\x9f\x59\x54\x23\x51\xe2\xbb\xdf\x6f\xf2\xd3\x35\xed\x4a\xe9\x5d\x50\xdf\xd2\x11\x8e\xb3\x8f\xe9\x06\xbb\x7e\xb2\x88\x48\x02\xc3\xda\x6d\xb2\x99\xc8\xc9\x80\x7a\xb4\xa3\x3a\x5b\x67\x55\x08\x46\x40\x9e\x7f\x56\x37\x52\xf9\x0e\x55\xb7\x0a\x5b\x00\x6d\x05\xd9\x55\x41\x37\xbf\x58\x45\xd5\xc9\x52\x43\x59\xe9\xe3\x83\x0f\x03\xa7\x22\x8a\xf9\x5f\x49\x8b\x2f\xeb\x8b\x5e\x74\xd1\xe8\xe4\xc9\xe8\xb7\x86\xd5\xae\xe7\x1a\x6d\x20\x17\x4d\xed\x82\x2d\x23\xc0\xf6\x24\xf8\x06\xfd\x15\xef\x8d\xb1\xc2\x88\x8c\x29\x8a\x3d\x48\x49\x89\xa3\x3b\x04\x71\x7e\xed\xaa\x02\xc6\xb2\x02\xb2\xdd\x03\x8e\xc8\x06\x9b\x49\x15\x52\xa0\xad\x7d\xb5\x2c\x02\xb7\xd1\xb0\x9d\x0a\xd9\xb9\x5a\x0b\x6d\x1d\xe6\xf4\x06\x0e\x22\x9e\x35\x91\x97\xb7\xd5\x8f\xab\x72\xde\x1b\x11\x29\x2a\x22\x0e\xfc\x8f\xa7\x77\x5e\x2c\x31\xf7\x97\x03\xc8\xee\xaf\x59\x74\xf8\x8d\xf7\x9f\xba\xb7\x50\xf7\xca\x9a\x69\x5a\xcd\xbd\xa6\x5c\xae\x79\x6d\x20\xd0\x10\xf6\x89\x7e\xf3\xf3\x7e\x98\x10\x17\x4f\x9e\x16\x6e\x82\xd5\xd7\x45\xdb\xb1\xbb\xed\x58\x99\x2d\xb7\x79\x02\xf2\x2f\x85\x9e\x7f\xfb\xc2\xbe\x8e\xc1\x1c\xfd\xfa\xcb\xbf\x9e\x13\x82\x9e\x73\xa1\x0b\x90\xbf\xfe\xf2\x6f\xb4\xa9\xb5\x16\xbc\x85\xda\xff\xc2\x61\x4f\xd3\x11\x66\x4c\x1c\x0c\x9c\xe6\x93\xbd\x19\xf7\x17\xcf\x27\x25\xf1\xde\x2b\x14\x75\x5e\xe0\x78\xde\x44\xd2\xe7\x3e\x5e\x9d\x7f\xf5\xd9\xfc\x0e\x57\xe4\x09\xa1\x3f\x76\x99\xff\x6d\x8f\x99\xf3\x9c\x49\x85\x56\x80\xb0\xec\x48\xba\xea\x28\xb4\xc9\x29\xbc\xe2\xba\x7d\x69\xc4\x20\xfe\xa8\x70\xea\x17\x8d\x96\x22\xb7\xe6\x9d\x63\x27\x8f\x99\x7c\x79\x37\x0a\x63\x17\x3d\x79\x3c\xf3\xd9\xe3\xf2\xa7\x8f\x1d\xde\xa6\x3b\x8d\xcd\xf5\x44\xe7\xfb\xeb\x79\xb4\x2e\x39\xdd\xd5\xda\x96\xfb\x55\xbf\x71\xf3\x56\x4d\x3e\x0d\x5d\xfc\x0b\x37\x03\xe1\xff\xd2\x98\x6d\x84\xd1\x57\xdf\x7d\xf3\x35\x7a\x6e\xed\x96\x16\xc6\xa2\xdb\xfc\x4f\x15\xa2\x66\xc4\xa8\x80\xcb\x15\x8c\x0e\x74\x4d\x9c\xc8\x9b\xa2\x17\xfb\x36\xd2\xe6\xc0\x04\x75\x36\x7d\x82\x8d\xa8\xbf\x9b\xc6\x61\x5c\x7c\x77\x49\x18\x6a\xc9\xdc\x4a\xb0\x3b\xc6\x50\xa2\x96\x19\x18\x53\xde\x01\xc8\x61\xe1\x4f\x34\xbc\x9b\x68\xd2\xec\x4a\x54\xb5\x89\x72\x10\x46\xdf\xb9\x18\x87\x51\xa5\x1d\x4d\xb8\x33\xb9\x12\x66\x8e\x56\xf0\x3c\x79\x51\xd9\xe0\x4a\x20\x1f\xed\xe1\xe9\xe0\xf4\xec\xca\xfc\x77\x7f\xf5\x9f\x00\x00\x00\xff\xff\xf1\x60\xb2\x05\x41\x5c\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas"].(os.FileInfo),
	}
	fs["/schemas"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas/manifest.json"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
