// Code generated by vfsgen; DO NOT EDIT.

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets statically implements the virtual filesystem provided to vfsgen.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2021, 1, 7, 9, 12, 56, 181885475, time.UTC),
		},
		"/schemas": &vfsgen۰DirInfo{
			name:    "schemas",
			modTime: time.Date(2021, 1, 7, 9, 12, 56, 182738810, time.UTC),
		},
		"/schemas/manifest.json": &vfsgen۰CompressedFileInfo{
			name:             "manifest.json",
			modTime:          time.Date(2021, 1, 7, 9, 12, 56, 183424354, time.UTC),
			uncompressedSize: 23386,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\xdb\x8e\x1c\xb7\xb1\xef\xfa\x0a\xa2\x61\xc0\xf6\x39\xd2\x4a\xf2\x39\x76\x60\x01\x79\x50\x6c\x05\x59\x43\xb1\x14\x69\x65\x3d\xc8\x9b\x01\xa7\xbb\x7a\x9a\x1a\x36\xd9\x26\xd9\x33\x3b\x31\x04\xf8\x43\x92\x9f\xf3\x97\x04\xbc\xf4\x9d\xec\xdb\x8e\x64\x25\xf0\x02\x82\x76\x79\xa9\x2a\x16\xeb\x4a\x16\xfb\xe7\x3b\x08\x45\x9f\xc8\x38\x83\x1c\x47\x8f\x50\x94\x29\x55\x3c\xba\x7f\xff\xad\xe4\xec\x9e\x6d\xbd\xe0\x62\x77\x3f\x11\x38\x55\xf7\x1e\xfc\xe1\xbe\x1b\x79\x57\x4f\x53\xa7\x02\xf4\x1c\xbe\x7d\x0b\xb1\x72\x6d\x44\x51\xd3\xf8\x57\x2c\xf6\xa0\x0a\x8a\x63\x40\xb8\x28\x50\x7b\xa2\x80\x9f\x4a\x22\x20\x89\x1e\xa1\x37\x77\x10\x42\x28\x62\x38\x07\xd3\x87\x50\x74\x00\x21\x09\x67\xd1\x1d\x84\xae\xcd\xf0\x04\x0a\x60\x09\xb0\x98\x80\x8c\x1e\xa1\x9f\xed\x30\x0d\x04\xa4\x7a\x25\x41\x3c\x2e\x55\xa6\x61\x45\xa5\x04\xb1\xc1\xa5\xca\x36\x31\xa6\x74\x8b\xe3\xfd\xa6\x14\x34\xba\xbe\x83\xd0\x3b\x03\x0a\x27\x09\x51\x84\x33\x4c\x9f\x0b\x5e\x80\x50\x16\x64\x8a\xa9\x04\x33\xa0\x68\x37\x3b\x4c\x24\xa9\x7f\x6f\xad\x5a\x2a\x41\xd8\xce\x11\xdd\x5e\xf9\xe3\xa2\x40\x97\xdf\x36\x1d\x09\xa4\xb8\xa4\x4a\x77\x45\xa6\xed\x9d\x5b\x28\x17\xbb\x45\x80\x9f\x89\x1d\x66\xe4\x1f\x58\x2f\x60\x06\x78\xc3\xd3\xa5\x84\x9b\x49\x1d\x30\xd5\x76\x2c\x85\x24\x21\xc7\x4c\x91\x18\x55\x00\xea\x61\x05\x56\x0a\x84\x86\x18\xfd\xfd\xb3\x37\x0f\xee\x7d\x7d\xfd\xbf\x9f\xff\xf8\xe3\x85\xe7\xd7\x4f\xba\xa4\x14\x82\xe4\x58\x9c\xbe\xc1\x0a\x76\x5c\x9c\x3c\x24\xbd\xa9\x69\x42\x11\x2b\x29\x8d\xae\x87\xc4\xb5\x25\x53\x13\xea\xa0\xa2\xb8\x02\x5b\x4f\x01\x56\xe6\xb5\x8c\x56\x14\x1c\x70\xdc\x0c\xd1\x22\x25\x25\xa8\xc8\xfd\x7d\xdd\xa1\x57\x42\xcc\x59\x72\x7e\x8a\x6b\xb8\xef\x81\x66\x51\xd2\x96\xec\xb7\xe9\xac\xd4\x3c\x4c\xa7\xa6\xcd\xce\xaf\xfb\xa6\x14\xce\x51\x38\x50\x3a\x2b\x7a\x04\x8e\x9d\x96\xb0\xec\x75\x09\xd1\x44\x20\xb8\x29\x04\x48\x49\xd8\x0e\x1d\x33\x60\x48\x65\xd6\x12\x11\x89\x0e\x44\x92\x2d\x85\xee\xec\x81\x22\xb5\xd8\x62\x06\x10\x26\x15\xa6\xf4\xf6\x14\x71\xd6\xa5\x28\xc6\x0c\x6d\x01\x39\xf8\x90\xcc\xa1\xeb\x4e\xfb\xff\x6a\xf3\x62\x5c\xe0\x2d\xa1\xa4\xc7\xca\x9a\x44\x2c\x04\x3e\x05\xf4\xb5\x33\xb7\x1e\x42\x14\xe4\xbd\x5d\x09\xae\x37\x00\xaf\x23\x79\x03\xf1\xd4\xdb\x0f\x22\x27\x4a\xcb\x07\xde\x75\x8d\x5b\xab\xfb\x92\xed\x40\x0e\x3b\x05\xd9\x65\xe1\xa9\xa6\xb7\x99\x59\x77\x5d\x7b\xb9\x27\xcb\xa2\xe0\x42\x41\xf2\x14\xb3\x5d\x89\x77\x01\x3d\x70\x4c\x1c\x57\x83\x1a\x16\xa2\x35\xb0\x75\x4c\xf5\x71\x0c\x26\xd7\x52\x94\xa2\xe0\xf2\x36\x2b\xa8\x21\x9c\x91\x6c\x29\x81\x29\x82\xe9\x46\x82\x38\x90\xb8\x05\x1c\x39\x3b\x90\x6c\x80\x65\x98\xc5\x90\x03\x53\xdd\x5e\xcc\x30\x3d\x29\x12\xf7\x26\x6d\x21\xc3\x07\xc2\x05\xa6\x1b\x9c\x1c\xb4\x19\x91\x03\x35\x2c\x40\x48\x6d\x83\xfa\xce\xd3\xae\x01\x28\x6c\xf2\xbd\xea\xcd\x91\xb9\xf4\xb4\x42\x8e\x09\xf5\xb4\x07\x9a\x13\xac\xf0\x66\x2b\xf8\x5e\x93\x34\xb1\x65\x46\x58\x6f\xb1\x61\x6e\xfe\xf9\xb6\x2b\x01\x0a\xaa\x67\x24\x71\x1c\x83\xec\xed\x40\xcc\x85\x80\xd8\xa3\xb8\x5c\xa8\xca\x04\x4c\xac\x9d\x24\x5a\x30\xd4\xe9\x65\x81\xe3\xdb\x08\x6d\x05\x07\x49\x0b\x68\x0e\x33\x5a\xe1\xeb\x34\xc8\xf6\x30\xce\xe0\x59\xda\x63\x5a\xdb\x33\xf8\x22\xdd\x0e\xdb\x92\x2e\x73\x51\x2f\x12\x6e\xb5\xa6\x84\x2a\x10\x32\xea\xb4\x5f\x77\x87\x85\xdc\xa8\xeb\xcd\x31\xc3\x3b\x48\x3c\x5d\x2d\x5e\x6c\x39\xa7\x80\xd9\x80\x80\x36\x53\x5e\x67\xa0\x32\x10\x48\x65\x44\xf6\xb8\xa3\x7d\xab\xc3\x83\xb8\x40\x39\x2e\x8a\x9e\x37\xab\x48\x6d\x42\x40\x13\x0a\x44\xbd\x21\xef\x06\x1c\x30\xdc\x1a\xa5\xdd\xe3\x7f\xfb\xa4\x0f\xf7\x13\x19\xb8\x93\xd8\x7b\xb1\xf4\xd9\xb0\x37\xe1\xf6\x18\xf6\x04\x64\x2c\x48\xa1\xba\x61\xf8\xd9\x88\x68\x83\xf7\x4c\xf5\xc6\x1f\x21\x52\x2b\x41\x1d\x25\xb3\x1b\x86\xcc\xa4\xb2\x82\xec\x99\x36\x54\x6e\x0f\xd2\x81\x9a\x7b\xf1\x3a\x34\xfe\x61\x23\xda\xdc\x46\xe6\x9b\xab\x59\xc3\x45\x8e\x55\x9f\x85\x68\xa8\xc8\x6e\xfc\x9c\xd0\xb9\x33\x61\x54\xff\xbb\xdc\xf0\xf7\xce\x91\xa4\x6a\xdc\xe4\x4e\xa1\x11\x5e\xf8\x1d\x4e\x7f\x84\xf6\xa9\x41\x00\xc6\x24\x30\x25\x38\xa5\x20\x36\x71\x29\x15\xcf\x41\x6c\x88\xcf\xdc\xd4\x33\x30\x4b\x04\x27\x49\x3b\x50\x98\x39\x63\x7c\x54\x4a\x04\x2c\x00\x4a\xb8\x5c\x38\xfa\x00\x2c\xe1\x53\xab\xcb\x49\x2c\xb8\xe4\xa9\x5a\x00\xbc\x99\x53\x94\x5b\x4a\x64\x36\xc9\x43\xc1\xf7\xe5\xb2\xc1\xf3\xa9\x29\x19\xf9\xa9\x04\x1d\x30\x1d\x65\x40\x09\xdd\x48\x1d\xb4\x15\x19\x67\x03\xeb\x59\xfd\x5c\x7b\xdb\x07\x06\xcb\x81\x73\xba\xf9\x61\x14\xc3\x21\xbb\x85\x6a\x08\x7c\x1c\x63\x8e\xcc\xf0\xc3\x89\xfe\x2f\xbe\xfc\x6a\x62\xc4\x97\x0f\xbf\x58\xc8\x5b\x4f\xeb\xb0\xad\xdf\xd2\xfd\xbb\xfd\x57\x67\xaf\xde\x53\x5c\xe5\xb5\x51\xd1\x01\x0b\x82\xb7\x14\xfe\x1b\xc3\x2d\x25\xca\xdf\xa3\xad\x51\xec\xff\x41\xd1\x56\xd0\x9b\xdf\x92\xc6\x71\x0f\x3e\x66\xa0\x46\xbc\xf6\x12\x7f\xbd\xc4\x53\x4f\xf9\xe8\xd9\xde\x79\xae\x5f\x9e\xe1\x91\x97\xf9\xe2\x25\x5e\x78\xa6\xff\x9d\xed\x79\xe7\xf8\xdc\x31\x6f\xdb\xf7\x05\x9e\x94\x20\xec\x5b\xcf\x23\xa6\x41\x7f\xda\x56\x26\xbf\xcb\x1c\x15\xe5\x90\x97\x0d\xfb\xd7\x31\xcf\x1a\xf4\xa9\xd3\x1c\xac\xfd\xd1\x28\x0f\x83\x09\x4e\xc3\xc3\x1f\x1c\x20\x94\x40\x4a\x18\x09\xd9\xa0\x89\x3c\x27\xa2\x3c\x1e\x9e\xa3\xd5\xbd\x3e\x2b\xeb\xcd\x71\x16\x66\x38\xd3\xf9\x4d\xd8\x71\xa0\xd9\x21\x5c\xc3\xac\xef\x71\x0e\x88\xa7\xe6\x94\xde\x1f\x11\xd8\x1f\x6f\x4c\xd9\xf0\xe8\x5c\xe4\x3c\x75\x00\x07\x24\x05\x26\x4e\x44\x91\xd1\x91\xb0\x84\x87\xc3\xc8\x28\xe6\x7c\x4f\x46\x12\xb8\x04\x2b\xfc\x14\x9f\x40\xf8\xa3\x44\x5f\x8c\xe8\xe7\xd4\xdb\x63\x38\xf0\x9e\xbe\x7d\xea\x8f\xaf\xd8\xf5\xdd\xeb\x2b\x94\x80\xc2\x84\xfa\x8e\x0c\xd0\xac\x74\x7e\x4a\xd4\xcd\x88\x3d\x9c\x02\x1c\x08\xa0\x5d\x9a\xd7\xcf\xcb\xec\xe7\x88\x1c\x5a\x90\xc8\xb4\x79\x59\x01\x46\x8a\xa3\x94\xb0\xa4\x23\x7f\xe8\x48\x54\x46\xec\x65\xd6\x77\xaf\xaf\xc6\x00\x4e\x26\x36\x08\x45\x19\xe0\x64\x34\xf5\xd3\xa2\x49\x31\xc9\x65\x28\x3b\x09\xe5\x27\xc1\xec\xcf\x6d\xe2\xb9\xb9\xb6\x87\x53\x5f\x57\xfb\xbc\x0a\xd1\xf9\x61\xf2\xab\xfa\xf7\xc0\x75\x58\xc6\x85\xfa\xd6\x1b\x0c\x4f\x57\x00\x98\xc9\xed\x58\x17\xa9\x0c\x2b\xa4\x33\x14\x2c\x24\x22\x0c\x49\xc0\x22\xce\x90\x00\x59\x52\x25\x11\x66\x09\xda\x61\x1d\x1c\x76\xee\x1f\x83\xd5\x0d\x56\xb7\x21\x59\x4b\x60\x35\x3f\x4c\x23\x6f\x2e\x68\x9d\x21\x41\x32\x16\x00\x73\x6a\x2f\xcc\x9d\xa5\xb9\xe9\xfd\x9e\xab\xe5\x55\x18\xcd\x74\xc4\xb8\x02\x24\x33\x7e\x34\xda\xa7\x09\x2a\x25\x08\x7b\x7f\x8c\xe5\x9e\xb0\x9d\x8e\x7f\x10\x2e\x55\xc6\xc5\xfc\xe2\x90\x06\xc3\x6d\xae\x08\x5b\x40\xd6\x5d\x3b\xd5\xe0\x9e\xd7\xa0\x22\xbf\x30\x82\x2a\x8b\x57\x2f\x9e\xae\x28\x43\x51\x65\x81\xf4\xcc\x0e\xbc\x8c\xe7\x50\xe0\x1d\xac\x01\x59\xcd\x1d\x42\xad\xd2\x9a\x97\xf6\xf6\x77\x0d\xf0\x0a\x44\x75\x83\x3c\x44\xe2\xea\x39\x9e\x73\x4a\xe2\xd3\x1a\x14\x0e\x00\x2a\x0c\x84\x21\x02\xa9\xb0\x2a\xe5\x2a\x66\x9b\x99\x43\x88\x8a\xaf\x02\xa7\x40\xe4\x52\xdb\x50\x77\x5d\x3c\x04\x9c\xf0\x78\x0d\xe0\x84\xc7\x65\x0e\x4c\x59\xaf\x36\x80\x4a\xf9\x8e\xaf\x2c\x81\xe9\x97\xea\x18\x50\xf5\x30\x6f\xc4\x11\x51\xc2\xf6\x75\x31\x4e\x3d\x76\x56\xe5\x4c\x55\x1a\xa7\x5e\x34\x90\x5b\x8a\x77\x24\x89\xab\x8c\xcb\x80\xec\x32\xd5\x0e\x9b\xaa\x26\xdd\x6b\xc7\xd5\x6e\xa0\x06\x1f\x2a\xcc\xa9\x96\xbb\xbc\x0e\x46\xf3\x03\xd9\xbf\x3a\x03\x26\x8b\x6f\x0c\x93\xd6\x60\x4c\x09\x85\x6e\x4a\xd2\x06\x5b\x71\xc8\x0b\x97\x30\x05\xbb\x5e\x30\xd2\x5b\x8a\x9d\x1f\x58\xca\x03\x2f\xca\x9a\xef\x6b\x71\x3a\x00\xd3\x48\xbd\x96\xb4\x10\x70\x20\x70\x5c\x69\xf6\x87\xc5\x73\x0e\xda\x1c\xfb\x3f\x72\xd3\x7e\x99\xe3\x5d\xe7\x72\x3d\x10\x9c\x77\x94\xa5\x13\x63\xcf\x8c\xab\x27\x54\x66\x42\x69\xc6\xd4\xa6\xbb\xcb\xc1\x90\xdd\xab\x3c\x53\x11\x66\x8f\x51\x1e\x0d\x0a\x1f\x1d\x76\xa2\x5e\x9f\x1e\x2d\x45\x3e\xd4\xa8\x3e\x12\x9f\x56\x4d\xc8\xf8\x10\xcd\x50\xb5\x02\x72\xde\xc7\xee\x55\xb0\xc5\xe8\x3d\x5a\x16\xc6\x3f\xa1\x73\x31\x67\x0a\xc7\xb7\x29\xee\xa9\x21\xac\xd3\xb3\x90\x36\x0d\x4e\x78\xdd\xf9\xed\x6d\x14\x6c\x44\xf2\x7d\xc7\xd5\x73\x65\xaf\xc5\x05\xdf\xc1\x74\x28\xb9\x8c\x14\xc4\x19\x23\x31\x1e\x1e\x4a\x47\xb9\x31\x66\xbe\x7c\x2e\x4a\x09\xc3\x2c\xf6\xdc\x0d\x49\x88\x4b\xd1\xa9\x68\x42\xbd\x8c\xf3\x9d\x87\x9f\xe7\x58\xb4\xef\x64\xbd\x39\x5c\xed\x6f\xdc\xb4\x50\xc2\x4d\x41\x04\xbc\x92\x20\xae\xf8\x1e\xbc\x79\xc0\xe0\x82\xaa\xa1\xec\x89\x99\x6d\x93\x11\x65\xe7\x7b\xb2\x0e\x23\x1b\x1d\xac\x02\x52\x01\x32\xbb\x64\x0a\xc4\x01\xd3\xc5\xa1\x9b\x9b\x8f\x48\x05\xa0\x09\x56\x9a\x4b\xae\xcf\xde\x3c\xbc\xf7\xf5\xb5\x29\x22\xff\x9f\xcf\xb3\x19\xe9\xd0\xf0\x31\xc1\x02\x56\xbc\xb0\x93\x2d\x2f\x74\x22\x36\x8f\x13\xa5\x43\xf6\x8d\x7b\xaa\x30\x33\x90\x6d\x76\xbc\x14\x24\xc0\xa4\x67\x1a\x2e\xaa\xde\x40\x98\x00\x77\x0e\x0f\x12\x22\x20\x56\xcf\xd8\xab\x22\xc1\xfe\xac\x75\x8c\x09\x76\xb6\x4e\x9b\x4b\x3b\x7f\x16\x17\x8e\xb0\xcd\x38\xdf\xdf\xa2\xe2\xbc\x82\x30\x11\x65\x97\xa2\xad\x3c\x11\x1c\x80\x29\xb9\x32\xec\x0e\xc5\xc5\x1a\xc7\x82\x18\xd5\xbf\x95\xdd\x15\xbe\xb6\xab\x43\xaf\x5e\x5c\xfa\x23\x58\x09\xb1\x80\x60\x38\x39\x1a\x1a\xff\x09\x4b\xf8\xea\xff\xef\x01\x8b\x79\x02\x49\xc5\x48\x64\x21\x6a\x71\x4e\x90\xe2\x48\x92\x1d\x43\x8e\x5d\x1d\x38\xda\x30\x01\x53\x4f\xf4\x74\x8d\x44\xcb\x87\x81\xb8\x30\xb4\xef\x9e\x5d\xac\x59\x48\xc5\xa4\x0e\x24\x64\x8f\x12\xeb\x75\xe8\x4e\x60\x8a\xc4\x58\x41\x75\x96\xd2\x97\x9d\x79\x04\x3b\x66\xf8\x29\x0d\x3a\x74\x3f\xc9\x3e\xc6\xfa\xeb\xd9\x26\x7c\x46\xc8\xff\x15\x5e\xff\xe6\x2a\xe3\x0f\xee\x64\xf7\x22\x16\x80\x95\xa7\x78\x60\x30\x30\x2d\x69\x4a\x06\x8f\x14\xec\x3e\x16\xc5\x85\xff\x0d\x43\xdd\xed\xac\xb7\xbf\xb3\x64\x23\xb3\xed\x2b\x80\x30\x9d\xae\xdf\xd6\x2c\x27\x23\xde\xd9\xbb\xa3\x39\xbe\xf9\xdb\xf3\x97\x8b\x72\xb2\x46\x79\x09\x53\xff\xf7\x45\x48\x84\x1e\x3e\xf0\x67\x81\x8a\x86\x05\x68\xec\xae\xa3\x91\xa0\xab\xa7\x2f\x75\x6c\x90\x92\x5d\x29\x7c\xcf\x26\xc2\x77\x06\x11\x61\x26\x8c\xf1\xdd\x95\x0d\x4c\x7d\xa7\xdf\x7f\x7e\xec\x8f\x2f\x8e\x5c\xec\x53\xca\x8f\xeb\x82\xde\xe6\x86\x12\xf1\x14\x55\xb0\x90\x65\xcd\xb9\xc3\xe0\x41\xc9\xd0\xb0\x5c\x28\x22\x71\x9f\xc3\x29\x7b\x4f\x71\xb2\xb7\xfa\x66\x6e\xc8\x98\x95\x39\x66\xf7\x04\xe0\xc4\xdc\x38\xd8\x2b\xf3\x94\xd8\x7b\x72\x63\xf4\x1c\x5f\x82\x21\xab\xf7\x16\x75\x2e\x7a\xd6\xba\x35\x7d\x1c\x2b\x72\x20\xea\x84\xb0\x1c\x1e\x61\x87\xf1\x1b\x4e\xaf\xc5\x5f\x25\xa7\x15\x0d\x1a\x98\xf1\x62\x19\x3f\x86\x51\xde\x2a\x33\xd1\xc3\x2a\x74\xde\x4b\xf8\xb6\x47\xc1\x8e\x27\x73\xcd\x77\x60\x7c\x5b\xbf\x66\x66\x22\xe9\x7a\xa6\xea\x95\xa5\x25\x8b\xab\x4b\xc0\x2d\x20\xb8\x81\xb8\xec\x59\xda\x2e\x3e\x6e\xee\x54\xc2\x7e\x6c\xea\x4e\xb7\x8b\xde\x41\xab\x85\xb8\x67\x11\xfa\xa4\xcf\xbf\x64\x9d\xa8\xe3\x53\x58\xee\x37\x3f\x95\x50\xae\x2e\xb4\x5a\x54\xd1\x55\x2d\x6b\x63\xf9\x4b\x38\xdb\x28\x92\x03\x2f\x27\x0a\x68\xfc\x67\x1a\x68\xe0\xa8\x7a\xc1\xd9\x80\xc4\x07\xf3\x29\x14\xe5\xc7\x4b\x9b\xd9\xb5\x8f\x8d\x38\x4c\xd4\x26\xe5\x62\x13\x63\x16\x03\xa5\xe1\xbb\xfa\x39\xf5\xa1\xbe\x9c\x6a\x0c\xbb\x8c\x33\x48\x4a\x0a\x1b\xc5\x37\x31\xe5\x12\x3e\x36\xf6\xb4\x09\x94\x0a\x0b\xf5\xd1\x11\x68\x89\xfa\x48\xd9\x97\x01\x16\x6a\x0b\xf8\xb7\x66\x5b\x38\x5c\xec\x46\xa7\x58\xe0\x91\x1c\x67\x34\x89\x6a\xbb\x06\x03\x07\x3c\x0f\x83\x82\x8f\x82\xa6\xea\xe5\xc6\xcb\x82\xfc\xd5\xe5\xa1\xfa\xf2\x0a\x5b\xaf\x79\x50\x19\xb4\xa8\x26\x68\xaa\x1a\x28\x5c\xbc\x3d\xaf\x8e\x25\x18\x4a\xda\x4a\xd1\x76\x44\xe9\x82\x9e\x7a\x13\x86\x05\x2d\x9e\x92\x9b\xb1\x2a\xbd\x65\xf4\xe9\x30\xf2\x5e\x2a\x08\xb0\x84\x9e\x50\x3b\xea\x5b\x48\xd1\xc8\xab\xa8\x65\x14\xb5\x43\xc1\x85\x34\x34\x3a\x75\x7b\x32\x1c\x2c\x74\xc0\xb4\x9c\x45\xcf\x4a\x2d\xe6\xa5\x2a\xca\xc1\x49\xc8\x0a\x35\xb6\x80\x2c\xbd\xbf\x6b\x72\x97\xc4\x0f\xa9\xc9\x76\x1f\x3e\x1a\x35\x5e\x42\xce\x7b\xd1\xe1\x25\x04\xbc\x77\x05\x0e\x12\xb3\x52\x7b\xed\xe1\x51\x38\x29\x5c\x94\x59\x29\x51\xb6\x83\xd0\xa9\xc3\x21\x1d\x64\x2c\x3a\x18\x3a\xcb\x39\xcf\xf0\x54\xa7\xab\xd4\x67\x3d\xc5\x59\x73\x8c\xd2\x7d\x7b\x14\x5d\x65\x80\xf6\x70\x42\x29\x01\x9a\x20\x22\xd1\x31\x03\x01\x46\x18\x12\xac\x30\x3a\x12\x4a\x75\x32\x2e\xf1\xc1\x9c\x71\x5f\xa0\xab\x8c\x48\x94\x97\x52\xe9\x66\xa7\xe6\x05\x08\x0b\xe1\xe2\x47\x86\xfe\xcc\x05\x82\x1b\x9c\x17\x14\xee\x22\x92\x1a\xf0\x7f\x44\x9f\x56\x65\x67\xf2\x53\x0d\x9d\xb9\xaa\xd5\x96\xf0\x59\x12\xba\x08\x09\x33\x64\x5c\xd4\x93\x47\x0e\x58\xd6\x14\x3d\x78\xb8\x61\xad\x83\xb0\x05\x10\xee\x30\x80\x48\x14\xf3\xbc\xe0\x0c\xd8\xc8\xa9\xd6\x9a\x23\x1e\x0f\x01\xc6\x3a\xb8\x4d\x3f\xd5\xfc\xa8\xef\x4a\x80\x42\xac\xd0\x31\x23\x71\xd6\x10\xa5\x7b\x04\xb0\x44\xdb\x59\xcb\xda\x54\x98\xbb\x93\xe4\x02\x5d\x2a\x14\x63\xc6\xb8\xd9\x30\xcc\x10\xdc\x10\xa9\x4c\x55\xa7\x61\xf8\x92\x9b\x6e\xff\xb3\xfa\x6a\x69\x9d\xe6\xf0\x29\x91\xcc\xf8\xf1\x19\xfb\x61\xf8\xe5\xa5\xc9\xb4\xb4\xcf\xad\xcb\xd4\x18\x85\xbb\x7d\xf1\xb1\xf5\xb5\x15\x27\x62\xce\x98\xfd\x78\x08\xe2\x07\x10\xe6\x93\x4f\xc1\xd3\xb3\x7e\xaa\x3b\x24\xfd\x07\x2d\xb3\xcf\xd8\x93\x84\x8c\x14\x80\xcc\xa6\xdf\x2a\x7b\x6b\x01\x56\x25\xcc\x32\xdc\x96\xd9\x73\x4d\xb7\x18\x48\x88\xea\x17\x09\x0f\x16\xd1\xb7\x94\x9d\x35\x68\x08\xde\xa7\x3e\x67\x20\xbe\x91\xb3\x38\xc3\x6c\x37\xb8\x45\x99\x4b\xa3\xf0\x17\x4e\x9d\x4d\x40\xb6\x80\x2a\x14\x5a\x73\x32\x7c\x00\x84\x2d\xeb\xc3\xea\x9d\x13\xf6\x14\xd8\x6e\x45\xd9\xd1\x78\xbe\x3b\xab\xe2\x28\xc7\x37\xbf\x1d\xf2\xa6\xee\x61\xa1\x6d\x9b\x51\x2d\x66\x0a\xfd\x32\x4e\x13\x10\x67\xb0\x9d\x2d\x68\x48\xc1\x8d\xb2\xf5\xf6\x6d\xa3\xe0\x3e\x8b\x46\x64\xe3\xf2\x20\x2f\x86\xa7\xe5\xb3\x88\x0f\x05\x64\x4d\xb0\x11\xfa\xf4\x9e\x7f\x09\xdf\x76\x82\xb2\x4a\x54\x1b\x4f\x59\x7b\x23\x43\xfb\x5d\xb4\x85\x94\x57\x25\x32\xa6\x5c\x05\x1b\x3b\x77\x81\xfe\x82\x0f\xda\xc2\x63\x94\x0c\x21\x6a\x23\x28\x48\x62\xe1\xf6\x19\x16\x5e\xab\x2c\x80\xd2\x38\x83\x78\xa4\xb8\x6f\x9e\x56\x9a\x08\x42\x82\x32\x4e\xc8\x90\x04\xcc\x24\x0d\x06\x05\x32\x38\x6a\x37\x66\xa2\x8a\x95\x66\x24\x2f\xa9\x22\xc5\x59\x4c\x9d\x35\x23\x15\x40\x97\x46\x56\x9f\xd5\xc3\x49\x62\x63\x95\x66\x6f\x74\x20\x74\x95\xd5\x03\xdb\x12\x88\xa5\xf6\xc2\xc6\x95\x22\xf7\x52\xe7\xf1\xf3\x4b\xf3\x3c\x05\x33\xf4\xeb\x2f\xff\x7c\x9c\x24\xe8\x31\xe3\x2a\x03\xf1\xeb\x2f\xff\x42\xdb\x52\x29\xce\x6a\x69\x70\x5f\x16\xec\x30\x08\x61\x4a\xf9\x51\xb3\xd3\x38\x3c\x01\xf5\x3b\xbe\x26\xc6\xb4\x23\xa5\x2f\xa2\x59\xe9\x0d\x75\x64\xb6\x34\xb6\x1f\xbf\x0a\xa9\xbe\x77\xe5\x49\x54\x5d\xe2\x3e\x9e\xfa\x4c\x9c\x06\xf8\x77\xf7\x2a\x03\x09\x08\x8b\x96\xa2\xc9\x96\xdd\xd0\x1e\xd8\xc4\x5c\x90\x58\x9e\x57\x5b\xec\x4f\xb0\xc6\xbe\x14\x34\x7d\xa0\xe0\x46\xcd\x7a\x37\x88\xb7\x10\xfe\x78\x4d\x34\x70\x66\xcd\xcf\x07\x7f\x36\x68\x69\x59\xf2\xfa\x2d\x30\x30\xfc\xbc\xce\x72\xe3\x1c\x28\xbc\xed\x33\x5f\xc6\x79\x72\xf6\xb7\x32\xf8\x5c\x72\x56\xc2\xde\x13\xd6\x27\xda\xca\x23\x8c\xbe\x7b\xf9\xec\x7b\xf4\xd8\xd8\x10\xc5\xb5\x03\x30\x71\xbe\xcc\x78\x49\x13\x2d\xb2\xd6\xeb\x6b\x99\x6d\x9b\x1b\x9e\x56\xe5\x0d\xe6\x9d\xa0\xc9\x75\x12\xd4\xda\xc4\x00\x09\xc1\xeb\x45\xff\x9a\x87\x45\x6a\xe7\x58\x72\x29\xa8\xa5\x1a\xdb\xd4\x54\xf2\x52\xc4\xa0\x4d\x68\x8b\x19\x76\xdd\x2e\x4b\x75\xe6\xb9\x4a\x9d\x0a\x5e\x94\x14\x2b\x1d\xea\xbd\xb4\x59\x14\x25\x52\x59\x98\x70\xa3\x23\x1c\x4c\x2d\x2c\xef\x29\xa1\xa3\x2e\x5c\x52\x37\x93\x61\xf3\xcf\x52\x42\x27\x1c\x77\xf4\xbf\x77\x77\xfe\x1d\x00\x00\xff\xff\xde\xcb\x8e\x1c\x5a\x5b\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas"].(os.FileInfo),
	}
	fs["/schemas"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas/manifest.json"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
