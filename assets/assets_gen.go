// Code generated by vfsgen; DO NOT EDIT.

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets statically implements the virtual filesystem provided to vfsgen.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2020, 12, 29, 21, 43, 28, 235910709, time.UTC),
		},
		"/schemas": &vfsgen۰DirInfo{
			name:    "schemas",
			modTime: time.Date(2020, 12, 30, 23, 55, 37, 550250261, time.UTC),
		},
		"/schemas/manifest.json": &vfsgen۰CompressedFileInfo{
			name:             "manifest.json",
			modTime:          time.Date(2020, 12, 30, 23, 55, 37, 550122696, time.UTC),
			uncompressedSize: 23076,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\xeb\x8e\xdc\xb6\x92\xfe\x3f\x4f\x41\x08\x01\x92\xec\xda\x63\x27\xd8\x64\x11\x03\xfb\xc3\x9b\x78\xb1\x13\x78\x63\xc3\x97\xf8\x87\x33\xdb\x60\x8b\xa5\x16\xdd\x14\xa9\x90\x54\xf7\xcc\x06\x06\xf2\x20\x7b\x5e\x2e\x4f\x72\xc0\x8b\xd4\xba\x90\xba\x4d\xdb\xf1\x39\x88\x81\x20\xd3\x12\x59\x55\x2c\xb2\xaa\xbe\x22\x8b\xfa\xed\x02\xa1\xe4\x33\x95\xe6\x50\xe0\xe4\x11\x4a\x72\xad\xcb\x47\x0f\x1e\xbc\x53\x82\xdf\x77\x4f\x2f\x85\xdc\x3d\x20\x12\x67\xfa\xfe\xc3\x7f\x7f\xe0\x5b\xde\x33\xdd\xf4\x6d\x09\xa6\x8f\xd8\xbe\x83\x54\xfb\x67\x54\x33\xfb\xf0\x7f\xb0\xdc\x83\x2e\x19\x4e\x01\xe1\xb2\x44\xed\x8e\x12\x7e\xad\xa8\x04\x92\x3c\x42\x6f\x2f\x10\x42\x28\xe1\xb8\x00\xfb\x0e\xa1\xe4\x00\x52\x51\xc1\x93\x0b\x84\xae\x6d\x73\x02\x25\x70\x02\x3c\xa5\xa0\x92\x47\xe8\x37\xd7\xcc\x10\x01\xa5\x5f\x2b\x90\x8f\x2b\x9d\x1b\x5a\x49\xa5\x40\x6e\x70\xa5\xf3\x4d\x8a\x19\xdb\xe2\x74\xbf\xa9\x24\x4b\xae\x2f\x10\x7a\x6f\x49\x61\x42\xa8\xa6\x82\x63\xf6\x5c\x8a\x12\xa4\x76\x24\x33\xcc\x14\xd8\x06\x65\xfb\xb1\xe7\x44\x49\xf3\x77\x6b\xd4\x4a\x4b\xca\x77\x5e\xe8\xf6\xc8\x1f\x97\x25\xba\xfa\xe1\xf4\x82\x40\x86\x2b\xa6\xcd\xab\xc4\x3e\x7b\xef\x07\x2a\xe4\x6e\x11\xe1\x67\x72\x87\x39\xfd\x3f\x6c\x06\x30\x83\xbc\xd5\xe9\x52\xc1\x6d\xa7\x0e\x99\x7a\x3a\x96\x52\x52\x50\x60\xae\x69\x8a\x6a\x02\x4d\xb3\x12\x6b\x0d\xd2\x50\x4c\xfe\xf7\x8b\xb7\x0f\xef\x7f\x77\xfd\xaf\x5f\xfe\xf2\xcb\x65\xe0\xcf\xcf\xba\xa2\x94\x92\x16\x58\xde\x7e\x8f\x35\xec\x84\xbc\x0d\x88\xf4\xb6\x91\x09\x25\xbc\x62\x2c\xb9\x1e\x0a\xd7\x5e\x99\x46\x50\x4f\x15\xa5\x35\xd9\xa6\x0b\xf0\xaa\x68\xd6\x68\x2d\xc1\x01\xa7\xa7\x26\x66\x49\x29\x05\x3a\xf1\xbf\xaf\x3b\xf2\x2a\x48\x05\x27\xe7\x97\xb8\xa1\xfb\x01\x64\x96\x15\x6b\xad\xfd\xb6\x9c\xb5\x99\xc7\xe5\x34\xb2\xb9\xfe\xcd\xbb\x29\x83\xf3\x12\x0e\x8c\xce\x2d\x3d\x0a\xc7\xce\x93\xf8\xda\xeb\x0a\x62\x84\x40\x70\x53\x4a\x50\x8a\xf2\x1d\x3a\xe6\xc0\x91\xce\x9d\x27\xa2\x0a\x1d\xa8\xa2\x5b\x06\xdd\xde\x03\x43\x6a\xa9\xc5\x36\xa0\x5c\x69\xcc\xd8\xdd\x25\x12\xbc\x2b\x51\x8a\x39\xda\x02\xf2\xf4\x81\xcc\x91\xeb\xa2\xfd\xff\x7a\xf2\x52\x5c\xe2\x2d\x65\xb4\xa7\xca\x46\x44\x2c\x25\xbe\x8d\xd8\x6b\xa7\x6f\xd3\x84\x6a\x28\x7a\xb3\x12\x1d\x6f\x84\x5e\x67\xe5\x0d\x96\xa7\x99\x7e\x90\x05\xd5\x66\x7d\xe0\x5d\xd7\xb9\xb5\x5e\x5f\xf1\x1d\xa8\xe1\x4b\x49\x77\xb9\x56\xd1\xbe\xee\xf5\xa9\x6f\xf3\xee\x3a\xa8\x3f\x55\x95\xa5\x90\x1a\xc8\x53\xcc\x77\x15\xde\x45\x2c\xc1\xab\x71\xdc\x10\x1a\x5a\x88\x35\xc4\xd6\xa9\x35\xa4\x33\x98\x1c\x4b\x59\xc9\x52\xa8\xbb\x8c\xa0\xa1\x70\x46\xb1\x95\x02\xae\x29\x66\x1b\x05\xf2\x40\xd3\x16\x71\xe4\x3d\x01\xd9\x00\xcf\x31\x4f\xa1\x00\xae\xbb\x6f\x31\xc7\xec\x56\xd3\xb4\xd7\x69\x0b\x39\x3e\x50\x21\x31\xdb\x60\x72\x30\x8e\x44\x0d\x0c\xb1\x04\xa9\x8c\x17\xea\x87\x4f\x37\x06\x60\xb0\x29\xf6\xba\xd7\x47\x15\x2a\xf0\x14\x0a\x4c\x59\xe0\x79\xe4\x31\xc1\x1a\x6f\xb6\x52\xec\x8d\x48\x13\x53\xe6\x56\xeb\xfa\x09\xf3\xfd\xcf\x37\x5d\x04\x18\xe8\x9e\x9b\xc4\x69\x0a\xaa\x37\x03\xa9\x90\x12\xd2\x80\xe9\x0a\xa9\x6b\x27\x30\x31\x76\x4a\xcc\xc2\xd0\xb7\x2f\x4b\x9c\xde\x65\xd1\xd6\x74\x90\x72\x84\xe6\x28\xa3\x05\x60\xa7\x49\xb6\x9b\x09\x0e\xcf\xb2\x9e\xd2\xda\xb1\x21\x84\x75\x3b\x6a\x23\x5d\xe5\xa2\x1e\x16\x6e\x3d\xcd\x28\xd3\x20\x55\xd2\x79\x7e\xdd\x6d\x16\x0b\xa4\xfe\x6d\x81\x39\xde\x01\x09\xbc\x6a\xe9\x62\x2b\x04\x03\xcc\x07\x02\xb4\x95\xf2\x26\x07\x9d\x83\x44\x3a\xa7\xaa\xa7\x1d\x13\x5d\x3d\x1f\x24\x24\x2a\x70\x59\xf6\xe2\x59\x2d\xea\x09\x04\x5a\x30\x90\xf4\x9a\xbc\x1f\x68\xc0\x6a\x6b\x54\xf6\x40\x04\xee\x8b\x3e\x9c\x4f\x64\xe9\x4e\x72\xef\xa1\xe9\xb3\x71\x3f\x01\xee\x31\xee\x04\x54\x2a\x69\xa9\xbb\x40\xfc\x6c\x42\xb4\xc9\x07\xba\x06\x11\x48\x4c\xd4\x7a\xa1\x8e\x8a\xd9\x05\x22\x33\xa5\xac\x29\x07\xba\x0d\x8d\x3b\xc0\x74\x60\xe6\x41\xbe\x9e\x4d\xb8\xd9\x88\x35\xb7\x99\x85\xfa\x1a\xd5\x08\x59\x60\xdd\x57\x21\x1a\x1a\xb2\x6f\x3f\x07\x3c\x77\x3a\x8c\xda\x7f\x57\x1b\xe1\xb7\x73\x56\x52\xdd\x6e\x72\xa6\xd0\x88\x2e\xc2\x01\xa7\xdf\xc2\xc4\xd4\x28\x01\xeb\x12\xb8\x96\x82\x31\x90\x9b\xb4\x52\x5a\x14\x20\x37\x34\xe4\x6e\x9a\x1e\x98\x13\x29\x28\x69\x03\x85\x99\x3d\xc6\x5b\x65\x54\xc2\x02\xa2\x54\xa8\x85\xad\x0f\xc0\x89\x98\x1a\x5d\x41\x53\x29\x94\xc8\xf4\x02\xe2\xa7\x3e\x65\xb5\x65\x54\xe5\x93\x3a\x94\x62\x5f\x2d\x6b\x3c\x5f\x9a\x8a\xd3\x5f\x2b\x30\x80\xe9\xa8\x22\x46\xe8\x5b\x1a\xd0\x56\xe6\x82\x0f\xbc\x67\xfd\xef\x3a\xf8\x7c\xe0\xb0\x3c\x39\x6f\x9b\x1f\xc7\x30\x3c\xb3\x3b\x98\x86\xc4\xc7\x31\xe5\xa8\x1c\x7f\x35\xf1\xfe\xeb\x6f\xbe\x9d\x68\xf1\xcd\x57\x5f\x2f\xd4\x6d\xe0\xe9\xf0\x59\xff\x49\xf7\x77\xfb\x57\x67\xae\x3e\x10\xae\x0a\xfa\xa8\xe4\x80\x25\xc5\x5b\x06\xff\x8c\x70\x4b\xcb\xea\x2f\xb4\x35\xca\xfd\x1f\x08\x6d\x45\xa3\xf9\x1d\x65\x1c\x8f\xe0\x63\x0e\x6a\x24\x6a\x2f\x89\xd7\x4b\x22\xf5\x54\x8c\x9e\x1d\x9d\xe7\xc6\xe5\x19\x11\x79\x59\x2c\x5e\x12\x85\x67\xc6\xdf\xd9\x91\x77\x4e\xcc\x1d\x8b\xb6\xfd\x58\x10\x48\x09\xe2\xb1\xf5\x3c\xcb\x34\x1a\x4f\xdb\xc6\x14\x0e\x99\xa3\x4b\x39\x16\x65\xe3\xf1\x75\x2c\xb2\x46\x63\xea\xb4\x06\x9b\x78\x34\xaa\xc3\x68\x82\x73\xd2\xe1\xcf\x9e\x10\x22\x90\x51\x4e\x63\x3e\x68\x22\xcf\x49\x98\x48\x87\xfb\x68\xcd\xdb\x90\x97\x0d\xe6\x38\x0b\x33\x9c\xe9\xfc\x26\x1e\x38\xd0\x6c\x08\x77\x52\xd6\x4f\xb8\x00\x24\x32\xbb\x4f\x1f\x46\x04\xee\x5f\x10\x53\x9e\x74\x74\x2e\x71\x9e\x7a\x82\x03\x91\x22\x1d\x27\x50\x64\x72\xa4\x9c\x88\x38\x8c\x4c\x52\x21\xf6\x74\x24\x81\x23\x58\xe3\xa7\xf8\x16\x64\x18\x25\x86\x30\x62\x58\x53\xef\x8e\x71\xe0\x3d\x7d\xfe\xd4\x6f\x5f\xab\xeb\xc7\x37\xaf\x10\x01\x8d\x29\x0b\x6d\x19\xa0\x59\xe9\xfc\xd4\x52\xb7\x2d\xf6\x70\x1b\xd1\x40\x84\xed\xd2\xbc\x7e\x5e\x66\x3f\x67\xc9\xa1\x05\x89\x4c\x5b\x97\x35\x61\xa4\x05\xca\x28\x27\x9d\xf5\x87\x8e\x54\xe7\xd4\x1d\x67\xfd\xf8\xe6\xd5\x18\xc1\xc9\xc4\x06\xa1\x24\x07\x4c\x46\x53\x3f\xb3\x34\x19\xa6\x85\x8a\x65\x27\xb1\xfc\x24\x9a\xfd\xf9\x49\x3c\xb7\xd6\xf6\x70\xdb\xb7\xd5\xbe\xae\x62\x72\x7e\x9c\xfc\xaa\xf9\x3b\x72\x1c\x96\x0b\xa9\x7f\x08\x82\xe1\xe9\x1a\x00\xdb\xb9\x8d\x75\x91\xce\xb1\x46\x26\x43\xc1\x52\x21\xca\x91\x02\x2c\xd3\x1c\x49\x50\x15\xd3\x0a\x61\x4e\xd0\x0e\x1b\x70\xd8\x39\x81\x8c\xd6\x37\x38\xdb\x06\xb2\x56\xc0\xba\x7f\x5c\x46\x71\x3a\xa2\xf5\x8e\x04\xa9\x54\x02\xcc\xa9\xbe\xb0\xa7\x96\xf6\xac\xf7\x27\xa1\x97\xd7\x61\x9c\xba\x23\x2e\x34\x20\x95\x8b\xa3\xb5\x3e\x23\x50\xa5\x40\xba\x13\x64\xac\xf6\x94\xef\x0c\xfe\x41\xb8\xd2\xb9\x90\xf3\xcb\x43\x4e\x1c\xee\x72\x44\xd8\x22\xb2\xee\xd8\xa9\x21\xf7\xbc\x21\x95\x84\x17\x23\xe8\xaa\x7c\xfd\xe2\xe9\x8a\x42\x14\x5d\x95\xc8\xf4\xec\xd0\xcb\x45\x01\x25\xde\xc1\x1a\x92\x75\xdf\x21\xd5\x3a\xad\x79\xe9\x4e\x7f\xd7\x10\xaf\x49\xd4\x27\xc8\x43\x26\xbe\xa2\xe3\xb9\x60\x34\xbd\x5d\xc3\xc2\x13\x40\xa5\xa5\x30\x64\xa0\x34\xd6\x95\x5a\xa5\x6c\xdb\x73\x48\x51\x8b\x55\xe4\x34\xc8\x42\x19\x1f\xea\x8f\x8b\x87\x84\x89\x48\xd7\x10\x26\x22\xad\x0a\xe0\xda\x45\xb5\x01\x55\x26\x76\x62\x65\x11\x4c\xbf\x58\xc7\x92\x6a\x9a\x05\x11\x47\xc2\x28\xdf\x37\xe5\x38\x4d\xdb\x59\xb5\x33\x75\x71\x9c\x7e\x71\xa2\xdc\x32\xbc\x23\x25\xbe\x36\x2e\x07\xba\xcb\x75\x1b\x36\xd5\x8f\xcc\x5b\xd7\xae\x09\x03\x0d\xf9\x58\x69\x4e\x3d\xdc\xe5\x95\x30\x46\x1f\xc8\xfd\xea\x34\x98\x2c\xbf\xb1\x4a\x5a\xc3\x31\xa3\x0c\xba\x29\x49\x9b\x6c\xad\xa1\x20\x5d\xca\x35\xec\x7a\x60\xa4\x37\x14\xd7\x3f\x32\x94\x87\x41\x96\x8d\xde\xd7\xf2\xf4\x04\xa6\x99\x06\x3d\x69\x29\xe1\x40\xe1\xb8\xd2\xed\x0f\xcb\xe7\x3c\xb5\x39\xfe\x7f\xe4\xa4\xfd\xaa\xc0\xbb\xce\xe1\x7a\x04\x9c\x77\x8c\xa5\x83\xb1\x67\xe2\xea\x09\x93\x99\x30\x9a\x31\xb3\xe9\xce\x72\x14\xb2\x07\x8d\x67\x0a\x61\xf6\x14\x15\xb0\xa0\xf8\xd6\x61\x07\xf5\x86\xec\x68\x29\xf3\xa1\x45\xf5\x99\x84\xac\x6a\x62\x8d\x0f\xd9\x0c\x4d\x2b\xb2\xce\xfb\xdc\x83\x06\xb6\x98\x7d\xc0\xca\xe2\xfc\x27\x6c\x2e\x15\x5c\xe3\xf4\x2e\xc5\x3d\x0d\x85\x75\x76\x16\xb3\xa6\xc1\x0e\xaf\xdf\xbf\xbd\x8b\x81\x8d\xac\xfc\xd0\x76\xf5\xdc\xb5\xd7\xd2\x42\x68\x63\x3a\x96\x5c\x26\x1a\xd2\x9c\xd3\x14\x0f\x37\xa5\x93\xc2\x3a\xb3\x50\x3e\x97\x64\x94\x63\x9e\x06\xce\x86\x14\xa4\x95\xec\x54\x34\xa1\x5e\xc6\xf9\x3e\xa0\xcf\x73\x0c\x3a\xb4\xb3\x7e\xda\x5c\xed\x4f\xdc\xf4\xa2\x84\x9b\x92\x4a\x78\xad\x40\xbe\x12\x7b\x08\xe6\x01\x83\x03\xaa\x93\x64\x4f\x6c\x6f\x97\x8c\x68\xd7\x3f\x90\x75\xd8\xb5\xd1\xe1\x2a\x21\x93\xa0\xf2\x2b\xae\x41\x1e\x30\x5b\x0c\xdd\x7c\x7f\x44\x6b\x02\x27\xb0\x72\x3a\xe4\xfa\xe2\xed\x57\xf7\xbf\xbb\xb6\x65\xe4\xff\xf2\x65\x3e\x23\x1d\x1a\x5e\x27\x58\xa0\x8a\x17\xae\xb3\xd3\x85\x49\xc4\xe6\x69\xa2\xf2\xcc\xbe\xf7\x97\x15\x66\x02\xd9\xd3\x8c\x57\x92\x46\x94\xf4\xcc\xd0\x45\xf5\x2d\x08\x0b\x70\xe7\xe8\x80\x50\x09\xa9\x7e\xc6\x5f\x97\x04\x87\xb3\xd6\x31\x25\xb8\xde\x26\x6d\xae\x5c\xff\x59\x5a\x38\xc2\x36\x17\x62\x7f\x87\x9a\xf3\x9a\xc2\x04\xca\xae\x64\xdb\x78\x8c\x1d\x4b\xe8\xf8\x48\x38\x00\xd7\x6a\x25\x10\x8f\x21\x65\xc3\x75\x01\x6a\x0d\x4f\x6e\x77\xcc\x6f\xdc\x78\xd1\xeb\x17\x57\x61\x4c\xeb\x87\xb6\x06\x2c\xff\x27\x56\xf0\xed\xbf\xdd\x07\x9e\x0a\x02\xa4\x56\x2d\x72\x14\xcd\x02\x27\x48\x0b\xa4\xe8\x8e\x23\xaf\xae\x0e\x1d\xe3\xaa\x80\xeb\x27\xa6\xbb\x61\x62\x56\x8c\xa5\xb8\x10\xec\x77\x77\x33\xd6\x0c\xa4\x56\x52\x87\x12\x72\x9b\x8b\xcd\x38\xcc\x4b\xe0\x9a\xa6\x58\x43\xbd\xbb\xd2\x5f\x4d\xf3\x04\xf6\xca\x08\x4b\x1a\x0d\xf1\x61\x91\x43\x8a\x0d\x57\xb8\x4d\x44\x91\x58\x44\x2c\x83\x11\xcf\x96\x0f\x5f\xf1\x83\xdf\xeb\xbd\x4c\x25\x60\x1d\x28\x27\x18\x34\xcc\x2a\x96\xd1\xc1\xc5\x05\x37\x8f\x65\x79\x19\xbe\xd7\xd0\xbc\xf6\xfe\x3c\xfc\xb2\xe2\x23\xbd\xdd\xcd\x80\xb8\x9c\xfe\xbd\xab\x62\x26\x23\xf1\x7a\x22\x4e\x1e\x85\xdc\x67\x4c\x1c\xd7\x81\xb7\xd3\x49\x1b\x12\x19\xaa\x69\x21\xe7\xda\xce\x0d\xe7\x06\xa5\x2f\xc3\xb2\x97\x84\xa6\xfd\x3a\xed\x8c\x7f\x20\xbc\x17\xac\x22\x99\x0b\x7d\xf2\xaa\xc0\xfc\xbe\x04\x4c\xec\xce\xb9\x3b\xfa\xcd\xa8\x3b\xef\xb5\xa6\xea\xf5\x12\x85\x5e\xc1\xd3\xc0\xb9\xec\x79\xeb\xf4\xef\x71\xaa\xe9\x81\xea\x5b\x84\xd5\x70\x2b\x36\xce\xdf\x6a\x7a\x2d\xff\x3a\xc9\xaa\x65\x30\xc4\xac\xef\xcd\xc5\x31\xce\xf2\x4e\x08\xdb\x34\xab\xd9\x05\x0f\x93\xdb\x7e\x10\x7b\x9d\xcc\x75\x3a\x91\xf6\x6d\xfb\x9a\x89\xa8\xb3\xf5\x4a\x35\x23\xcb\x2a\x9e\xd6\x87\x59\x5b\x40\x70\x03\x69\xd5\xf3\x0f\x5d\x7e\xc2\x9e\x0d\xc4\xbd\xef\xd4\xd9\x64\x97\xbd\xa7\xd6\x2c\xe2\x9e\x47\xe8\x8b\x3e\xff\xb0\x70\xa2\x1e\x4d\x63\xb5\xdf\xfc\x5a\x41\xb5\xba\x60\x68\x51\x65\x52\x3d\xac\x8d\xd3\x2f\x15\x7c\xa3\x69\x01\xa2\x9a\x28\x04\x09\xe7\xe6\xa8\x8b\x8d\x28\xd7\x3d\x48\x31\x10\xf1\xe1\x7c\x09\x65\xf5\xe9\xca\x66\x67\xed\x53\x13\x0e\x53\xbd\xc9\x84\xdc\xa4\x26\x43\x66\x2c\x7e\xe6\x3c\xa7\xce\x31\x94\x1b\x8c\x71\x57\x69\x0e\xa4\x62\xb0\xd1\x62\x93\x32\xa1\xe0\x53\x53\x4f\x5b\x40\xa5\xb1\xd4\x9f\x9c\x80\x4e\xa8\x4f\x54\x7d\x39\x60\xa9\xb7\x80\xff\x6c\xb5\x5d\xc4\x7e\x75\x83\x43\x89\x25\x1e\x41\xe6\xa3\xd0\xbf\x1d\x1a\x2c\x1d\x08\x5c\x70\x89\x5e\x6e\x99\xaa\xfb\x1a\x2f\x6f\x09\x57\x49\xc7\xea\xa4\x6b\x6e\xbd\xc7\x83\x0a\x97\x45\xb5\x2d\x53\x55\x2d\xf1\x22\xe4\x79\xf5\x18\x51\x28\xe9\x2a\x1e\xdb\x88\xd2\x83\x9e\x66\x12\x86\x85\x19\x81\xd2\x91\xb1\x6a\xb3\x65\xf2\x19\x18\x79\x3f\x93\x14\x38\x61\xb7\xa8\x8d\xfa\x16\x4a\x34\x72\xbb\x67\x99\x44\x6d\x28\xb8\x50\x86\x93\x4d\xdd\x5d\x0c\x4f\x0b\x1d\x30\xab\x66\xc9\xb3\xd2\x8a\x45\xa5\xcb\x6a\x90\xbf\xaf\x30\x63\x47\xc8\xc9\xfb\x97\x25\x77\x45\xfc\x98\x96\xec\xe6\xe1\x93\x31\xe3\x25\xe2\x7c\x10\x1b\x5e\x22\xc0\x07\x37\xe0\xa8\x30\x2b\xad\x37\x15\x3c\xa3\xbb\x78\x52\xb8\x28\xb3\xd2\xb2\x6a\x83\xd0\xa9\xcd\x21\x03\x32\x16\x6d\x0c\x9d\x65\x9f\x67\xb8\xab\xd3\x35\xea\xb3\xee\xe2\xac\xd9\x46\xe9\xde\xa1\x49\x5e\xe5\x80\xf6\x70\x8b\x32\x0a\x8c\x20\xaa\xd0\x31\x07\x09\x76\x31\x10\xac\x31\x3a\x52\xc6\x4c\x32\xae\xf0\xc1\xee\xcc\x5e\xa2\x57\x39\x55\xa8\xa8\x94\x36\x8f\xbd\x99\x97\x20\x1d\x85\xcb\x5f\x38\xfa\x2f\x21\x11\xdc\xe0\xa2\x64\x70\x0f\xd1\xcc\x92\xff\x0f\xf4\x79\x5d\x3e\xa5\x3e\x37\xd4\xb9\xaf\xbe\x6c\x2d\x3e\x27\x42\x97\x21\xe5\x56\x8c\xcb\xa6\xf3\xc8\x06\xcb\x9a\xc3\xfb\x80\x36\x9c\x77\x90\xee\x20\xdf\x6f\x06\x50\x85\x52\x51\x94\x82\x03\x1f\xd9\xd5\x5a\xb3\xc5\x13\x10\xc0\x7a\x07\x3f\xe9\xb7\x8d\x3e\x9a\x1d\x7e\x60\x90\x6a\x74\xcc\x69\x9a\x9f\x84\x32\x6f\x24\x70\x62\xfc\xac\x53\x6d\x26\xed\x8e\x3f\xb9\x44\x57\x1a\xa5\x98\x73\x61\x27\x0c\x73\x04\x37\x54\x69\x5b\x9d\x68\x15\xbe\xe4\xc4\x36\x7c\x3d\xbc\x1e\x5a\xe7\x71\x7c\x97\x48\xe5\xe2\xf8\x8c\xff\x3c\xfc\x86\xd0\x64\x5a\xda\xd7\xd6\x55\x66\x9d\xc2\xbd\xfe\xf2\x71\x75\xa2\xb5\x26\x52\xc1\xb9\xfb\x08\x06\x12\x07\x90\xf6\xe3\x45\xd1\xdd\xb3\x7e\xaa\x3b\x14\xfd\x67\xb3\x66\x9f\xf1\x27\x84\x8e\x14\x32\xcc\x96\xdf\x19\x7b\x6b\x00\xce\x24\xec\x30\xfc\x94\xb9\x7d\x4d\x3f\x18\x20\x54\xf7\x8b\x5d\x07\x83\xe8\x7b\xca\xce\x18\x0c\x85\xe0\x95\x95\x33\x08\x7f\x5a\x67\x69\x8e\xf9\x6e\xb0\xf7\x3f\x57\x46\x19\x2e\x00\x3a\xdb\x02\xd9\x02\xaa\x59\x18\xcb\xc9\xf1\x01\x10\x76\xaa\x8f\x9b\x77\x41\xf9\x53\xe0\xbb\x15\xe5\x33\xe3\xf9\xee\xac\xca\x99\x02\xdf\xfc\x79\xcc\x4f\xe7\xf7\x0b\x7d\xdb\x8c\xaa\x27\x5b\xb0\x96\x0b\x46\x40\x9e\xc1\x77\xb6\xa8\x21\x0d\x37\xda\xd5\x8d\xb7\x9d\x82\xff\xc0\x17\x55\xa7\x90\x07\x45\x39\xdc\x2d\x9f\x25\x7c\x0c\x90\x9d\xc0\x46\xec\x23\x72\xe1\x21\xfc\xd0\x01\x65\xf5\x52\x3d\x45\xca\x26\x1a\x59\xd9\xef\xa1\x2d\x64\xa2\x2e\xf5\xb0\x65\x17\xd8\xfa\xb9\x4b\xf4\xdf\xf8\x60\x3c\x3c\x46\x64\x48\xd1\x38\x41\x49\x89\xa3\xdb\x57\x58\x7c\xac\xaa\x04\xc6\xd2\x1c\xd2\x91\x22\xb5\x79\x56\x69\x11\x84\x02\x6d\x83\x90\x15\x09\xb8\x4d\x1a\x2c\x0b\x64\x79\x34\x61\xcc\xa2\x8a\x95\x6e\xa4\xa8\x98\xa6\xe5\x59\x5c\x9d\x73\x23\x35\x41\x9f\x46\xd6\x1f\x88\xc3\x84\x38\xac\x72\x9a\x1b\x03\x84\x5e\xe5\x4d\xc3\xf6\x0a\xc4\xca\x44\x61\x1b\x4a\x91\xbf\x71\xf2\xf8\xf9\x95\xbd\x66\x81\x39\xfa\xe3\xf7\xff\x7f\x4c\x08\x7a\xcc\x85\xce\x41\xfe\xf1\xfb\xdf\xd0\xb6\xd2\x5a\xf0\x66\x35\xf8\x6f\xe4\x75\x14\x84\x30\x63\xe2\x68\xd4\x69\x03\x9e\x84\xe6\x3e\xda\x09\x63\xba\x96\x2a\x84\x68\x56\x46\x43\x83\xcc\x96\x62\xfb\xf1\xa3\x90\xfa\xbb\x4d\x81\x44\xd5\x27\xee\xe3\xa9\xcf\xc4\x6e\x40\x78\x76\x5f\xe5\xa0\x00\x61\xd9\x32\x34\xd5\xf2\x1b\x26\x02\x5b\xcc\x05\xc4\xe9\xbc\x9e\xe2\x70\x82\x35\xf6\xc5\x9b\xe9\x0d\x05\xdf\x6a\xd6\xfd\x37\xbc\x85\xf8\x47\x58\x92\x41\x30\x3b\xfd\xfb\xe8\xd7\xdf\x9c\x2c\x4b\x6e\x71\x45\x1a\xc6\xaf\x89\x39\x6d\x9c\x83\x45\xf0\xf9\xcc\x1b\x5e\x81\x9c\xfd\x9d\x8a\x5e\xfb\x9b\x95\xb0\xf7\x16\xeb\x13\xe3\xe5\x11\x46\x3f\xbe\x7c\xf6\x13\x7a\x6c\x7d\x88\x16\x26\x00\x58\x9c\xaf\x72\x51\x31\x62\x96\xac\x8b\xfa\x66\xcd\xb6\xdd\x8d\xc8\xea\xf2\x06\x7b\xdf\xcd\xe6\x3a\x04\xb5\x26\x31\x22\x42\xf4\x78\x31\x3c\xe6\x61\x69\xd5\x39\x86\x5c\x49\xe6\xa4\xc6\x2e\x35\x55\xa2\x92\x29\x18\x17\xda\x52\x86\x1b\xb7\xcf\x52\xbd\x7b\xae\x53\xa7\x52\x94\x15\xc3\xda\x40\xbd\x97\x2e\x8b\x62\x54\x69\x47\x13\x6e\x0c\xc2\xc1\xcc\xd1\x0a\xee\x12\x7a\xe9\xe2\x85\x60\x33\x15\x36\x7f\x2f\x25\xb6\xc3\x71\x61\xfe\x7b\x7f\xf1\xf7\x00\x00\x00\xff\xff\x7c\xab\x98\x5e\x24\x5a\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas"].(os.FileInfo),
	}
	fs["/schemas"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas/manifest.json"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
