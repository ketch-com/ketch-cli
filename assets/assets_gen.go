// Code generated by vfsgen; DO NOT EDIT.

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets statically implements the virtual filesystem provided to vfsgen.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2020, 12, 22, 17, 32, 47, 55210784, time.UTC),
		},
		"/schemas": &vfsgen۰DirInfo{
			name:    "schemas",
			modTime: time.Date(2020, 12, 22, 17, 32, 47, 52659280, time.UTC),
		},
		"/schemas/manifest.json": &vfsgen۰CompressedFileInfo{
			name:             "manifest.json",
			modTime:          time.Date(2020, 12, 22, 17, 32, 47, 52709529, time.UTC),
			uncompressedSize: 24273,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x1c\xed\xae\xdc\x34\xf6\xff\x7d\x8a\xa3\x08\x09\xd8\x6d\x6f\x0b\x5a\x58\x51\x69\x7f\x74\x05\x68\x8b\xba\x14\x95\x42\x7f\x94\xbb\x91\x27\x39\x33\x71\x27\xb1\x83\xed\xcc\xdc\x59\x54\x89\x07\xd9\x7d\x39\x9e\x64\xe5\x8f\x64\xf2\x61\xe7\xeb\x4e\xa1\x8b\xa8\x84\xb8\x93\xd8\xe7\x1c\x1f\x9f\x6f\x1f\xe7\xa7\x2b\x80\xe8\x3d\x99\x64\x58\x90\xe8\x11\x44\x99\x52\xe5\xa3\x07\x0f\x5e\x4b\xce\xee\xdb\xa7\xd7\x5c\xec\x1e\xa4\x82\x6c\xd5\xfd\x87\x7f\x7d\xe0\x46\xde\xd3\xd3\xd4\xa9\x44\x3d\x87\x6f\x5e\x63\xa2\xdc\x33\xaa\x72\xf3\xf0\x9f\x44\xec\x51\x95\x39\x49\x10\x48\x59\x42\x7b\xa2\xc0\x1f\x2b\x2a\x30\x8d\x1e\xc1\xab\x2b\x00\x80\x88\x91\x02\xcd\x3b\x80\xe8\x80\x42\x52\xce\xa2\x2b\x80\x1b\x33\x3c\xc5\x12\x59\x8a\x2c\xa1\x28\xa3\x47\xf0\x93\x1d\xa6\x81\xa0\x54\x71\x25\x51\xc4\xa4\x52\x99\x86\x16\x35\xbf\xe2\x84\xe4\xf9\x86\x24\xfb\xb8\x12\x79\x74\x73\x05\xf0\xc6\x00\x23\x69\x4a\x15\xe5\x8c\xe4\xdf\x08\x5e\xa2\x50\x16\xe8\x96\xe4\x12\xcd\x80\xb2\xfd\xd8\xe1\xa2\x69\xf3\x77\x6b\xdd\x52\x09\xca\x76\x8e\xec\xf6\xda\x1f\x97\x25\x3c\xf9\xfc\xfc\x22\xc5\x2d\xa9\x72\xa5\x5f\x45\xe6\xd9\x1b\xb7\x54\x2e\x76\x8b\x00\x3f\x13\x3b\xc2\xe8\xbf\x89\x5e\xc0\x0c\xf0\x86\xab\x4b\x09\x37\x93\x3a\x60\xea\x0d\x59\x0a\x49\x62\x41\x98\xa2\x09\xd4\x00\x9a\x61\x25\x51\x0a\x85\x86\x18\xfd\xeb\x83\x57\x0f\xef\x7f\x76\xf3\xe7\x0f\x7f\xf8\xe1\xda\xf3\xe7\x7b\x5d\x52\x4a\x41\x0b\x22\x4e\x71\x42\x14\xee\xb8\x38\x79\x68\x7a\xd5\x10\x05\x11\xab\xf2\x3c\xba\x19\x52\xd7\x16\x4e\x4d\xa9\x03\x0b\x0d\xd8\x66\x0a\xb2\xaa\x68\xc4\xb4\x26\xe1\x40\x92\xf3\x10\x2d\x53\x52\xa2\x8a\xdc\xef\x9b\x0e\xc1\x12\x13\xce\xd2\xb7\x40\x72\x03\xf8\x2d\x10\x2d\xaa\xbc\x25\xfd\x6d\x3a\x6b\x55\x0f\xd3\xa9\x69\xb3\xf3\x9b\x77\x53\x2a\xe7\x28\x1c\xa8\x9d\x15\x3e\x8a\xc7\xce\x93\xb0\xf4\x75\x09\xd1\x44\x00\xde\x96\x02\xa5\xa4\x6c\x07\xc7\x0c\x19\xa8\xcc\x5a\x23\x2a\xe1\x40\x25\xdd\xe4\xd8\x9d\x3d\x50\xa5\x16\x5b\xcc\x00\xca\xa4\x22\x79\x7e\x77\x8a\x38\xeb\x52\x94\x10\x06\x1b\x04\x07\x1f\xd3\x39\x74\x5d\xb5\xff\x5f\x6f\x5e\x42\x4a\xb2\xa1\x39\xed\xb1\xb2\x21\x91\x08\x41\x4e\x01\x8d\xed\xcc\x6d\x86\x50\x85\x45\x6f\x57\x82\xeb\x0d\xc0\xeb\x48\xde\x40\x3c\xf5\xf6\xa3\x28\xa8\x8a\xb5\x14\x90\x5d\xd7\xbe\xb5\xdf\x53\xb6\x43\x39\x7c\x2b\xe8\x2e\x53\x32\x3c\xdb\xbd\x3f\xcf\x6e\x5e\xde\x78\x79\x28\xab\xb2\xe4\x42\x61\x1a\xe7\x84\xed\x2a\xb2\x0b\xa8\x83\xe3\xe5\xb8\x36\x34\xc0\xe0\x0c\x6c\x1d\x6f\x7d\x8c\xc3\xc9\xc5\x94\x95\x28\xb9\xbc\xcb\x0a\x1a\x08\x17\x24\x5b\x4a\x64\x8a\x92\x3c\x96\x28\x0e\x34\x69\x01\x07\x67\x0e\xd2\x18\x59\x46\x58\x82\x05\x32\xd5\x7d\x4b\x18\xc9\x4f\x8a\x26\xbd\x49\x1b\xcc\xc8\x81\x72\x41\xf2\x98\xa4\x07\x6d\x4d\xe4\x40\x1b\x4b\x14\x52\x9b\xa2\xbe\x17\xb5\x6b\xc0\x1c\xe3\x62\xaf\x7a\x73\x64\x21\x3d\x4f\xb1\x20\x34\xf7\x3c\x0f\x3c\x4e\x89\x22\xf1\x46\xf0\xbd\x26\x69\x62\xcb\xac\xbc\xae\xdf\x30\x37\xff\x72\xdb\x95\x62\x8e\xaa\x67\x2b\x49\x92\xa0\xec\xed\x40\xc2\x85\xc0\xc4\xa3\xbe\x5c\xa8\xda\x12\x4c\xac\x9d\xa6\x5a\x30\xd4\x29\x96\x25\x49\xee\x22\xb5\x35\x20\x70\x80\xe6\x70\xa3\x15\xca\x4e\x83\x6c\x0f\xe3\x0c\x9f\x6d\x7b\x5c\x6b\x7b\x08\x5f\xd4\xdb\xe1\x5b\xda\xe5\x2e\xf4\xa2\xe2\xd6\xd3\x2d\xcd\x15\x0a\x19\x75\x9e\xdf\x74\x87\x85\xdc\xa9\x7b\x5b\x10\x46\x76\x98\x7a\x5e\xb5\x78\xb1\xe1\x3c\x47\xc2\x06\x04\xb4\x99\xf2\x32\x43\x95\xa1\x00\x95\x51\xd9\xe3\x8e\xf6\xb1\x0e\x0f\x70\x01\x05\x29\xcb\x9e\x57\xab\x49\x3d\x07\x83\x26\x24\x88\x7a\x43\xde\x0c\x38\x60\xb8\x35\x4a\xbb\xc7\x0f\xf7\x49\x1f\xee\x27\x18\xb8\x93\xd8\x7b\x51\xf5\xc5\xb0\x9f\x03\xef\x31\xec\x29\xca\x44\xd0\x52\x75\x03\xf2\x8b\x11\xd1\x06\xef\x99\xea\x8d\x43\x42\xa4\xd6\x82\x3a\x4a\x66\x37\x1c\x99\x49\x65\x0d\xd9\x33\x6d\xa8\xdc\x1e\xa4\x03\x35\xf7\xe2\x75\x68\xfc\xc3\x46\xb4\xb9\x8d\xcc\x37\x57\xb3\x86\x8b\x82\xa8\x3e\x0b\x61\xa8\xc8\x6e\xfc\x9c\x10\xba\x33\x61\x54\xff\xbb\xdc\xf0\xbf\x9d\x23\x49\xf5\xb8\xc9\x9d\x82\x11\x5e\xf8\x3d\x4e\x7f\x84\x76\xaa\x41\x00\xc6\x24\x30\x25\x78\x9e\xa3\x88\x93\x4a\x2a\x5e\xa0\x88\xa9\xcf\xdc\x34\x33\x08\x4b\x05\xa7\x69\x3b\x52\x98\x39\x63\x7c\xd4\x96\x0a\x5c\x00\x94\x72\xb9\x70\xf4\x01\x59\xca\xa7\x56\x57\xd0\x44\x70\xc9\xb7\x6a\x01\xf0\xf3\x9c\xb2\xda\xe4\x54\x66\x93\x3c\x14\x7c\x5f\x2d\x1b\x3c\x9f\x9a\x8a\xd1\x1f\x2b\xd4\x11\xd3\x51\x06\x94\xd0\x8d\xd4\x51\x5b\x99\x71\x36\xb0\x9e\xf5\xbf\x1b\xef\xf3\x81\xc1\x72\xe0\x9c\x6e\xfe\x3a\x8a\xe1\x90\xdd\x41\x35\x04\x39\x8e\x31\x47\x66\xe4\xa3\x89\xf7\x1f\x7f\xf2\xe9\xc4\x88\x4f\x3e\xfa\x78\x21\x6f\x3d\x4f\x87\xcf\xfa\x4f\xba\xbf\xdb\xbf\x3a\x7b\xf5\x96\xe2\x2a\xaf\x8d\x8a\x0e\x44\x50\xb2\xc9\xf1\xf7\x18\x6e\x29\x51\xfd\x11\x6d\x8d\x62\xff\x3f\x8a\xb6\x82\xde\xfc\x8e\x34\x8e\x7b\xf0\x31\x03\x35\xe2\xb5\x97\xf8\xeb\x25\x9e\x7a\xca\x47\xcf\xf6\xce\x73\xfd\xf2\x0c\x8f\xbc\xcc\x17\x2f\xf1\xc2\x33\xfd\xef\x6c\xcf\x3b\xc7\xe7\x8e\x79\xdb\xbe\x2f\xf0\xa4\x04\x61\xdf\x7a\x19\x31\x0d\xfa\xd3\xb6\x32\xf9\x5d\xe6\xa8\x28\x87\xbc\x6c\xd8\xbf\x8e\x79\xd6\xa0\x4f\x9d\xe6\x60\xe3\x8f\x46\x79\x18\x4c\x70\xce\x3c\xfc\xde\x01\x82\x14\xb7\x94\xd1\x90\x0d\x9a\xc8\x73\xa2\x9c\x27\xc3\x42\x5a\xf3\xd6\x67\x65\xbd\x39\xce\xc2\x0c\x67\x3a\xbf\x09\x3b\x0e\x98\x1d\xc2\x9d\x99\xf5\x35\x29\x10\xf8\xd6\x54\xeb\xfd\x11\x81\xfd\xe7\x8d\x29\xcf\x3c\xba\x14\x39\x4f\x1d\xc0\x01\x49\x81\x89\x13\x51\x64\x74\xa4\x2c\xe5\xe1\x30\x32\x4a\x38\xdf\xd3\x91\x04\x2e\x25\x8a\x3c\x25\x27\x14\xfe\x28\xd1\x17\x23\xfa\x39\xf5\xfa\x18\x0e\xbc\xa7\x4f\xa1\xfa\xe3\x6b\x76\x7d\xf5\xf2\x05\xa4\xa8\x08\xcd\x7d\x25\x03\x98\x95\xce\x4f\x89\xba\x19\xb1\xc7\x53\x80\x03\x01\xb4\x4b\xf3\xfa\x79\x99\xfd\x1c\x91\x83\x05\x89\x4c\x9b\x97\x35\x60\x50\x1c\xb6\x94\xa5\x1d\xf9\x83\x23\x55\x19\xb5\x87\x5a\x5f\xbd\x7c\x31\x06\x70\x32\xb1\x01\x88\x32\x24\xe9\x68\xea\xa7\x45\x33\x27\xb4\x90\xa1\xec\x24\x94\x9f\x04\xb3\x3f\xb7\x89\x97\xe6\xda\x1e\x4f\x7d\x5d\xed\xf3\x2a\x44\xe7\xaf\x93\x5f\x35\x7f\x07\x0e\xc4\x32\x2e\x54\xec\x8f\x86\xa7\x9b\x01\xcc\xec\x76\xb0\x0b\x2a\x23\x0a\x74\x8a\x42\x84\x04\xca\x40\x22\x11\x49\x06\x02\x65\x95\x2b\x09\x84\xa5\xb0\x23\x3a\x3a\xec\x1c\x44\x06\x1b\x1d\xac\x72\x63\xba\x9a\xc2\x1a\x40\x98\x48\x7e\x3e\xaa\x75\xa6\x04\x64\x22\x10\xe7\xf4\x61\x98\xc3\x4b\x73\xe6\x1b\x33\xae\x96\xb7\x64\x9c\xe7\x83\x9e\x0f\x32\xe3\x47\xa3\x80\x9a\xa2\x4a\xa2\xb0\x47\xc9\x44\xee\x29\xdb\xe9\x10\x08\x48\xa5\x32\x2e\xe6\x77\x8a\x9c\x31\xdc\xe5\x98\xb0\x05\x64\xdd\xd1\x53\x03\xee\x9b\x06\x54\xe4\x97\x47\x54\x55\x69\x3a\x7b\x96\x37\xa5\xa8\xaa\x84\xef\x9e\x3f\xed\x32\x20\xe3\x05\x96\x64\x87\xab\x60\xd6\x93\x87\x60\x9b\xdc\xc6\x1d\x02\xaf\x02\x5f\x03\xa9\x4f\x92\x87\x68\x5c\x7b\x47\x5c\xf2\x9c\x26\xa7\x55\x48\x1c\x08\xb0\x20\x86\x28\xa4\x22\xaa\x92\xeb\x58\x6e\xa6\x0e\x41\x2a\xbe\x0e\x9e\x42\x51\x48\x6d\x4e\xdd\xd1\xf1\x10\x72\xca\x93\x55\x90\x53\x9e\x54\x05\x32\x65\x3d\xdc\x00\x6c\xce\x77\x7c\x65\x5b\x4c\xbf\x7d\xc7\x80\x6a\x86\x79\xa3\x8f\x28\xa7\x6c\xdf\x34\xe8\x34\x63\x67\x75\xd3\xd4\x2d\x73\xea\xf9\x19\x72\x4b\x03\x8f\x34\x75\xfd\x72\x19\xd2\x5d\xa6\xda\x21\x54\xfd\x48\xbf\xb5\xe3\x1a\x97\xd0\x80\x0f\x35\xeb\xd4\xcb\x5d\xde\x1b\xa3\xf9\x01\xf6\x57\x67\xc0\x64\x43\x8e\x61\xd2\x1a\x8c\x5b\x9a\x63\x37\x3d\x69\x83\xad\x39\xe4\x85\x4b\x99\xc2\x5d\x2f\x30\xe9\x2d\xc5\xce\x0f\x2c\xe5\xa1\x17\x65\xc3\xf7\xb5\x38\x1d\x80\x69\xa4\x5e\x93\x5a\x0a\x3c\x50\x3c\xae\xb4\xff\xc3\x8e\x3a\x07\x6d\x8e\x23\x18\x39\x75\x7f\x52\x90\x5d\xe7\xa0\x3d\x10\xa8\x77\x94\xa5\x13\x6f\xcf\x8c\xb1\x27\x54\x66\x42\x69\xc6\xd4\xa6\xbb\xcb\xc1\xf0\xdd\xab\x3c\x53\xd1\x66\x8f\x51\x1e\x0d\x0a\x97\x11\x3b\x11\xb0\x4f\x8f\x96\x22\x1f\x6a\x54\x1f\x89\x4f\xab\x26\x64\x7c\x88\x66\xa8\x5a\x01\x39\xef\x63\xf7\x2a\xd8\x62\xf4\x1e\x2d\x0b\xe3\x9f\xd0\xb9\x84\x33\x45\x92\xbb\x74\xfa\x34\x10\xd6\xe9\x59\x48\x9b\x06\xd5\x5e\x57\xcb\xbd\x8b\x82\x8d\x48\xbe\xaf\x74\x3d\x57\xf6\x5a\x5c\xf0\x15\xa9\x43\x89\x66\xa4\x30\xc9\x18\x4d\xc8\xb0\x40\x1d\x15\xc6\x98\xf9\x72\xbb\x68\x4b\x19\x61\x89\xe7\x9c\x48\x62\x52\x89\x4e\x7b\x13\xf4\xb2\xcf\x37\x1e\x7e\x5e\x62\xd1\xbe\x2a\xfb\xb9\xd0\xda\xdf\xb8\x69\xa1\xc4\xdb\x92\x0a\xb4\x7d\xf5\x8a\xef\xd1\x9b\x12\x0c\x8e\xab\xce\xb4\x7d\x61\xe6\xdb\xbc\xc4\xcd\xf7\x24\x20\x46\x3a\x3a\x78\x05\x6e\x05\xca\x2c\xd6\x6a\x28\x0e\x64\x79\xf4\xe6\x00\x40\x03\xe0\x1c\xaf\x9c\xcf\xbc\x3e\x78\xf5\xd1\xfd\xcf\x6e\x4c\x77\xf9\x9f\x3e\xcc\x66\xa4\x46\xbe\x7b\x06\x0b\xb8\xf1\xdc\x4e\xb7\xec\x30\xd3\x67\x31\x23\x70\x8f\x61\x06\x4b\xce\x3b\x5f\x09\x1a\xe0\xd4\xb3\xc7\x95\xca\xa0\x86\x6c\x02\xdd\x39\x8c\x48\xa9\xc0\x44\xc5\x9c\xc5\x55\x99\x12\x7f\x22\x3b\xc6\x09\x3b\x5f\xa7\xd2\x6e\xfe\x2c\x56\x1c\x71\x93\x71\xbe\xbf\x43\x3f\x7a\x0d\x61\x22\xde\xd6\x0c\x6e\xd9\x2b\x89\x89\xc0\x8e\xb5\xc4\x03\x32\x25\x57\x86\xe4\xa1\x98\xb9\xbb\xad\x63\x5b\x3b\xb2\xbd\xdd\x35\xbf\xb4\xeb\x85\xef\x9e\x3f\xf1\x47\xb7\x6e\x69\x6b\xc2\xe6\xbf\x13\x89\x9f\xfe\xe5\x3e\xb2\x84\xa7\x98\xd6\xac\x05\x0b\x51\x4b\x79\x0a\x8a\x83\xa4\x3b\x06\x8e\x5d\x1d\x38\xda\x68\x21\x53\x5f\xe8\xe9\x1a\x89\x96\x18\x03\x71\x61\xd8\xdf\x2d\x70\xac\x59\x48\xcd\xa4\x0e\x24\xb0\x25\xc7\x66\x1d\xfa\x25\x32\x45\x13\xa2\xb0\x2e\xb8\xf4\xa5\x69\x1e\xc1\x8e\x19\x7e\x4a\x83\xce\xde\x4f\xb2\x8f\xb1\xfe\xbe\xb7\x09\x7f\x12\xf2\x8d\xa5\xd7\xf7\x99\xae\xe2\x27\xec\xe0\x2a\xc0\xd7\x89\x40\xa2\x3c\x4d\x06\x83\x81\xdb\x2a\xdf\xd2\xc1\xa5\x06\xbb\x8f\x65\x79\xed\xbf\xf3\xd0\xbc\x76\x66\xdd\xff\xb2\x62\x23\xb3\xed\xa5\x81\x30\x9d\xee\xbd\x6d\x6e\x4e\x47\x3c\xf7\x84\xc7\x3c\x72\xb1\xdf\xe6\xfc\xb8\x2e\x8c\x3b\x9f\xbf\x01\xdf\x42\x0d\x0b\xac\x69\xbb\x74\x60\x37\x68\x88\x19\x36\xc3\x44\x34\xe9\xb7\x6f\x6f\xd9\x5b\x8a\xfc\xbc\xbd\x25\x73\x83\xa0\xac\x2a\x08\xbb\x2f\x90\xa4\xa6\x9e\x6e\x0f\x84\xb7\xd4\x9e\x02\x1b\x55\x75\x7c\x09\x06\x61\xde\x33\xc2\xb9\xe8\x59\xeb\x4c\xf0\x71\xa2\xe8\x81\xaa\x13\x10\x39\xac\xce\x86\xf1\x1b\x4e\xaf\xc5\x5f\xa7\x5b\x35\x0d\x1a\x98\xb1\xbd\x19\x3f\x86\x51\xde\x29\xd6\xd6\xc3\x6a\x74\xde\x23\xe6\xb6\x1d\x24\x8e\x27\x73\x8d\x4e\x60\x7c\x5b\xbf\x66\xc6\xd6\xdb\xf5\x4c\xd5\x2b\xdb\x56\x2c\xa9\x8f\xb8\x36\x08\x78\x8b\x49\xd5\xb3\x0f\x5d\x7c\xdc\x9c\x17\x84\xad\xef\xd4\x89\x65\x17\xbd\x83\xd6\x08\x71\xcf\x22\xf4\x49\x9f\x7f\x84\x38\xd1\xa5\xa6\x88\xdc\xc7\x3f\x56\x58\xad\x6e\x23\x5a\xd4\xaf\x54\x2f\x2b\xb6\xfc\xa5\x9c\xc5\x8a\x16\xc8\xab\x89\xf6\x10\x7f\x96\x0e\xdd\xd8\x88\x32\xd5\x0b\x29\x06\x24\x3e\x9c\x4f\xa1\xa8\xde\x5d\xda\xcc\xae\xbd\x6b\xc4\x11\xaa\xe2\x2d\x17\x71\xa2\x73\xe5\x3c\x0f\x9f\x44\xcf\xe9\x7e\xf4\xe5\x06\x63\xd8\x65\x92\x61\x5a\xe5\x18\x2b\x1e\x27\x39\x97\xf8\xae\xb1\xa7\x4d\xa0\x54\x44\xa8\x77\x8e\x40\x4b\xd4\x3b\xca\xbe\x0c\x89\x50\x1b\x24\xbf\x35\xdb\xae\x42\xbf\xba\xce\xa1\x24\x82\x8c\x44\xe6\xa3\xa1\x7f\xdb\x35\x18\x38\xe8\xb9\xf6\x12\xbc\xf2\x32\xd5\x0d\x36\xde\xf4\xe2\xef\x9d\x0e\x75\x4f\xd7\xd8\x7a\x8f\x07\x7d\x2f\x8b\x3a\x5e\xa6\x7a\x5d\xc2\xad\xc9\xf3\xba\x34\x82\xa1\xa4\xed\x83\x6c\x47\x94\x2e\xe8\x69\x36\x61\xd8\xae\xe1\x69\x28\x19\xeb\x41\x5b\x46\x9f\x0e\x23\xef\x6f\x05\x45\x96\xe6\x27\x68\x47\x7d\x0b\x29\x1a\xb9\xf3\xb3\x8c\xa2\x76\x28\xb8\x90\x86\xb3\x4e\xdd\x9d\x0c\x07\x0b\x0e\x24\xaf\x66\xd1\xb3\x52\x8b\x79\xa5\xca\x6a\x90\xbf\xaf\x50\x63\x0b\xc8\xd2\xfb\x87\x26\x77\x49\xfc\x35\x35\xd9\xee\xc3\x3b\xa3\xc6\x4b\xc8\x79\x2b\x3a\xbc\x84\x80\xb7\xae\xc0\x41\x62\x56\x6a\x6f\xc2\xd9\x96\xee\xc2\x49\xe1\xa2\xcc\x4a\x89\xaa\x1d\x84\x4e\x15\x87\x74\x90\xb1\xa8\x30\x74\x91\x3a\xcf\x1e\x4f\xd1\x30\xef\x6f\x1e\x5c\xb4\x88\xe3\x6b\x98\x9c\xc8\xb7\xbb\x7d\x7a\xd1\x8b\x0c\x61\x8f\x27\xd8\x52\xcc\x53\xa0\x12\x8e\x19\x0a\x34\xa2\x90\x12\x45\xe0\x48\xf3\x5c\xa7\xe2\x92\x1c\x4c\x5d\xf6\x1a\x5e\x64\x54\x42\x51\x49\xa5\x1f\x3b\x25\x2f\x51\x58\x08\xd7\x3f\x30\xf8\x92\x0b\xc0\x5b\x52\x94\x39\xde\x03\xba\x35\xe0\xff\x06\xef\xd7\xbd\x54\xf2\x7d\x0d\x9d\xb9\x8e\xcc\x96\xe8\x59\x12\xba\x08\x29\x33\x64\x5c\x37\x93\x47\x8e\xd1\xc9\x06\x17\x1f\xeb\x79\xb8\x61\x6d\x83\xb0\x07\xfa\xae\x14\x40\x25\x24\xbc\x28\x39\x43\x36\x52\xd3\x5a\x53\xe0\xf1\x10\x60\x6c\x83\xdb\xf3\x53\xc3\x8f\xa6\xbe\x8f\x39\x26\x0a\x8e\x19\x4d\xb2\x33\x51\xfa\x8d\x40\x96\x6a\x2b\x6b\x59\xbb\x15\xa6\xde\x9f\x5e\xc3\x13\x05\x09\x61\x8c\x9b\x0d\x23\x0c\xf0\x96\x4a\x65\xda\x15\x0d\xc3\x97\x9c\xdc\x5a\xe4\x43\x27\xa8\xf0\x56\xc5\x06\xdc\xdc\x42\x91\xcc\xf8\x31\xe6\x2c\xf6\x7c\x64\x68\x32\x37\xed\x33\xed\xc9\xd6\x58\x86\x7b\x7d\x29\xb2\x0d\xa4\x35\x43\x12\xce\x98\xfd\x40\x06\xf0\x03\x0a\x83\x38\x58\x42\xeb\xe7\xbb\x1e\xe2\x8d\xec\xea\x25\x60\x4a\x47\x5a\x1b\x66\x2f\xc1\x6a\x7d\x6b\x0d\x56\x39\xcc\x4a\xdc\xe6\xd9\xfa\xa6\x5b\x8f\x46\xdb\x6f\x84\x1d\xac\xa3\x6f\x31\x3b\xcb\xd0\x10\xbc\x17\x5a\x2e\x40\xfc\x59\xe2\x92\x8c\xb0\xdd\xe0\x0c\x60\x2e\x8d\xc2\xdf\x12\x74\x31\x19\xd9\x20\xd4\x28\xb4\x0e\x65\xe4\x80\x40\x2c\xeb\xc3\x8a\x5e\x50\xf6\x14\xd9\x6e\x45\x43\xcd\x78\xde\x3b\xab\x97\xa6\x20\xb7\xbf\x1d\xf2\xf3\x71\xfe\x42\x2b\x37\xa3\x0f\x4a\x1b\x91\x2f\x8d\x0d\x59\x5d\xcd\xed\x6d\xfa\xd9\x71\x82\xc0\x9c\x28\xbb\xc7\x1a\x8f\x15\x81\x41\x16\x70\xb1\x8a\xae\x69\xc7\xcb\x78\x9e\xa2\x58\x5f\xd2\x1d\x78\x86\x16\x54\xbb\x0a\xd3\x27\xdf\xb6\x75\xee\xc3\x66\x54\x9e\x1d\x3a\x16\xa5\xa7\xb2\xbf\xb4\x66\xec\x06\x7f\x6f\x14\x63\x6c\x45\xe1\x2f\xea\x85\xd7\xf6\x79\x27\x12\xad\xf5\xf2\x1c\x20\x34\x4e\xd8\x2c\xea\x1e\x6c\x70\xcb\xeb\x3e\x17\xd3\x72\x42\x8c\x5d\xbf\x86\x7f\x90\x83\x76\x6c\x04\xd2\x21\x44\x6d\xf4\x05\x4d\x2d\xdc\x3e\x27\xa7\x19\x20\x4b\xcc\xf3\x24\xc3\x64\xd8\xab\x07\xb3\xcb\xa9\xbd\x1d\xa5\x12\x24\x2a\xe3\x8b\x0d\x89\xc8\x4c\xe6\x64\x50\x81\xc1\xd5\x78\x73\x13\x5c\x8d\xef\x62\xcf\x8e\xc2\x82\x28\xdd\xf9\xf5\xb7\xab\x77\x2e\x72\x49\x05\x2f\x53\x7e\x64\xbf\x3f\xe5\x73\x62\x49\x98\x3b\x48\x02\xb3\xbf\x7a\xd1\xfe\xef\x01\xfc\xa1\x80\x4b\x14\xb0\xa8\x72\x45\xcb\xa9\xeb\xb7\xf3\xd5\xaf\x89\x08\x6a\xc0\xae\x32\x54\x7f\x0f\x92\xa4\xa9\x4d\x40\xce\x0b\xd7\xd9\xcd\x8b\xac\x19\xd8\xde\x7b\x22\xf5\xbe\x9b\xc4\x12\xdc\xd5\xb2\xc7\xdf\x3c\x31\xd7\xa9\x08\x83\x5f\x7e\xfe\xcf\xe3\x34\x85\xc7\x8c\xab\x0c\xc5\x2f\x3f\xff\x17\x36\x95\x52\x9c\x35\xac\x76\x9f\xc4\xec\xa8\x3b\x90\x3c\xe7\x47\xcd\x4e\x13\xbe\x0a\x6c\x2e\x9e\x9e\x35\xc5\xf9\x31\x5f\x9a\x72\x81\xf3\x1c\x9d\x7a\xad\xbd\xed\x3c\x7d\x4d\xb8\xfe\x70\x5b\xe0\xce\xa9\xab\xd3\x4d\x7f\x0c\x66\xa2\x00\xd8\x59\x7f\x5f\xab\x25\x02\x11\x2d\x49\x97\x2d\xad\xd6\x01\xb7\xd3\x5e\xbb\x2f\xb5\x18\x78\xeb\x2a\x30\x56\x45\x5c\xc2\xb9\x66\xe4\x8c\x8b\xb1\x70\x4e\x7c\xc3\x80\x6a\x5e\x8e\xdc\xd4\x1c\xa1\x62\xf9\x3d\x59\x98\xb5\xfd\x3d\xda\xc6\x07\x0d\x6d\xf6\xc8\xe0\xe0\xfd\x52\x08\x97\x09\xee\x82\x2e\xf8\x2e\xf4\x26\x70\xb1\xd4\x4f\x76\xf4\x5a\x8e\xde\x25\x9e\xfd\x49\xa4\x9e\xf0\x7f\xa1\xcd\x36\x10\xf8\xea\xdb\x67\x5f\xc3\x63\x63\xb7\x14\xd7\x16\xdd\x14\x0c\x64\xc6\xab\x3c\xd5\x2a\x60\x93\x06\xad\x03\x6d\x13\xc7\xb7\x75\x97\x94\xb9\x4c\x6b\x8a\x26\x29\xb4\x36\x7d\x84\x8c\xa0\xd3\x1b\xe7\xc3\xb0\x5b\xf3\x92\x6c\xa8\x44\x6e\x57\x42\x6c\xdd\x4b\xf2\x4a\x24\xa8\x4d\x79\x8b\x41\x96\x17\xae\x04\xe6\xdc\x44\x5d\x97\x29\x79\x59\xe9\x50\x07\x08\x7c\x6b\x03\x9d\x9c\x4a\x65\x61\xe2\xad\x4e\x9a\x48\x6e\x61\x79\x0f\x20\x5a\x14\x86\xfb\x4c\x17\x32\xd2\xf3\xf4\x32\x37\x95\x7b\xe5\xd6\x2b\xfd\xdf\x9b\xab\xff\x05\x00\x00\xff\xff\x52\x56\x45\x08\xd1\x5e\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas"].(os.FileInfo),
	}
	fs["/schemas"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas/manifest.json"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
