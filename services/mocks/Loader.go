// Code generated by mockery 2.7.5. DO NOT EDIT.

package mocks

import (
	context "context"

	config "go.ketch.com/cli/ketch-cli/config"
	app "go.ketch.com/lib/app"

	mock "github.com/stretchr/testify/mock"
)

// Loader is an autogenerated mock type for the Loader type
type Loader struct {
	mock.Mock
}

// Load provides a mock function with given fields: ctx, cfg
func (_m *Loader) Load(ctx context.Context, cfg *config.LoaderConfig) (*app.App, error) {
	ret := _m.Called(ctx, cfg)

	var r0 *app.App
	if rf, ok := ret.Get(0).(func(context.Context, *config.LoaderConfig) *app.App); ok {
		r0 = rf(ctx, cfg)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*app.App)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *config.LoaderConfig) error); ok {
		r1 = rf(ctx, cfg)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// LoadExternalFiles provides a mock function with given fields: ctx, cfg, manifest
func (_m *Loader) LoadExternalFiles(ctx context.Context, cfg *config.LoaderConfig, manifest *app.App) error {
	ret := _m.Called(ctx, cfg, manifest)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *config.LoaderConfig, *app.App) error); ok {
		r0 = rf(ctx, cfg, manifest)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
